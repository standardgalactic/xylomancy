So where did SteelStock beginner boosts go?
That was the thing we were doing to get started.
The quick answer is it got moved.
And it was still gonna start something on May the 4th,
but so the overall focus is now gonna be on, you know,
content that, in fact, let me see
if I can go find my whiteboard here.
Here we go, Unix infrastructure engineer.
So it's gonna be called the Unix beginner boost
probably next year, but there's a good chance
I'm gonna change the name of all of those boosts
to match the names of the books that I'm writing
that I'm starting to write right now
and I'm obsessed with writing.
So the first book we're gonna write
is Terminal Velocity,
mastering the fastest human-computer interface,
which has everything from the beginner boost
and you probably see me writing on it every day.
You can go look it up actually at github.com
slash, I mean, Rob, slash book.
And I've already covered this,
but you can go watch another video on this.
And we're gonna go back to this kind of thing.
And so that's what's happened to the boost, it's changed.
So most of the people that are interested in this
are interested in the Go coding
that they were learning at the boost.
We already decided a couple of weeks ago
that the Go coding in the boost is too hard for beginners
so who don't know how to code.
So we assume that you have had some Python
as your first language and or hopefully something else.
I mean, Python's a great first language for coders.
I mean, everybody knows this,
even I might not be my favorite,
but it doesn't matter, it's still the best one.
So my, if you're wondering what to do with the boost
and now all the rest of the content
from the beginner boost,
the terminal related stuff is covered.
I mean, we covered it all.
The only other things from previous years
that I covered in the boost,
skill stack related things were things like,
how to get ready for a job
and how to put yourself out there and stuff.
But mostly the beginner boost has always been about
becoming, mastering the terminal.
And that has got really clear boundaries now
so that we have boosts for everything
so we don't have this overlap.
So, this is my last take on what you should probably learn
in that way, what order.
And you can go look at this up.
This is in my about or you can just come ask me.
And so you go with the Unix beginner boost
which is pretty much just the terminal
and then becoming a pressure technology professional
which is all the stuff related to how to get a job
and network and all that stuff.
That needs to be its own series.
And frankly, it needs to be its own book.
I don't know if that'll be the name,
but that'll be it.
And so I'm really emphasizing strongly
that there will be books created to go with
each of these boosts.
And so the first one I'm really obsessed with
and that's what I'm gonna be writing all day today
is gonna be the keg ML parsers
so that we can start writing the book
and publishing it and getting as close
as we can to publishing the terminal velocity book.
And when I say publish, I mean really publish.
I mean paper version, no starch press,
you know, Amazon all that.
And I talk about that in another question.
So if you wanna know what to do,
if you're like, what happened to skill stack boosts?
I don't know what to do now.
Go learn Python.
There are so many ways to learn Python.
I just found a new book about how to learn Python
which I'll talk about another time.
It's really good actually.
There's a number of really, really great resources
for learning Python.
I don't need to cover that at all.
It's completely covered by the industry.
Learning the terminal is not.
So I'm gonna focus on the things that need help.
Learning go as a beginner is not covered very much.
There is a little bit of it.
There's learning go which assumes that you know
how to code already and know a little bit of go
but it doesn't, you know, and it's a good resource.
It is, it's a pretty damn good resource.
So I'm gonna let people go to that
if they wanna learn that.
And the people that have been with me on the boost
on Saturdays since we started doing co-programming
are wanting to learn go.
So there's gonna be tons of go programming
from now until January because I'm writing the parser
and then, you know, all this stuff for keg
and that's all gonna be in go.
So if you already know how to program
and you want to increase your go skills,
you can still come in and check in at boost time
and you'll be seeing me writing
and mostly coding in go, right?
We're gonna be doing a lot of Kubernetes stuff as well
but that's generally during the week,
not necessarily on Saturdays.
So I do plan on keeping Saturday
dedicated to writing, you know, keg-related go code
and potentially, you know, a book related to go of my own
but that's secondary to getting the terminal velocity
book done.
And then, so that's pretty much it.
That's what's happened.
If you wanna know what to do next,
you know, learn how to write your first program in Python,
go programming fundamentals.
At the same time, you can also learn
how to create containers, OCI containers,
you know, with PODMAT or Docker,
learn how to run local Kubernetes.
You could probably also learn
how to build your own desktop PC, set up a Linux server.
This is also stuff that we're doing differently.
So the boost is not going to be the same next year.
So I'm just gonna say it right now.
So we still will have the tradition of starting something,
probably the terminal velocity boost on May the 4th.
But it's not gonna be called beginner boost anymore.
It's gonna be called whatever
to match the book title that it goes with.
And I won't be having any boost
that does not have a book written for it already.
So this is something I'm really seriously going
to force myself to do over the next year.
I mean, I change my mind all the time,
but that is something that has plagued me since the beginning
because I am kind of loosey-goosey in how I do it.
I know what my outline is and everything,
but there's nothing to show for it after that
other than the videos.
And then people are like, well,
how do I get through the videos?
And they have a rough outline.
If they have a book to go through,
like an actual book that I can update week to week
if I have to, and that's why I'm so interested in Keg
because Keg will allow that
other than printing something that's out of date
in next week.
Keg will allow me to have people get the latest version
of the book every week if they want
and contribute and add whatever.
So that is gonna happen.
And then, so the most likely possibility for next year
on May the 4th will be a link to this map.
Yeah, I have links to all the maps in my description.
At least I will, if I don't have it yet,
I will get you, I'll get all this stuff.
This stuff is all kind of like my free form thinking
about different things.
And there's no way to link to all of my stuff.
So I will be making a resource
to link to these different whiteboards
that I have, I have a lot of them.
And the whiteboards are gonna be based on
general topics and stuff I got at the Home Lab
and then it's another thing I do.
So what's happened to the beginner boost in a nutshell
is that it's gotten more specific
and it's kind of fractured into a lot
of other specific things
for which there will always be a book, a guide
or some publication from now on.
So I know that sounds ambitious for me to do that,
but I've always wanted to do this and it's time to do it.
And keg needs to be built.
It's actually more important
than even covering a boost every year
is making sure I get keg finished
so people can start building the knowledge exchange
or the keg, you know, the keg network of, you know,
and share their knowledge and stuff like that.
So this, when we do it next year,
it'll be probably called the terminal velocity boost
and which is fine, you know, terminal velocity boost
and it will be like, what is that about?
And it'll be getting you fast on the terminal.
It will not include installing Linux at all.
It will include using bash as fast as possible.
And then there will be different boosts
if you want to call them that or sessions or series
or whatever about how to get Unix.
And I'm talking about Unix, not just the center of Linux.
If you, you know, we're going to go through, you know,
we'll have multiple series, you know, segments
about how to get Linux.
Because there's just, I mean, how to get Unix.
There's so many different ways to do Unix.
And in fact, I've always wanted to cover those things
including, you know, installing on hardware,
which we can cover now
because I have a capture card that'll do it.
And again, those are all topics
that are covered a lot elsewhere.
What's not covered is again, the very specific thing
about how to get fast with the terminal.
And so, so that's my number one priority,
finish that book first and do the rest.
So the content from the boost is still there.
And the go programming, if that's what you want
or, you know, the terminal stuff.
This isn't going to be writing the book every day
or something about the book.
You'll be able to get that any time.
And then you can always go back to the videos.
And then, and then what will end up happening
is the videos that go with for the boost
will get more and more polished every year.
And they'll become more segmented.
And eventually probably they'll turn into Udemy courses
which will be an option.
You won't have to do Udemy.
But if you want to do Udemy, you can,
otherwise you can like slog through the unedited video
that I used to make the Udemy stuff.
And there'll be a book that goes with it.
Okay, so that's what we, that's what we are looking at.
All right.
