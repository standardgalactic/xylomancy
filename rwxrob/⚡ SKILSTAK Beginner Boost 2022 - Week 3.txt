All right, so we have to do the, we have to do the wait thing.
We have to wait for 12 minutes, so just let everybody know.
Whoops.
We're going to run, we're going to run two back to back three minute ad breaks to
bias 54 minutes of time.
And that's going to be really fun.
I see that Leon's also streaming right now.
So he's doing his AMA stuff right now.
I apologize for the overlap, but it just has to work out that way.
Mostly because I am doing IRL streaming on Saturdays now,
which is a better day to do that because there's more activity going on
than on Sundays.
So I apologize for the overlap, but we're going to have to have that
for the rest of the time.
So here come the ad breaks.
We got, again, 12 minutes.
I'm going to go ahead and set a pommel for that.
Hello.
If you can't hear me.
Hey, thank you for that, Mr.
Happy boost Sunday.
I love that.
Again, if you, if you can hear me, if you want to watch Leon,
go for it and I'll be recording to YouTube recording by turbo for
eight bucks a month.
No more ads in any streams.
Yeah.
Turbo has is no ads in any stream.
It's only eight bucks a month.
I had no idea.
I never said he had any stream looking me.
Yeah.
So, yeah, we have another few minutes.
What can we talk about in the meantime?
I don't know if there's anything really that, that I mean, we were just
doing random things.
I guess I could talk about what's coming.
So turbo is eight dollars ad block free.
Ad block is free.
Oh, lol.
Yeah.
Yeah.
I mean, if you're going to do the ad block thing and
you know, vote to not support a streamer.
I mean, if that's your thing, I got nothing against you.
Everybody has to make their own decisions, but I don't, I don't turn
ad block on for Twitch because the people that are streaming, that's
the only way they get any kind of remuneration for all the time that
they spend to do it.
And yes, half of it goes to Twitch.
I know that.
If you're going to do ad block, then I, and you're not going to like
contribute in some other way to your streamer and you're just going to
suck down all that free knowledge.
You're kind of a dick.
I'm just saying, I'm not going to judge your life situation.
You may be in a place where you have no money and then later on, you're
going to come back and give, you know, streamers millions of dollars
because you made a lot of money based on the free knowledge that
gave you up front.
And there's been a lot of people who have done that and that's
totally fine.
I'm not, I'm not judging you.
But if you have the means and you turn ad block on and you don't
support your streamer in any way, yeah, you're a dick.
And I probably just pissed off everybody in my whole stream.
I really don't care.
I'm just telling you the facts.
Seriously.
It's the only way streamers get any remuneration for anything that
they're doing.
So, you know, just, just consider your life choices there.
You know, it's, it's, it's not easy to do this.
You know, I'm not the kind of guy who pushes advertising and stuff like
that and like that kind of thing.
And, and I hate that I have to, that, that Twitch doesn't let me have
the option of turning ads off, but, but, you know, at least this
way we're guaranteed to not get an interruption.
That's why we're doing it because either way you're going to get
interrupted.
Twitch is going to interrupt you and they're not even going to ask
unless you have ad block or something.
So you guys can make your own stuff.
Uh, get up supports Lattec.
When did that come?
They have K tech support now.
Oh my God.
That is so awesome.
Do you know what library they're using for that?
We have another seven minutes to go.
Do you guys, do you know?
And we got to read about that.
I'm going to read about that while we're waiting.
That is phenomenal news.
That is like really, really good news.
Yeah.
That's like really, really wonderful news.
I'm glad to hear that.
Let's go check it out.
It's does matchaxe.
Holy cow matchaxe is definitely the better one.
I'm going to do the CK.
Yep.
I'm going to try it.
I'll fail it.
I'm going to tell you right now.
I'm probably going to fail it because I haven't met.
I'm, so that's actually more of a calendar question.
I want to show that too.
So I plan on putting, um, get a past matchaxe support.
That is huge.
That needs like a full video by itself.
Wow.
No, I haven't already done it.
I need to catch up.
But I'm not stressing out over it anymore.
If I don't get in a time and I don't pass it, I don't care.
I'm just going to do what I can and go on a step at a time.
It's more important that I be healthy and happy than get all those certifications
within a given amount of time.
Is it the cert in 2020 too?
I don't know.
I don't know.
I don't know.
You tell me.
You found the blog post.
Thank you very much.
Oh my God.
This is awesome.
All right.
We have five minutes left before we get going.
Uh, and I'm, I'm not going to do anything to, to set up because I want to go through
the steps of setting up with everybody.
I'm back to sales.
I actually can talk later.
Yeah.
We'll be talking about that in, in five minutes.
Math support.
Oh my God.
This is great.
We're going to talk about this on the stream right away.
This is what I was talking, I was talking about this.
This is, it's got full matchaxe support now.
That means I need to definitely build that into my version.
The reason I think this is important is because having a, well, we'll talk about it.
Dean Matthew, get him.
Oh, well, we'll talk about it.
We're going to talk about that.
And, uh, I'm trying to hold back because I have a lot of, a story and everything I want
to talk about on that particular front.
Um, yeah.
So we'll go through all that.
Uh, if you're one of my IRL stream fans who's here, um, you know, you're welcome to stay
but we're going to be geeking out for the next five hours.
So if you want to go do something else, that's fun and come back.
I'll be doing IRL streaming at seven tonight, six or seven, and I'll be on the trail.
I'm going to try my new trail shoes out.
Um, so I mean, I got, I got people that come for lots of different reasons.
And, and if you're here for the just chatting, if you're part of the just chatting crowd
or the IRL crowd, then you might not be interested in the tech stuff.
So a couple minutes to feel better.
Rob is a sucker for a well done Markdown extension.
I am.
I won't lie.
It's nerd hours.
It is kind of like nerd hours.
That's not untrue.
Is that it so far?
The documentation?
They didn't do it.
No, they haven't.
The number one way to publish any work with math notation is to use math jacks.
Or a lot tech actually, but the matchaxe is like a simple way to, to put it in.
This is super cool.
I can't wait to talk about this.
Yes.
I talked about a city and we talked about that at length, uh, two weeks ago.
And if you want to read something on that, I've written about it.
Um, I, I, I started out thinking it was cool.
And then I really distal it because, because it's proprietary.
Um, so yeah.
33 seconds till our last ad break.
Got 80 or so people here.
Welcome.
Welcome everybody.
Um, yes.
So the question about obsidian, I've asked, I've answered it many times, but the short answer on obsidian is.
That it locks you into proprietary, even though it's got common mark support and everything.
Uh, you know, I don't, I don't believe in telling people they needed a tool.
You don't really need a tool.
You don't.
You don't even need to get them.
You don't.
You just need a directory and a text editor.
The end.
A piece of paper even.
All right.
Last three minute ad break coming right now is that means we're three minutes away from starting.
Um, but people don't.
A lot of people.
Can you hear me total?
I have to ask because once, once this happens, the ad break thing, it might actually.
Uh, a mermaid.
Yes.
Makes get a documentation really easy.
Absolutely.
They added mermaid.
I mean, mermaid is okay and stuff.
I don't know.
I mean, yeah.
Hey, snuggle.
Snuggle up.
I guess what a great name that is.
That is such a fantastic name.
I kind of want to be VIP just for your name.
That is such a great name.
That is such a great name.
Snuggle up.
I guess I kind of just want to keep saying it.
It's also somebody who knows the reference, which means you're old.
It's not a bad thing being old.
I'm old.
I mean, oldish.
Yeah.
Anyway, so this math support is awesome.
I can't wait to talk about it.
We have one minute and 58 seconds before we can get going on the boost, in which case
I'll turn the music off.
We'll have the music on the brakes only.
Yeah.
What was I talking about?
Oh, the obsidian thing.
Yeah.
The obsidian thing is don't build, look, build your own tool.
Least possible amount of technology.
And I don't know how to put that into words.
I need to figure out how to put that into kind of a couplet or something.
Like some sort of short way of saying it.
In my world, I use the least amount of technology required.
I detest over engineering.
To me, over engineering is using a machine generated UUID instead of
an isosecond identifier that it can be generated from a watch.
You just look at it and you know what to do.
To me, that's, it's over engineering to do that.
And so I'm a, I'm a big anti over engineering kind of person.
You just finished your first blog post and Markdown file.
I'll be running a lot until I have on-prem blog server.
Yeah.
Well, here's the thing, Scott.
So we got 53 seconds.
So the neat thing about it is if you write your stuff in Markdown,
it will work pretty much everywhere, anywhere at a time.
So if you pick like Wikimedia or, or any of these other methods,
they're not as widely supported.
And frankly, a lot of people will say, well, yeah,
but this does this and this does graphs and this doesn't.
You know what?
Most of the time you don't need that and you're,
you're over complicating your source code.
I saw, I saw, um, Sinai was doing, um, you know,
taking notes during their discovery phase,
doing some hacking yesterday and they were doing the whole thing as text.
They weren't even doing his Markdown.
That's about Markdown silence.
I'm like, why are you doing that?
John Hammond, big hacker, all about the Markdown, all about the Markdown,
because you got to write a report.
That's the job.
All right.
We got seven seconds.
Let's do this.
All right.
We're going to get rid of the, the starting soon.
We're going to get rid of the starting soon.
And then we're going to do a POMO.
POMO start how many minutes, 54 minutes, 54 minutes.
We got all four, all 54 minutes.
Okay.
Uh, so let's CD into the boost.
And, uh, we'll call it a day.
So here we, here we go.
And whatever the timestamp is, make that timestamp right now.
Um, this is what this is down here.
This is a timestamp.
Um, I'm going to get myself into where I need to be.
Give me a second here.
CD into the boost.
And we'll CD into week three.
And then I'm going to set my T monks to this particular location
for all my new sessions.
I'm going to close this session up because it doesn't have the
side bar and oh, we're still in the timestamps, uh, rep repo.
So I'm going to change that we're going to learn all these
get commands and stuff eventually.
Uh, also I need to turn the music off.
So music off for now.
All right.
Music is off.
All right.
And, uh, what?
All right.
So we're going to do a get switch.
You guys don't know about this yet, but you will.
Um, and I'm going to switch back to 2022.
So, uh, I'll get stash.
You don't know about that yet, but you will.
All right.
So now we're back to where we need to be.
Um, that whole thing about timestamp.
So, um, uh, Don Juan, Don Juan and a number of others have been
adding timestamps to the YouTube videos.
So the first thing I want to say is as John, John, I think I
said, right?
The first thing I want to say is thank you for all the people
who have been adding timestamps.
Um, and we're going to try to get better at that.
This is something that that we've kind of stolen from
learn with Leon.
I mean, I've always tried to put chapters and stuff in them,
but I've never had the energy to do it because I think so much
time.
So the community led by Don Juan, uh, free career have been
doing it for us.
And so here's again, just a recap.
This is administrative.
You got, here's all the boost stuff.
You can go back and watch them.
Uh, I don't know how much of this we got into this last one.
So I don't know if it's even here.
Did you get a comment in here yet?
We still need to add a comment for this one.
This was kind of the first one.
So there's really nothing there as far as I can tell, but we,
we ran out of room because there's only 5,000 characters.
So that's a thing that's going to happen.
We're going to have timestamps so you can click through here
and get to where you need to be.
Uh, if you want to participate in generating those timestamps,
uh, please contact John Juan and talk about it in the discord.
All right.
So if you haven't joined our discord, go to that.
Um, there's, there's so much conversation going on in discord
and lots of people helping each other out.
I can't go through it all right now.
So I just want to recap that this is a thing.
Uh, another, another couple of administrative things that I have
to cover.
Uh, so unless I'm going to, I'm going to bullet point these.
So, uh, help, uh, us with timestamps.
Yeah.
And, and I should probably get in the habit of doing this.
Uh, I'm going to try something fancy.
I'm going to try something fancy.
Bang, bang.
I'm going to do ISO sec.
There's our ISO sec for the next thing that we're going to cover.
All right.
So we can put, oops, let's see this.
Let's put this one here.
And I mean, what, let's go back like five minutes.
So 17, 16, let's say, I don't know, let's put like, uh, 14.
How about that?
About 13.
All right.
So that's the timestamp.
Um, so, okay.
Next, uh, up, uh, and I guess I could do it.
I'm going to, I need to make a command for this.
I guess we're going to do all of this and get, so please don't worry that this,
I'm using a filter command to enter the timestamp here.
And then we'll use these to regenerate timestamps.
I think I think a little bit longer, but I think it'll be,
it'll save us a ton of time later.
All right.
So, um, other things.
So we are now, uh, boosts, uh, sessions, uh, moved to Sunday.
Okay.
Why Sunday?
So the quick version of this, I don't want to burn too much time.
Uh, the reason we're moving to Sunday is because there's,
a lot of people are home on Sunday and they're,
they want to do things on Saturday and clean and stuff.
Uh, the other main reason is because on Saturdays,
I'm doing a lot of IRL streaming now, um, because,
so that's the main reason.
Um, so, I mean, we can put that here.
It can put, you know, I don't know if I want to put both points there,
but I'm doing IRL streaming and it's not dead.
It's not dead.
It's not dead.
Masi was like going off in there.
Um, so the, the, the boost, since we started the boost,
it's been a little bit more active.
Um, which is what happens every year, frankly, IRL streams.
So IRL streaming is the thing.
If you, if you want to tune in any other time during the week,
uh, I am doing IRL streaming at least four hours a day every day now.
On Saturdays, I will be starting like 12 hours streams,
um, moving fully into the IRL space.
Um, I just want to mention it because if there's anybody,
who wants to learn how to set up an IRL streaming rig, uh,
or who wants to do it for education or culture live streaming or,
you know, cultural journalism, lifestyle journalism,
and things like that, you can watch that.
Um, I'm gotten a pretty dialed in thanks to primarily to, uh,
people on the stream among them, the most probably is Temen,
T-E-M-I-N is one of the greatest contributors there.
Uh, is this a part of the boost kind of because it explains
why the boost is getting moved to Sunday.
All right, we're still going to do the four hour thing on Sunday.
Uh, it also means that we don't have a dedicated day just for AMA.
It means I can do AMA, uh, any day, any day.
Uh, yeah, a lot of people are shy and that's fine.
I don't want to live in a world where everybody IRL streams.
It would be crazy.
But if a few of us do, it kind of makes it interesting,
particularly if you're international.
Along with that, um, I just want to announce the plans that I have
for the coming year.
Uh, I am going to aggressively seek a English as a second,
teaching English as a second language certificate.
And I don't know when, but one of the days of the week,
I will be teaching English on Twitch, uh, as a second language.
I'll be going through, first of all,
I'm going to be going through the,
the, the, the top full certification myself.
If you want to participate in that, let me know.
Uh, if you're one of these people like me,
who's had a dream of like, of like going all over the world
and traveling.
Um, and if you, thank you for the sub.
Um, if, if you're one of these people who likes to travel
and have a reason and a way to make money or even if you want
to yacht all over the world, you can go into port
and then you can like, you know, teach.
And, um, that is something else I want to announce is that
next year, um, every other year we'll be going to Europe.
Uh, so we'll be in Vienna next year in September.
So I don't know if you put that on your, on your calendar.
We're going to be in Vienna and we're going to be, uh,
someplace else in Germany, I don't know if it's going to be
in Berlin.
We'll be, we'll find out the, the place we're going to be.
I'm going to be having two RWX, uh, con sessions there and
we'll be getting together and drinking beer and doing tech
and, and maybe some English lessons and we'll be writing
it off my taxes because my wife is going there.
She's going to be, she's going to be, have her first gallery
show in Vienna, Austria next year.
Uh, you heard it here first, uh, please, her own friends
don't know this yet.
I mean, I mean, they haven't been told that, but I've been
telling people because I want to get excited about that.
And there's, there's a lot of momentum building up to next
year.
Um, so, and it's going to, there's going to be a lot of more
IRL art streaming and so like that.
Uh, why is this matter?
Because learning English, the English language, uh, if you
don't, I mean, you can spend all that, all the time you want
learning technology, but if you don't know the English
language, you're going to be really, really, um, you know,
crippled, handicapped.
And I don't like that.
That's true.
It's just the way it is.
So, and I got knows I love languages.
I love teaching languages.
Um, and I certainly love helping others.
So, so I'm super excited.
This was a dream I had, uh, of doing this in college.
In fact, all the cool people in college and the liberal arts,
you know, language department in my college were always,
they would also add teaching English as a second degree,
as a second language.
And then they would go to Portugal and they would get
immersed in Portuguese, the best way to learn possible.
And they would learn the language of Portuguese while
they were teaching English there.
Chinese is the future.
I actually went back to school after six years of school
and say, can I stay here for Chinese?
I said, nope, you're done.
Get out.
But I still want to learn Chinese.
I want to learn, I want to learn all of them.
I want to learn enough, you know, conversational language.
So I'm super jazzed because this is like a dream for me.
Um, and it just, it doesn't mean that I'm going to be
bouncing all over the place.
I'm going to be.
And so Saturdays, Saturdays are going to be,
um, discovered North Carolina and we're going to be doing
different towns in North Carolina, um, cities, you know,
where there's people and be doing the IRL kind of thing.
So please tune in, uh, for the IRL stuff.
Um, and, and I, I'll stop talking about it.
I'm super excited because I really love it.
Um, where's the tech encoding going to go?
It'll still be there, but it just isn't going to be as much
because I'm going to have more of a balance.
It includes yoga, uh, skateboarding and all that jazz.
Um, I'm super excited, particularly because it's summer.
All right.
Enough of that.
Um, so what are we doing?
That's, I think that's all the administrative things we had
to cover.
Does anybody else know of any other administrative thing?
Uh, 2023, September in Vienna.
Yep.
That's the, that's the current goal.
I don't know when or where it's going to be.
We just know it's going to be Vienna unless it gets canceled
for some reason.
My wife's gets, gets canceled.
Uh, and my wife has family there and so we'll be,
we'll be traveling over there.
Um, but if you are anywhere within the region and you want
to start, we're going to have, I don't know when, but we're
going to have a, we're going to have that another Art of
X kind of meetup, uh, in America.
And I'm starting, I'm going to start pair streaming with
members of the community.
So if you live in North Carolina and you're in my neck
with a woods and you want to go walk around and shoot the
breeze while we walk around Morseville or NASCAR or
Charlotte or Asheville or Outer Banks.
If you want to, if you want to be involved with that,
please let me know.
Uh, I know I spent a lot of time, I spent like 10 minutes
on that because I am super excited about it.
And I want to make sure everybody understands that
that's going to be probably 80% of the streaming that I do.
I mean, not truly because I'm co-working and that's like,
you know, seven hours a day, six hours a day.
So, um, there we go.
Uh, what else we got?
I think that's all the administrative stuff.
Let's get into it.
So what, what is the first thing?
Let's just recap what we did last time.
Um, can you IRL rig handle streaming and discord audio,
uh, for remote walk and talk?
Nope.
I can't stream to discord.
I mean, we could probably, no, actually, I think I could.
Yeah, I absolutely could.
Absolutely could because it's, uh, it comes from OBS.
We'll talk about that later.
Lots of galleries there as well.
Yeah.
My wife's going to be showing a one.
So I'm really happy to go.
Let's talk about, let's actually do our coding.
Uh, no, I don't know.
I don't know.
There's, there's, we'll talk about the discord thing.
We'll probably integrate that right now.
We're working on rigs and stuff and we're, you know,
up to eight hours and stuff.
Um, by the way, all your money and your subs and everything
and your GitHub, uh, go to pay for all of this.
So to have an IRL rig, you have to, you know,
you pay at least 200 a month just in, um, streaming account services.
Um, so I just want to thank everybody for that.
You are truly supporting every part of the stream.
And I think that by teaching English as a second language
and doing culture streams and the boost, I think I,
I'm hoping anyway that there's going to be enough value there
to keep that coming so we can do cooler things
and you can buy me more beer.
Well, we go on a walk, walkabouts.
Um, you'd have to watch some of the later,
the recent IRLs to get that, that was a joke inside joke.
All right.
So we've got 42 minutes to actually do something important here.
Uh, what are we learning?
Hey, JB.
Today we are going to be getting our, so let's,
where did we leave off?
All right.
So let's, let's read, let's read what we did last, last time.
Just to, again, I'm doing what you would do.
And some of you probably been through the, the stuff we can go through,
went through melodies of a mentor, blah, blah, blah.
What is the shell we covered?
What is UNIX and Linux?
We did a little bit of Linux history.
We talked about when to use app and app get.
We focused on getting started installing stuff on our VM.
We talked a lot about the file system and what an I node is and what a shell is.
Back we had some comp, some, some questions and Heather going,
we had some questions in the chat about that, uh, about what a shell is.
And so what is shell?
What's a shell history?
Uh, and we're going to be returning back to the shell.
Here's the commands we learned with our man, pseudo apt,
all these different ones, uh, how to search for things and using apt.
Uh, and we're going to continue down that road.
We need to, we learned CD, PWD and LS,
which are the primary commands for looking at where you are.
Um, and we'll continue down this path.
So what are the goals for today?
The goal for today is to get your virtual machine, uh,
running in a state where it can be connected to.
So you want to drop being a, we want to have you by the way,
I didn't cover it here, but we,
you're supposed to have Microsoft terminal installed either.
Either I term two, if you're on a Mac or windows terminal.
Okay.
And installing configure the terminal software.
We did not go through that.
Um, I can kind of show you some of that,
but it's relatively straightforward.
You just have to go through and install it.
So hopefully you'll have that done.
Uh, we will be installing, uh,
get bash today and I'll talk about why we'll talk about get bash versus,
we talked a lot about WSL two last week,
although I don't see it on here anywhere.
We might have to recap on the WSL two stuff really quick to talk about why I
don't think you need it.
Um, it's just to hassle,
they install it and then it'll cause you problems later.
Um, and we talked about replete.
Okay.
So what do we need to do?
The first thing we need to do is get our VM running.
So I'm going to go or now guard your eyes.
Where's my sunglasses?
I almost need to put them on for this.
Um, we kind of need sunglasses because it's like so annoying, right?
Um, it really is.
We should probably update, but we're not going to.
Uh, my Anton is good.
So here's my boost machine.
Remember, we didn't install anything on our boost machine.
We just put, we just put, well, that's not true.
We put a bunch of server on there,
but we didn't do anything really intense beyond that.
Right.
So we're going to click on boost and then we're going to start it.
And that will start up the kind of lame, uh, console.
What, what's the difference between a console and a terminal?
I think we did install Neofetch actually.
Yes, we did.
That's not on there.
I, we did.
We definitely did.
We practiced, we got good with app get.
In fact, I think that was the goal, right?
Is that we would get good with app get and increase your ambient light.
I'm not going to increase my ambient light.
I don't like that.
No.
Remember the password?
I think I do.
Hey, I remember this time.
Terminal includes the shell.
The question of what the console is.
Yeah.
They actually both do.
Um, generally speaking, when someone says the console in Linux and Unix land, they
mean the actual console, like a physical console, or they mean an equivalent of a
physical console that is digital, a console.
Yeah.
So this is, so this is the console, right?
Um, I mean, that's a rough definition of it.
Actually, J beers might have some better information on what they think a console is.
I, that when a console is very literally the physical thing that you would see.
And we talked about on Linux, there's actually a great thread and discord about this, about
how you have seven different TTYs.
Uh, and they are all consoles, by the way.
So on Linux, if you're running it off of hardware, which we are not, but if you're running it
off of raw hardware, um, you get like seven or eight consoles and they are TT each one
that has a TTY.
And we talked a lot about TTYs last time.
We talked about the origin of the terminal.
We talked about, you know, uh, what a teletype is and what it has to do with any of this.
I was really happy to see, um, Siren talk about this on the OSCP channel today this week.
Uh, they talked about that a lot and they talked about a command for spying on any process
that's running using a piece by.
I strongly advise that you subscribe to the OSCP channel.
Um, I know I don't have anything to do with them.
I'm not being sponsored by them or anything.
Um, I don't even remember what the name of it is, but you can find it.
So, um, virtual console VTY probably, I don't know.
PTY was the, is the, you know, the pseudo, um, term, terminal stuff.
In fact, Siren actually in the last, and if you want to go watch it, in the last VOD,
they broke in and they got, they got a reverse shell
and they spent a certain amount of time getting it, elevating it into a TTY
and having it be a true console that was interactive, a true terminal.
And it was kind of interesting because as I also saw in the story last week,
if you actually break into a system like that, getting a TTY is going to make you more easy to spot
because they can listen, I mean, they can listen to anything that you're doing on the system.
But, but if you do that, you know, it's easier to trace a TTY than it is just an application.
You can trace the application, but it's a little bit more complicated.
Um, so those are some stuff. Thank you for the links.
Again, I don't, I don't have anything to do with, uh, offensive security at all.
I think that they're doing great things there.
Just like I think hack the box and try hack me, you're doing great things.
And I've told everybody that there is kind of a security slant to the things we're doing.
Um, my hacker skills are so soft right now.
I didn't even know there was a piece by, by the way, written and go.
I'm just going to put that out there.
Um, so, uh, you know, we'll do some of that stuff for fun.
Let's keep going. So we got 20, how much, 36 minutes.
So we have a connection, uh, but what we really want is we want to be able to connect from our terminal.
So we want to be able to go like this and start up a, start up, um, you know, a terminal, windows terminal.
And we want to be able to connect to it, but we're not quite ready to do that because we need a way to connect to it.
And anybody know how we're going to connect to it?
We've talked about it before.
Anybody remember kind of a little bit of a pop quiz.
What is the program that's going to let us connect to a remote system SSH?
Good. Okay.
Secure shell, uh, which is, you know, the industry standard for this kind of thing.
You can do all kinds of stuff with it.
Oh, great answers.
Thank you for that.
SSHD.
Yes.
So now this is the part where I struggled because, you know, some, a lot of you probably have an intuitive,
intuitive knowledge of what the network is, but I want to back up just a bit before we do SSH.
And I want to talk very high level about what a network is.
And I'm not talking, I'm talking like five, six minutes.
We're not going to really blow them, you know, a lot of stuff on this.
Okay.
So we're going to say this.
So, uh, how, let's see how to connect to our, uh, VM.
Right.
And the answer we talked about was secure shell.
Right.
So let me actually put another timestamp.
I'm trying to do this fast.
Please bear with me.
Uh, we'll get some software written that does that automatically at some point.
Um, but I don't have that right now.
All right.
So how to connect our VM.
We're, we're going to use the secure, uh, secure shell, but what is secure shell and, and why do you care?
And, you know, this is covered very well on the internet.
So I'm not going to overly, you know, belabor the point.
There's extremely amazing good videos that are made about secure shell out there, uh, that are done with much more care and quality than,
than I will be able to do right now.
But what it is.
So in a nutshell, you have, uh, we're going to hit this again during a network day, but whenever you have two things connect on the internet,
whether it be a web browser going to a website or it be a, you know, a secure shell program connecting to a secure shell server,
you have what's called a client and a server.
Okay.
So, uh, I'm going to put brief overview.
Uh, I guess, I guess we'll just leave it here.
So a brief overview of a client and a server.
You tell them that bite your tongue.
That's an inside joke.
Tell them that is a method of connecting that is not secure.
It's all in plain text and can be sniffed off the wire and you can be owned immediately.
So don't use that Frank.
So we used to, we used to do that.
Um, so what are we talking about?
All you can do is you can imagine there's a computer out there somewhere and it has a program that's running on it.
Right.
And we can demonstrate this.
There's lots of commands I can do to show you this.
It'll just confuse you.
There's a, there's a program running and that program is listening.
It's listening and there's, you know, we're going to tune it for listening.
There's like all kinds of commands for this.
If you especially want to be a hacker and that, that program is just sitting there and it's listening for inbound connections to your network card or your network interface controller or your network card,
Nick card, whatever you want to call it and you, that your computer could be connected to the, to the network by a wifi.
It can be connected from a wire called ethernet.
It could be connected in any number of ways, but that connection to the internet and we'll talk about how packets and all the internet work.
Oh, we have a whole day we're going to spend on that.
Frankly, you could spend, you know, a month on that topic.
If you want to get good because there's, you know, network engineers, that's all they do.
And if that becomes a specialty you want to do, maybe that's, you know, you can consider that.
But for right now, all you need to know is that there is a program that's running on a computer all the time, even when the computer, nobody's looking at it.
And it's called a service or a daemon.
Daemon as in serving me to probe a website.
Yes.
And that, that thing is running and it's listening all the time and it's, it's listening for incoming connections.
It's like, you know, if there's another program out on the internet and it walks up to its door and knocks on the door and says, hey, can we talk?
And he's like, no, go away.
And otherwise it's like, okay, yeah.
And it says, okay, let's make a connection.
And I was like, okay.
And now they're talking.
So now they have this, this interactive connection.
It's almost like, you know, my, my aunt Nona was actually an AT&T operator and she saw a stock.
She died a while back, but, and she would, you know, connect one ringy dingy, you know, she would like connect in the wires and make the connection.
And then they could talk to each other.
That's, by the way, is called a stateful connection because the connection is maintained.
It's kept open.
Every keystroke from this side gets responded to on this side and vice versa.
Okay.
That's a stateful, you know, network socket connection.
And those are all terms we're going to really dive in more on a networking.
But for right now, when I say we're going to install a secure shell server, that's what I'm talking about.
We're going to be installing a program that has one purpose.
Its only purpose is to listen for incoming requests for a connection from what's called a client program, which is a program that says, hey, I want to dial you up and talk to you.
You've probably heard the term browser or client before.
Maybe you've heard the term worldwide web client or web client.
A client is something that's connecting into the server and keeps a connection.
Now browsers, we'll talk about stateful versus stateless connections.
Like when you request a single web page, and sometimes the server will give you back that web page.
And then it's like, we're done here.
And then you say, but I have another thing I want.
And it's like, it happens really fast, right?
And to speed up the internet sometime ago, they added stateful connections so that you could request multiple things in a time and it would keep going back.
But the type of connection we're making right now is not like that.
This is the kind of connection where if I type a keystroke, I want to see it.
That means the server has to get it, process it, and echo it back to me.
And we don't need to really get into the nuts and bolts of that.
Other than that, we need to install a server so we have something to connect to.
If you're a hacker and you break into a system, one of the first things you're going to install on there is what's called a reverse shell because you're going to install software on there, a server,
so that it will accept connections from you so you have a backdoor.
And that's basically you've just opened up a connection that's going to be open.
It might even be disguised as a printer process.
It looks like it's a running printer program and not necessarily your backdoor.
There's lots of cool things there.
And SSHD, the SecureShell server, is one of the better backdoors to install because if you hide it well enough, nobody will know.
And then they've got to do other things to find it.
So it's kind of great.
You got it?
Hey, let's talk SSH server.
OK, kind of great.
That's a good way of putting it down.
OK, so I think that's enough.
So that's enough background.
I think that was more than five minutes, but now let's actually do the installation.
OK, so the first backdoor, it's called a reverse shell.
There's lots of, I mean, yeah, a reverse shell is, I mean, strictly speaking, it's more than just a server.
Yeah, yeah.
And SSHD is the name of the program that's running that takes our incoming connections.
And we are, I don't know if we can get to it today, but we are going to talk about processes.
We need to do that.
But I kind of want to get this connection stuff done, and then we'll come back and circle back and talk about it.
We need to talk about file management.
We talked a little bit about browsing the file system.
We haven't talked about creating and deleting and removing and renaming files yet.
And we haven't talked about processes, the running programs on a system and how to look at them and dig into them.
And then we're going to do piece by and all kinds of fun stuff.
And we're looking plus proc.
That stuff's coming.
But right now, all you really want is you want a connection.
So like, oh, let's get on with it.
So, so here is our boost thing.
And we can look up the IP address of it.
So the first thing we have to do before we do anything else is we need to make sure that our computer is on the same network as everything else in our computer world.
Okay.
Now strictly speaking, there are ways to get around this.
And I'm sure some financial person is going to remind me of that.
But the easiest way to do this, and you got to be very careful because when you do this, you're actually making your virtual machine into as if it were a piece of computer, a laptop sitting right next to you on your Wi-Fi network.
Okay.
So what we're going to do, and you can actually change, somebody told me this a couple of years back, you can actually change this while it's running.
And without having to restart it, which I find absolutely fascinating that it can do that.
I really do.
But we need to go find.
Wait.
Oh, it's stuck.
So, yeah, it's, what is it left?
Can, is it, is it right control to get out?
I don't do that very often.
All right.
So the first thing, and I'm going to be doxing my IP and stuff.
I've done it a million times before.
Please don't hack me.
There might be consequences if you do.
I'm just going to say, I'm not too afraid of, neither is not.
I'm second a bunch of other hackers.
They're like, yeah, you can have my P.
I don't care.
But we're going to, I might end up doxing my P here.
The average beginner, I would suggest you not dox your IP and tell you know how to take
advantage of people thinking they're hacking you.
You know what I'm talking about.
Okay.
So then, and then, and then tell everybody your IP.
It'll be fun.
All right.
So we're going to click on settings for boost here.
Right.
And without getting too deep into the, to the conversation about networking, we're going
to click on network here and we see a problem.
Okay.
So, and I'm going to try to keep this as simple as I can without getting into deep network
theory and packets and all that jazz.
Nat.
Okay.
Uh, one day you make a bug bounty for your house.
Yeah.
Yeah.
I was, I, there was, I saw another hacker interviewed and they're like, he actually in the middle
of an interview gave everybody his IP.
He goes, please hack me.
Cause his whole house was a big, was a big honey pod and he was like, yes, please hack
me.
It'll make my day.
Very fun.
So just be careful.
I mean, there's some people out there that are not as open with it.
They may actually dox their IP and pretend like it's a mistake and they're just getting
ready to own you.
So just, so, you know, but if you're a beginner and you don't know how to own people yet,
you might not want to dox your IP necessarily.
It's not bad these days.
You can't even do inbound connections.
Okay.
So what are we doing?
We're trying to figure out network address to lent translation to say, so what is different?
What is Nat and bridged?
Okay.
And I, again, I'm going to try really hard to not go down into the weeds on this and
stay high level.
This is something that I really appreciate about Leon, by the way, who's also streaming
right now.
Leon is really good at cutting to the simplicity of the thing and, and without overburdening
you with too much information and I'm the kind of guy who likes all the backstory.
So I tend to overdo that.
Nat versus bridge.
So Nat, the term Nat stands for what?
Who knows?
I know.
I'm just going to see if anybody else wants to do it.
Leon's doing just front end stuff, mostly front end.
Yeah.
Network, address, translation.
There we go.
So that's a big fancy word, right?
So let's, this is, you can kind of intuitively guess what this is.
Again, I'm trying to promote sort of an auto didactic approach to this.
How would you figure this out?
We just kind of saw me, saw him on YouTube.
How would you figure this out on your own, right?
So the way to envision this is, so if you could picture all the computers at your home,
you already know that you have to have a wifi router.
If you have a, if you have a, if you don't understand how you have a wifi router at
home and then you could attach your phone to your laptop, most people know that already.
I'm kind of assuming you know that, that that's the thing.
Um, yes, that's right.
And what Nat does is because we have a virtual machine running inside of a host machine,
that's how you distinguish them, by the way, the host machine is the host that's hosting
the virtual machine is inside of it, right?
And the picture here would be nice, but do your own visualization in your, in your brain
about this.
You can pull it up later.
Um, yeah.
When you, what you can imagine is you can imagine your computer, the host computer is
kind of like a house that has wifi, you know, and it has its own, you know, wifi password
and its own protected network and all that stuff, right?
And so every virtual machine that runs on the host computer is kind of protected.
It's on its own little, um, IP, uh, place.
And so, and they don't know about routing yet.
So you can think of it as that.
So if you can picture, go into your friend's house and you got a phone, right?
You go to your friend's house, you got a phone and you go, oh, can I use your wifi?
And they're like, yeah, what's your password?
And so you pull in the password and now your phone is on their wifi, right?
It's using their network, their local, private, protected network.
And there's lots of ways to break into it.
And we'll talk about that someday, but not today.
Um, you never, we never just trust the wifi password.
They're so easy to hack.
It's crazy.
Um, so, you know, what you, what you could, but the, the, the.
The point is, is that you're on that network.
It's separated from everything else and it's, to some degree it's protected, right?
They call the thing that connects to the internet from your house, you know, that, that, that
thing that's in the corner, it's blinking, that's connected to your, to the internet.
That's called a router.
And the reason it's called a router is because you can think of mail, all these little packets
of data are like, you know, they're, they're flying around the network and they need to
go someplace.
They'll have addresses just like mail and they go to the router and the rest is, okay,
you all need to go here and usually it's the same place.
And then that's kind of a, you know, a spoiler alert for how the internet works.
We're going to talk about that.
But that's what's happening.
All those packets are flying around and, and they're all getting routed.
They're all getting routed to the internet and they, they come back.
So, and it's pretty magical actually if you think about it, because all of those packets
are going out through the same router and you might have 25, 30 different devices in
your home that are all running using the same router.
And when somebody out there answers that packet and send something, that data back to you,
whether it's a game or a webpage or SSH, then that router says it uses, it looks at
the packet and it's like, you go over here and it basically mail sorts it and sends it
off on the right way so that your computer gets the right knowledge.
Okay.
So that means network address translation.
That means that it's taking all of these connections.
They're coming to the router.
They're getting some data added to them.
It goes out and then when it comes back, it has a, it remembers where that packet came
from.
So it knows who to give it to.
And that's what nowadays happens.
So whether it's happening on your Wi-Fi router or it's happening in your own little network
inside of your host computer, your computer is like a little, you know, it's like your
friend's house is where you got to borrow their Wi-Fi, right?
Your computer is that.
And every one of the virtual machines running inside of it is all like it's a computer in
that house.
So like if you had a laptop and a phone and all that, you can imagine that each of those
is a VM inside of that, inside of that house and they're all accessing the internet or
whatever through, through that routed connection.
Now there's a problem with this though, because what happens, let's have to send each of us.
Yes.
So what, what happens if you're on your laptop?
Okay.
What happens if you're on your laptop in your house, in your actual house and you start
a virtual machine and it's, it's in its own little tiny house?
Can you get to it?
No.
So if your laptop was on the internet and the, the computer, you know, the, the, your
virtual machine is in a nice protected, it's as if your, your virtual machine is, is a
laptop or a machine inside of somebody else's house.
And so if you try to initiate a connection, there's ways around it, but if, but if you
were to try to initiate a connection to this private virtual machine that's hidden inside
of this host by NAT, you won't be able to see it.
You can't get to it, right?
Unless, unless they initiate a connection out, which we'll get to, it's called a tunnel,
but we want to cover that right now.
Now another way to do that though is to tell, is to tell the virtual machine, and that's
when we switch over to bridge.
What we're doing by changing it over to a bridge adapter, and there's lots of other
ones we're not going to stress about right now.
But what a bridge adapter does is it says, okay, we're going to pretend like this, that
this virtual machine is not actually inside of the host.
We're going to pretend that this virtual machine is actually next to the host.
And that's still, that's confusing, I know, because it's like running inside of the computer
that can, they can't exist without the host computer.
But as far as the networking is concerned, the virtual machine is now just like any other
computer sitting next to your computer that you're playing games on or something.
And if you go look at the IPs and stuff of your router for your wifi for your house,
your house sees, you know, your house wifi or something, it will see the, hey, there's
a new computer.
Yeah, so it's like, it's like, it's inside of your house, just like the rest, right?
It's not inside of the host house, it's inside of its own house.
And it gets an IP from your actual router.
So then when you, when you boot it up, its IP changes.
And you'll notice the IP will change and that we won't get into IP ranges now, but usually,
so first of all, 192.whatever, those are the private, you know, those are ones used on
your wifi.
If you're working for a company, as a good chance, it'll be a 10 dot address because
10 dot is a much broader number that's way more, we're not going to get into it, but
that's way, way, way more possible numbers in it.
And both 10 dot and 192 are what are called reserve numbers.
Now we haven't even talked about what an IP address is.
So I think we did a little bit before, but we're going to hit it again really quick.
So all an IP address is, is, is an address to your house.
And again, we're going to hit this one another day, but you can think of the IP address as
being the, the address to your computer.
Now strictly speaking, it's not, it's, it's kind of a way to get to it.
And I don't want to get into the difference between that and MAC addresses and stuff.
So an IP address is a way to get to a computer, ultimately, ultimately, that's what it is.
Okay.
I'm, I'm having a really hard time, but I got to make sure that we stop with that, everybody.
We're not going to get into MAC addresses.
If you know what a MAC address is or a hardware address, there is another address that every
device that connects to any network anywhere has that is supposed to be unique.
And it kind of goes along with the IP address, but not strict, but not, but it never changes.
It's not supposed to, but we won't talk about MAC address just yet.
When we get into networking, we'll talk about that.
Why don't we care about the IP address?
Because the IP address is going to be the thing that's going to give us our connection.
You may, you know, the, whenever two computers connect, whether a server and a client or
of any kind, web, SSH or anything, they have to know how to connect to each other and they
have to have an IP address.
You're like, but Mr. Rob, I always type, you know, rdbxrob.tv or something.
I don't ever use the number.
And that's something called domain name lookup, which we'll also talk about on network day.
But you can think of it as like a 1-800 number that, that goes with the, the actual number,
right?
Like a name that's memorable.
That's the only thing a domain name is.
So, so in other words, if it is bridged, does it have the same IP address?
No.
If it's bridged, it gets a brand new, if it's bridged, it gets a brand new IP address.
In fact, you'll see that when you change it.
And one of the commands that, the minimal commands for the, again, we're losing one
command at a time.
I didn't, is IP space A. All right.
So IP space A will give you your IP address.
And you'll see it's pretty simple right now.
I don't think that, there there is, okay.
So we're not going to talk about loopback addresses, 1.27, we'll talk about that later.
But see down here, see this one here, number two, if you keep looking through there, you'll
see INET and it says 192.168.1.35.
That is the IP address.
And there's lots of other information here.
I'm not going to explain it right now.
If you want to do that on your own this week, that's fine, we're going to cover it during
a whole day.
We'll go through all of this stuff and we'll do NMAP and all sorts of fun stuff.
So what's the advantage of a bridge connection over a VM if one wants to SSH into it?
So depending on how your VM is set up, for beginners, the easiest way to SSH into your
VM is to make your host bridged.
Because your connections from, from what I remember, your connections from your computer
into that computer, into, even if it was the host computer, won't make it because it's
still, it's like you're outside.
Another advantage is that you can actually SSH into your VM from a laptop.
You can SSH into it from a phone on your local Wi-Fi network.
You can SSH into it from another machine.
I do this all the time.
I'll actually be at the dinner table sometimes coding on a laptop and I will SSH in and I'll
actually be streaming from this computer.
So one of the reasons that we're switching over to bridged is because of other advantages
that we'll give you later.
And you can add multiple VMs and, and have them all, it's like you're just adding more
computers to your, to your own network.
That's the advantage.
The advantage is, is it lets you SSH into it, okay?
Yeah, is there a six?
Yeah, please.
Yeah, there's lots of great materials on that.
Let's put that in the, in the reference links.
Thank you for that.
Bridge uses the same physical interface with a different IP and MAC address.
Yep.
That is a very, very accurate description that uses words people might not understand.
So I, I'm all for that.
So let's do, we're going to do a related section here, related.
If you, anybody else had any good links here, since this is kind of pair programming session,
if you want to go look at those, there's lots of things you can go.
Anybody else has any resources?
So bridge mode is like adding another computer in your house.
Exactly.
That's the most succinct way to say it.
That is the most successful way to say it.
Um, and so, so that, that's what we're talking about.
Did you get a connection?
Congrats.
So as soon as you switch over to bridge, you've got a different address and now you have something
to connect to.
Now if I remember right, we didn't actually install open SSH, so I'm going to actually
take one from Siren's book of education.
I really loved watching Siren the other day.
They were like, well, what if we try this and they, they, they, they do the same sort
of thing that I did for skill stack for years.
They, um, they deliberately cause you to fail and then you can like, well, what's going
on?
Why isn't it failing?
I love it.
I love that style.
So let's actually do that.
All right.
So I have, I have 192.168.1.35.
I have an IP address.
Whoops.
We did the IPA.
Let's make sure we put that in our notes.
If you guys think this is taking too long, I'm sorry, but I am doing it more the way you
would do it so that you don't forget to take the notes too.
Okay.
So what was the command that we used for that?
Make sure you get this in a note someplace.
Okay.
We did, and I don't know how you're taking notes, but just, just make sure it's there.
We did IP space A, right?
And if you want, you can grep out that one, but that's pretty much fine.
So like, uh, show all, um, uh, IP addresses.
I mean, that's not completely stating it properly, but it's good enough for beginners.
Um, the systems approach, what is that about?
Give me a guess of the else.
Uh, let's see.
What was the question?
Well, we'll come back to that.
We'll come back to any questions time.
I've got to be good at not doing questions until we have question time.
All right.
So, and that's with us in 11 minutes.
All right.
So we've got all this going on and now we want to connect it, right?
So if you're on Windows and you don't, if you have a terminal, great, I'm going to try
something.
I'm going to try something a beginner might try.
So they might know that they can get a command line, right?
So they might know that they can run a prompt.
So this is DOS.
This is going to fail, but I'm going to show you what you might attempt.
You're like, okay, can I SSH from here?
I don't know.
Let's see.
SSH.
Do I have SSH?
Ooh, I have SSH on here.
Where did my SSH even come from?
Does anybody not have SSH on their computer?
Just type SSH enter and see if it's there.
Does anybody not have it on their computer?
Remember, this is not Linux that I'm on right now.
This is my Windows machine.
Does anybody not have it?
Mac comes with SSH by default.
Mac comes with SSH by default.
Does anybody else not have it?
You got it?
Okay.
If you have it, great.
I think it's actually a standard thing now.
If there's any reason that you don't have it, I'm going to write about this right now.
What is git bash and why would I need it?
Okay.
I'm going to talk about a tool that I still love that's fallen out of favor since WSL2,
but I happen to think it's still much better.
Use putty.
Putty is another thing you could do at this point if you wanted to.
It's worth mentioning putty.
Do you have a link to putty?
Let's actually do that.
Let's learn putty at the same time.
What about putty for SSH access?
This is the ... You know what?
We're going to cover it because you need to know both of these.
Let's do git bash first and then we'll do putty next.
Anybody who wants to download putty right now can go for it, but we're going to do git
bash first.
Git bash is a tool.
If you go to git-scm.org, I think it is.
If you're on a Mac, don't do this.
You don't need it.
In fact, it's broken on Mac.
The argument is for this command, but they might not have Man installed yet.
Here we go.
Download this.
Download for Windows and get the latest.
I'll go ahead and do an upgrade.
We're going to other git.
We're going to download for Windows.
Click here to download the latest git for Windows.
This is a tool that was created to use git, which is a source code management tool that
we will get to.
We're going to go through in the installation process.
I still think everybody should install this.
The reason I like it is because it gives you bash without going through the hassle of WSL
2.
I'm not going to get into those weeds on that.
If you want to ask me about that on an IRL stream or something, I'll give it to you.
I've told everybody that a million times, but we can go through that.
This is free and open-source software, blah, blah, blah, next.
You can pretty much just accept the following applications, just files that need to be replaced.
Please close them.
I'm running bash right now.
I'm not going to be able to.
Go through and install with the defaults, and I'm not going to do the defaults for you
right now.
If you have any questions, you've got Discord.
The reason for git bash is that it automatically gives you a bash command line.
The way the setup is not complete, do you wish to exit setup?
Yes.
You can go ahead and go through that, but the thing that's cool about that is instead
of having a bother with the EXE, why not WSL, WSL is a huge fail for a number of reasons
that I delineate in excruciating detail.
The biggest fail with WSL is that it corrupts your files.
It's never up to date.
You cannot connect block devices like USB to it, and it's just a total disaster.
I went through it.
I thought it was a really good thing.
If you really want the download on WSL2, you can go look at my videos on it, videos WSL2.
I was a huge proponent of it, and now I'm not, or you can go read my ZET entries on
it.
I'll post both of those for you, and you can go read about that, that I strongly advise
against using WSL2, because first of all, it's harder to install for a beginner, like
way harder.
If you're going to use WSL1, they're not the same, and I don't want to get into the
details on that.
I still think git bash has tremendous value for most people because of this, because first
of all, it does permissions correctly.
WSL2 gets permissions completely wrong, which is so terrifying.
I just don't, I can't even get into the details.
If you really want that, come back during another stream, we'll ask you in question
time.
So, we're going to click on start, and we're going to click on start, and we're just going
to start topping, B-A-S-H, and bash comes up.
Yeah, please don't burden the chat too much with all those details right now, because
they don't have no idea what you're talking about.
As you can see, yeah, that's right, Garfield, okay, so, but you know what, let's save them
for question time, and I'll look up.
Guys, look here, we have, what do we got right here, right?
I have a bash thing, so, the takeaway here is install git bash.
You know what's really cool about this?
I can use bash shell commands on Windows files.
You cannot do that with WSL too, not truthfully, you cannot do that.
You can sort of, but not really, not in a big way, I mean, as I can do find and all that
stuff that I learned from bash, which you're going to learn, you can now use it on this,
including git.
Now, this is just a tiny little terminal, but I want to show you that, this terminal,
let's actually turn up the scope on this, I think, I'm deliberately using just the terminal
that comes with it, right, and let's change it, there's lots of other ways to do this,
but I'm going to deliberately, I'm going to bump up the scale and maybe change it to
a bunch of mono, which is my favorite, I had to install that font, I'm not going to
install fonts here, that is not part of scope here, so, we're just going to do this, we're
just going to apply a very basic shell, alright, so I'm running git bash, right, I'm running
git bash, and we're going to use a couple other commands, let's use clear, what does
clear do?
What does clear do?
Clear clears the screen, let's put that here, right?
And so clear clears the screen, people always ask me why I don't use control L, because
control L is an Emacsism, and that's why, just know the clear command for now, alright,
so we have, we already talked about what this stuff is, we talked about this is my name,
the at sign, you can't really see it, we talked about the host, and that I'm in my home directory,
we talked about that last week, okay, so now that we have SSH, let's try SSH, alright,
but if you don't want to just run it, and want to see if you might have it, you can
do which SSH, and that'll tell you if you have an SSH on your computer, now you'll notice
that it was installed as a part of some of the other stuff, and that's just the CLS,
I did not know that, thank you for that Frank, so let's do that, so let's do which, which
SSH, display full path to SSH program, so this is the way to see if you have the program,
by the way, which, anybody know, question for our other people out there, what's the
difference between which and type, I might as well cover it, what's the difference between
which and type, they both have very, there's another one called command too, they have
very significant differences, and we're going to cover those at length during the bash day,
but I'm going to mention it here, so type SSH, it gives you a little bit more verbose
thing, exactly, so type will tell you if, whether or not it's a command, or it's something
else that you can run, that's not a command, and there's lots of things, there's functions,
there's aliases, and stuff like that, so we're getting a little bit ahead of ourselves, but
I want to mention type, because almost always, type is the better thing to use, almost always,
type will tell you, I mean, you might do a witch SSH and forget that you created an alias for it,
we're going to, we're getting the aliases later, type is a shell built in too, and so you can
actually do type type, and let's say type is a shell built in, right, you can do type ls and see
that ls in my case is an alias, and we haven't gotten to aliases yet, but you can see the
difference, right, if I overrode SSH with something else, I would do type, and it would tell me
something, it overrode it, this is also for security, if you want to know whether you're
getting pwned or not, this is a good thing to do, unless they've trojan the type command
built in, which is really impossible, then you can actually see if somebody didn't sneak something in
there, that's going to get executed that you don't think is the thing you want, like PSSWD,
which would change your password, which is a, that's not a Windows thing, but all right, so why
did we do all of this hassle, and I'm going to confirm, we installed git bash, so that we could
git bash on Windows for free with a few really easy clickable installs without messing with WSL2
or any of the other ways to do it, you know, we already went through a lot of hassle just to put
the VM on there, so this is the easiest way to git bash on Windows, on a Mac you already have it,
every single thing that I just did on Mac you already have, and I'm going to repeat it again,
the scope of the beginner boost is getting to use Linux on Windows or Mac, if you want to run on
your desktop, I have more power to you, but you still need to know those two ways of doing things
as well, so just add that to the list of things you've learned, all right, we've got a minute left,
we are really, we're ready to try our connection, but let's, let's try it here, we've got SSH,
we have our IP address, so let's go look at our IP address, again, this is, this is the command line,
this is DOS, I think it's important to notice that you can have DOS as a shell, you have Bash as a
shell, you could have, you know, the shell program that we're interacting with, it doesn't matter,
as long as it runs the program, right, so you can do either both of those ways, but we need to go
back here, we need to go look at our IP address, am I on the right box, yeah, so what's our IP
address, 192.168.1.35, and you'll come to memorize those first three numbers because they're pretty
common, so we're on 35, so I'm going to go back here and with our final seconds of our, of our
thing before question time and break time, let's try a connection and see what happens,
where's my, where are you, where are you, I've lost it, oh there it is, okay, so here we go,
SSH 192.168.1.35, all right, that's just the IP address, and we're going to try it,
and it's like, hmm, the authenticity cannot be verified, the fingerprint is black, okay, that's
fine, we'll go ahead and accept that, yes, that's fine, and we'll click okay, and it says, host a
key authentication verification failed, hmm, pseudo TTI will not be allocated because ST
standard N is not a terminal, well that's interesting, I haven't seen that before, let's try it from
Windows terminal, actually, let's see that when we come back, I'll show you how to run
bash as from Windows terminal, that's what this is, when we get back, when we get back,
that's what we'll do next, so we have a little bit better terminal, so because, well, you have to
kind of right click on it, I'm not used to doing this, so you see how git bash is one of the options
here, so I can run git bash, and when I do that I get a brand new terminal, and it gives me problems
because I have stuff in my thing, but that's, this is my, my new fancy terminal, all right, so let's
try it here now, ssh 192.168, it shouldn't work actually because we don't have a server, I'm
trying to show you that, .1.35, it should say do you want to authenticate, you say yes, oh I didn't
type yes before, and there it goes, it says what is your password over there, it's like
rob at whatever, well what is my password, my password is password, right, uh-oh, it's not
going to work, I wonder why, did you get in, did you get connected, all right, well, wait this,
when we get back from the break I want to show you why this isn't connecting and what problems
you have, this is a little bit tricky for beginners, so we're going to spend the next segment
getting connected and running remote commands and stuff like that, and then, and then we'll
kind of rehash all of that, so it's now break time, here comes the music,
and do-do-do-do-do-do, do-do-do-do,
if you have questions, now's the time to ask them, especially if they're off topic.
you
you
you want to use the first one,
you want, I mean the one that has LO in it is the loop back address, you don't want that one,
you want the one that says E, the one that's 192, usually, yeah,
you made it in, good job, did,
if config is deprecated now, yeah, it's been deprecated for a while,
you can use it, but it's been deprecated, I have config and IP config, it's probably worth mentioning,
but it's been pretty, it even ran Neo Fetch remotely, cool, awesome, it's pretty, it's
pretty fun feeling, isn't it, the first time I remote connected to a computer, I, I was like,
giddy, and I, here's something really cool to think about, what you just did is exactly the same,
if you spun up a box in Amazon or Azure or Google, you know, same thing, yeah, they didn't
have it learn pipe commands yet, tomorrow, but they'll learn them eventually, I don't want to
hit them with too many things at once, you just telling that to connect to routers and switches,
no, no, no, I don't even think they do that anymore, Telnet has a hypervisor,
not hypervisor, what is it called, like a hyperterm thing, yeah,
some, it depends, Telnet will actually do serial connections because it has, yes,
Telnet has some things in it that, if anybody's ever used hyperterm, this whole terminal thing,
you can actually do the terminal thing with a serial connection, so that's not even an IP
network connection, you can do it with a serial connection, and Telnet has serial connectivity
built into it, so you sometimes can use, you know, terminal connections like that to connect to a
router that you're plugged into, you've got a serial connection right into the router,
Telnet should regularly not be used for anything, if anybody tells you to use Telnet, I don't care
what it is, you should ask them why immediately, Telnet is a completely insecure connections,
yeah, if you had a serial connection, okay, I feel better about that, thank you for telling me,
if you have a serial connection, then there's nothing to wire tap, except for the physical
wire itself, so in those cases, Telnet is more of a thing, because now you have a serial, when
you do that, by the way, when you do a serial connection into a terminal like that, you're
actually not using, you're using a terminal, but you're using a console, it's as if you plugged in
a piece of hardware, especially if you're using hyperterm, you're plugging a piece of hardware,
and you took it in, you got a whole serial cable, and you plugged it straight into the computer,
and so using Telnet to connect in that way is totally acceptable, because there's, there's,
you can see the wire, no one's going to sniff the wire, right, and so that's fine, that's fine,
and you can use hyperterm if you're on Windows, or you can use Telnet if you're on Linux, or Linux,
it gotta be really careful when we talk about Telnet, I mean, I know Frank was joking there,
and if he didn't put a cap after it, I wish he wouldn't, because, because people, people will
try to use Telnet, SCP, yep, can you copy a file, yep, use SCP, SCP, and there's also SFTP, and we
are going to cover many of those today, because those are probably the most important commands,
RSYNC is built on SCP, RSYNC is how I'm going to build the, the Keg, the knowledge exchange
grid will be built on RSYNC, it will be built on SCP and RSYNC, that's how you'll be able to browse
the knowledge exchange grid that's coming, I'm going to build over time, it's all about RSYNC,
why is the ad break time already?
Well, we have 54 minutes of uninterrupted ad time for every six minutes of ads that I run,
and you can't run six minutes of ads unless you fill in six minutes between there, which is up to
be about 12 minutes of break ad time, make a repair in a lab, they still have two machines
with Windows 98 connected using RS2 with 3132, wow, it was defaulting to your Windows username,
I had eggs, I just had that error and I'm just about, we're going to cover that, so you're ahead,
eggs is ahead of everybody, so yeah, it's cool that you figured that out, did you figure out how
to do that? Good for you, good for you for figuring that out on your own, yeah, I mean we didn't connect
for lots of reasons, but that was one of the main ones, yeah, yeah, that's exactly what you do,
or I mean even if you researched it, I wouldn't hold it against you, you know, that's the way to do
this, right? I've got five minutes, do I have enough time to make new coffee? Anybody else have
any other pressing questions? 192, can I SSH with 127? No, you can't, and we're going to talk about
them, I was trying really hard to not talk about the 127 IP, but it sounds like we're going to have
to talk about it, because I was trying to hold that off to Network Day, but there's been enough
questions about it, I'm going to cover that, why can't I use the 127.address, all right, so we'll
answer that one after the break, and yeah, Network Day is not for a while, I know Tonya Fahey has
talked about doing a Network Day with us, right? I'm trying not to get sucked into Network Day
today, this has been a long-running challenge for me, because as soon as you start talking about
SSH, you're now talking about, we already talked about Nat and Bridge, yeah, Nat by far is more
secure, Network Day takes lots of prep, I know, it is, and so I'm trying to cover the minimum
necessary for them to make connections, and then we'll move to Network Day, we'll cover all that
in depth, I don't want to cover Network Day until we do the Discord bot, and then we'll actually
write a client and a server, and we can talk about timeouts and HTTP headers, and all of that jazz,
you know what I'm saying? I think that would be the time to move on, yeah. Hey, JBears is on,
anybody want to go to watch JBears? JBears is a great hacker as well, they've been hacking online
to help people out, does it professionally, lots of great people out there, I need a better,
I saw Chris Nova shout out the other day, now I was really impressed, it was really fun,
just kind of like a confetti shout out, I gotta step up my game there,
you have an idea of how to possibly teach networking starting from level one all the way to level seven?
Yeah, I would love to talk through that, and I want to get it down to five hours if possible,
I mean, I want it under four hours actually, if we can do that, I call it just enough networking,
because look, you can spend your entire career learning networking, V-Lanning and all that stuff,
and you know, packet mangling and packet sniffing, and I did, I did a lot of that,
you know, I just don't, I don't want to send people down the wrong, you know, path too easily.
We are going to use Nmap though, because that's a fun hacker tool, and everybody can learn
about networking from Nmap. My Nmap skills are a lot trocious, because I don't do it every day
anymore. Yeah, so yeah, it'd be really, really fun. All right, we got two minutes and 20 seconds.
What is the topic roadmap for this course? Just go ahead to the boost, if you click on the boost,
the, it's not really a course, first of all, it's what I call like live mentoring, and we're just
kind of pair programming things together, and pretending like you're with me, I'm doing the
same thing I did for several years at Skillstack, in private one-on-one mentoring, I'm just
trying to do it with 121 people. So, so it's not always customized to the user's needs,
but that's what it is. The goal of the boost is fundamentally to get you, if you want one,
to make you ready to get an entry-level tech job in back-end development, back-end OPSEC,
offensive security, or back-end system administration and cloud. It is not going to
cover everything, but it's, this is why it's called a boost. If you go out to the boost page,
if you click on the boost link, there's a little right up there, and it tells you my comparison
about, you know, getting, learning how to ride a bicycle, and then getting a boost from somebody
and getting help, and then you have to learn how to pedal and steer and everything on your own.
It's, it is, it's slower this year than it's ever been. The last two years, I tried to do it
fast-paced, lost to everybody, and I would tell them, you know, you don't need to go on your own
time and go study this, but this is what you need to learn, and then we didn't make time to do it
together, and so I'm not doing that. This year, one of the biggest differences is, I am doing
every single thing that I talk about with you, which is going to push out the content a lot.
It's going to not even finish probably until September, but I think that that's better because
we want people to be, it's more like pair programming, right? Now, some things I have you
do, like for example, install git bash. I'm not going to walk through all the steps of installing
git bash because it's going to change or how to install MS terminal or things like that. I mean,
that's, I'm assuming that you have admin on a machine, you know how to use a computer,
that you know how to use a web browser, you know how to type, and you, you know how to install
software, at least on Windows and Mac. I'm also assuming that you only have Windows and Mac,
that we're not going to get into the deep, the guts of like doing hardware. All right,
we are 14 seconds from starting again. Our next session helped us get extra, I don't think so,
but it could definitely help. I don't think so, but it's a helper for sure. That, you know,
we should ask, you should ask any ask you about that. Yep. All right, so we are now live again.
So let's go back and restart the POMO. So POMO start, and we're back on our 54 minutes on that.
All right, so a number of questions come up during a break that are related to this.
And one of the ones I was trying to avoid, because again, the reason I'm trying to avoid this is
not to avoid you. It's, it's, I don't want to suck you down into the weeds too early on things
like networking. And I'm struggling really hard right now. Tony Faw and I are going to put together,
you know, as best we can, a full, you know, exploration of what networking is that will
try to fit into four hours on a day, someday in the future. And Tony Faw gives, you know,
presentations all over the world for money and they get paid for it. So we can, we're going to
combine notes and, and we've got other principles. So if you don't feel like, if you feel like, I
don't understand networking, I feel like I've got a gap, please calm down on that and just know that
you've got enough knowledge right now to make a sugar sale connection. And that's all you need
for now. And it's the hard thing about tech is there's, there's certain things that it's like
chicken and egg syndrome, right? You got like, you have to learn this thing in order to do this
other thing. And then you can learn this other thing more deeply once you know the other thing.
And there's these like interdependencies, which in your learning, which gets very complicated.
If you're a guy like me who likes very OCD about what do I teach next? What am I going to cover next?
It's very hard because there's cross interdependencies all over the place.
So that's why I'm doing this very organically with you this way. Because one of the questions was,
what is this other address? All right, this other address. And I was trying to kind of like
skip over it and be like, Oh, no, they're going to ask about that address, but I'm going to talk to
it. Okay, so this other, so you see that when I did IP space a, there's two addresses there.
There's, there's this, this first one, which has the word loop back, and that's the word we're
going to come back to, but make sure you remember that. And then we have another address that says
E N P O S three, we're not going to break down what the names of those things are or any of that.
And by the way, if you run these exact same types of commands, probably worth covering this,
I didn't want to, but I'm going to anyway. If you want to run the same equivalent command
on a Windows machine, what is it? Backslash a on Windows.
So the Windows has the same too. You can, I can put this up here probably
on Windows. So you can actually run this list of this. Let's, let's run a command here. This is a
very valuable command to have as a hacker. So this is a plain old DOS prompt. Is it slash all? I
don't do very much. I'd be config slash all. All right. So, oh my gosh, look at all those IP
addresses, right? And there's a ton of them. Why? Because the virtual machine, the virtual machine,
everyone is getting an interface to the network that's connecting. There's multiple things that
are connected to all these networks. And that can get confusing. But I want you to do notice that
this does have also, it has a loopback. So it has one, at least one of these addresses is going to
be 192.168. I already told you I don't mind Dox and my IP here because reasons. I'm sorry,
there's, wait, where's our loopback? I don't see a loopback there. Where's our loopback? Well,
anyway, so that's it. The only point of that is that you can do it on Windows.
Is it, I thought, I thought, I thought, is it all? Okay, I guess it's all. I don't do Windows very
much. Yeah, blasters. Yeah. Okay, so what do we got? What is a loopback? Let's talk about that.
So a loopback. Okay, I want you to remember, there's no place like home. And at skill stack,
once upon a time, I'm going to give you a mnemonic. It might take me a while to find it. But during
your break, I'm going to find a mnemonic for this. All right, so there's no place like home, right?
A loopback interface, it's the internal IP that always refers to your own computer.
And that sounds very confusing. You're like, what are you talking about?
So if you try to connect to anything with 127, it will try to connect to the same computer that
you are on. That's what loopback means. And it's very, very important. We're going to use it for
web development. We're going to use it for lots of things. No matter what, if you try to connect,
if so like, if I SSH'd into 127, what would happen? What would it try to connect to? If I'm on,
if I'm on my terminal, where's my git bash terminal? Is it here somewhere? Okay. So if I'm on this
terminal and I try to connect to 192 or 127.0.0.1, which is by the way the same on every computer.
So there's a mat outside skill stack that said there's no place like 127.0.0.1. And it's a really
geeky joke because this is often referred to as the home IP address or loopback. There's really
embarrassing thing. There was a company that launched their IPO and in their IPO of their company,
they told everybody where to go to get to their site and they actually published a 127 address.
You can go look that up. That actually happened. That actually happened. So why would you even
have one of these? You have one because you want to like work on the same computer and you want to
maybe pretend like you're running a web server or a chat server or an SSH server and you just want
to practice connecting to it and it's all on the same computer, virtual machine or real machine.
It's the same computer 127.0.1. It always refers to that machine no matter what. It doesn't get
routed anywhere. It gets looped back to itself and it gets rerouted to itself. But that allows
you to practice network things that you normally couldn't do unless you were on a separate computer.
You can still use the assigned IP but then it usually doesn't always but it'll hit the router
sometimes it'll bounce back. But the 127.0.1 is always going to connect to your same computer.
You would never, SSH would be fine only if you wanted to test whether it actually worked. I'm
going to say yes here. What's my password? I don't even know on that. Nope, I guess that's not it.
There is no Rob anyway. We're going to, okay, this stuff, we're going to go through all that now.
It is exactly that. So localhost is the permanently assigned
host name, domain name, whatever you want to call it, localhost.localdomain
is permanently assigned to 127.1.1. whatever, a 24-bit number, yes, but we don't, yeah.
So it's a little nuance there. So every computer on the planet is going to have a loopback device.
All right, you can use it for whatever you want but obviously connecting to it isn't going to get
you anywhere because it's not, it's, you want to get off that computer, right? I think I've
beat that one to death. Did I? Sufficiently. You guys have got it now. So that's what it is.
Unfortunately, I didn't do an ISO sec before I did that.
All right, so we'll put this up here and back this off. When does this start? We started like,
how many minutes ago did we start? I would say that's probably about five minutes of talking,
right? Or so. All right, so before we move on, I do want to talk about putty.
I don't know whether to talk about putty first or to get our connection to work.
When does remote desktop? You can do that, but that's a different thing. All right, so
let's, let's get our SSH to work and then we'll talk about putty. And putty is an alternative and
it's usually easy to do. Mr. Robot uses it a lot. It's easy to put putty because you can just download
it right on a computer and then go, but we'll talk about that a lot in a bit. Let's get our
connection to work. So back to this. So I'm running git bash and it's not happy, right?
I don't even know if SSH is running over here. So how can I test that now that we know about local
host? How do we, how can we test it? How can we test it? So how can you test SSH connection
to local host? You know what? Let's talk about that. That's kind of, kind of good that we talked about
it. I told you, this is organic. If you don't like it, go to somebody else.
It's just, this is exactly how I would do it in real life. So putty is useful, yes it is.
Like this stuff, the telnet stuff that they were talking about as a telnet replacement.
Wow. That's some fancy, fancy commands there for open SSH. And I think you can do that.
We're not going to learn about the service commands today and the system CTL. We're not
going to go down that path just yet. We might actually at the end of the day, I don't know how
much to, to get into that. This is hard because, you know, this is required, but I don't want to
get into the weeds too much. And people are like, why do I have to learn about SSH? I just want a
code or whatever. So let's go back to this. Let's, let's, let's use the minimum possible technology
to test whether SSH works. So you can SSH to local host, right? And you can do this.
You can SSH to local host. And as I go in and you do yes here and type your password
P-A-S-S-W-O-R-D is my password. And look, I have a connection. All right. So I want everybody to
try that right now with me. Okay. So the first thing we're going to test is whether this is
where local, I'm glad you asked about local host because that really brought it back home.
That's why you would need it. Now we want to test, I mean, hacking and debugging and finding
problems is largely about eliminating variables so that you can get to the problem. So, you know,
I was able, I tried to do a remote connection. It didn't work, right? Well, why didn't it work?
So then you kind of remove some variables say, okay, well, I'm using a different terminal over
there. I'm using git bash. I'm doing a remote connection. There's a number of things that
could be going wrong. So let's make sure that it actually works when I take all of that out.
You know, we find the root cause of the problem here. What can I do? I can do SSH from the computer
to itself. And I can say, what, and we can do, well, how do I address the computer by itself?
Well, it's the IPA. Okay, let's do IPA. I mean, the natural thing would be to connect to this IP
address, right? So, so let's do that SSH 192.168.1.35. It's like, what is all this about? It says,
the authenticity can't be established. The host key is known from another address. Uh-oh.
Okay, now this is the part where I get so frustrated because in order to do these kinds of
things, you have to know how to edit files yet, but you haven't learned how to edit files yet,
right? We haven't done that yet. And it can be, it can be frustrating. So the reason it's doing
that is because I already connected using local hosts. That's why it's doing that. It says,
are you sure you want to continue connecting? I'm going to say yes. Okay. And permanently added
this to the list of known hosts. And I'm going to type my password, P-A-S-S-W-O-R-D. And boom,
I'm on. Now here's something fun. Type, uh, you enter, oops, users, type users, enter.
Why do I have two users on there? Who, what do you, what would you guess?
Why do I have two users on there? Or type who? Yeah, who's another one? Who's a better one in
this case? Why do I have two users? Yep. So let's, let's put those commands that we just used to
figure it out. Okay. So we did, uh, what were those commands? Let's take, take a note.
So we did, we did who is the best one. So display who is logged in and how.
Users is kind of the same, except for you can kind of loop through it.
Short name of all logged in users. Okay. Another one you can do is last,
um, I think there's that on here. Yeah. Last. Okay. And these, these are, I'm, I'm kind of again,
one at a time. So last, uh, summary of last, uh, logged in users. Okay. W is more verbose. Yes.
Um, there's a few, I mean, there's like so many about who am I? This is another one, right?
So you could do, um, W is, uh, basically display longer version of who is logged in.
I mean, I wasn't planning on covering all these, but we might as well
could not resolve host name. Who am I? Displays only the logged user.
Yeah. Right. So who am I? It's like only the logged in user. Man, who am I? We know about
man. We didn't already. Man, who am I? Uh, print the effective user ID. In other words,
that's super important because it's effective, right? Yeah. Um, they don't know what that is,
but we'll talk about it. Uh, it's kind of funny because it's kind of the existential command.
Uh, print, uh, effective, uh, user, uh, name slash ID. And we don't know about name and
IDs yet. We will get into that. Uh, this might be a good time to do that. Um, so,
because we're, this leads into permissions. So we need to, we should probably talk about
user IDs really quick right now. Um, again, we're trying to just SSH into the system,
but we, in order to do that, I'm gonna, I'm gonna, you know, spoiler alert. We, we're not,
it's not working because we're trying to log in as a wrong user. All right. So,
so let's talk about, uh, users for a bit. Let's talk about users. Um, how can I test?
So we talked about usually testing it. So like, uh, what is a user and a user ID?
Okay. Let's do this now. It's taking me longer, but it's going to make us have nice
chapter headings in our, in our videos. So, um, anyway, so user and user ID. Um,
there are so many commands related to this. I mean, it's, but the, the concept is this,
everybody's got a user and everybody has, uh, an ID and a number and they also have a group.
And if you type ID, enter, you can see that, that will tell you all that information.
And I know there's a lot of these things and there's, you can try to remember them
by going through a book or you can just write your own book, right? Uh, so display user and group,
name, names and IDs, uh, for self. I don't think you can give it a target. If I don't remember,
again, if you have any questions about any of these, um, you can, you know, you can go look those up
uh, with man pages. So you can do man ID and it'll tell you the ID is print the real and effective
user IDs and groups. This is a good lead into permissions, which is going to come next. If we
don't cover this year, this hour, we're going to cover it next. So these are all of the users of
permissions. And this is, if you, this is like, put your ears on if you want to be a hacker,
because this is the core part of escalating privileges, which is a very major part of hacking.
And, you know, in whatever capacity escalating privileges, you have to get the privileges
of an admin or root got route, you know, that whole thing, right? Well, if you don't even know
what a user is, then, you know, you're going to have a hard time with, with that. And we need to
get the permissions and stuff like that. And user IDs, um, you know, that whole thing about having
a domain name that goes with an IP number, it's pretty much what a user ID, a user name is for
user ID. And so a user ID is the UID 100 1000, sorry, which is the default on all systems
these days. And you have a group with has the same name and group number as you,
and then it has what groups you're in. You're in the admin group, you're in the CD wrong group,
you're in the pseudo group, you're in the dip group, you're in all these other groups, right?
And you were added there automatically when you did the installation of the server.
Um, I think that it's pretty much beyond the scope of the boost for us to get into
user management and multiple user management and how to add new users and stuff like that.
We are probably not going to have time to cover that. There's just an entire set of commands
for that, um, that we need to do. We could probably talk about that, um, a little bit later
if you want to get into that. Um, and do I find one of my, um, I mean, that's one way to find them,
yes. All right. So I'm going to keep going on this, this ID thing. So who shows you who there's
W, which shows you all the people that are logged in. There's who there's users. Uh, there's just
like a bunch of them, right? So any number of those, but I got some questions for you. What is,
what is this column that says PTY? What is that about? What is that about?
Yeah. So it's about the teletype, right? So as you can see TTY one, remember I said there's seven
console TTYs. So the, the, the top one is, it says login. See how it says login at the time I logged
in? Was it 1728? That's when I logged in and it says what I'm doing. What am I doing? The process
that I'm running, the program I'm running is SSH. It says I'm SSHed into something else.
And then on the same computer, um, is everyone now as I said, no, we're just, we're not doing that yet.
All we're doing right now is we're SSHing into the local computer from the same computer to test
the connection. Okay. But I want to show you what this looks like. You see how the pts slash zero,
what's that about? That's the first time we've seen that before.
Anybody have any guess? Also, why is the from column have an IP address in it and the other one has
a dash in it? Why? Anybody want to guess on that? Any guesses on that? One has a slash,
one has a dash, one has a number, an IP number. I think it's pretty obvious. Maybe people are
answering because it's too offered. And now one is remote and one is the terminal console.
pts is the SSH connection. So the first question is, why do I have two RWBX Rob
users on this computer running that are connected? And I know that one, I'm kind of trolling you
here. And the second one is, why is one of them not have an IP address? Okay. So the reason there
are two here is because I have connected to the same computer, local host 127.0.0.1 for a test,
just for testing purposes. I have SSH connected into the same machine that I'm running on
with a different shell program running. That is remote. The incoming remote, even though I logged
in, I did it as if it's from the same computer. As far as the computer is concerned, it thinks it's a
remote connection. So the second one is a remote connection. So, so I connected with the remote
and that's why I have a pts0. And by the way, if I was going to trace everything from a user,
that's what I would go trace. If I had an intruder who is stupid and didn't cover their tracks,
I would go trace pts0 and I would see everything that they're typing. And it tells what IP they
came from. By the way, this is why you don't hack from your home machines because there it is,
they can go back and reverse hack you. You know, that's why hackers have like multiple hops before
they ever do these things. But the one that has a dash in it, that means that it's an actual TTY.
It's not a pseudo TTY, it's an actual TTY. That means it's a console. So the first one is the
one when I started the VM, this thing I'm looking at right now, this black and white thing I'm looking
at, that is the console, that is a dash. And it's not connected from anywhere. The dash means you
can kind of imagine the dash being this as if I plugged in a serial connection right into the
computer, right? There is, it's not a remote connection, it's a local connection. And I'm
over explaining on purpose here. So in the short way to say this is, one of these is a local console
TTY connection, VMware. And the second one is a remote connection coming from the same computer
to itself that then open SSH answers and says, okay, I'll get you a connection,
hands off a PTS and then starts up a shell for me. And you can't tell the difference because
from the command line, it looks the same. But if I type exit, what happens? It drops my connection
and now I'm there, I'm still there. And now I can type W again, and we can see that there's only
one connection. So we're doing this in kind of a roundabout way because I want you to kind of
understand how remote connections work, and how you can look for them. But go ahead and let's
let's add those things to our list. I'll go back in, I mean, I have to get out and do it. Okay,
so what does exit do exit always exits, exit the current program, or login, or shell, I didn't have
to type detach or anything. When that shell program stopped, it automatically threw away the connection
and then sent me on my way. Okay, hey, Daniel. TTYs are not encrypted. No, I don't believe they are,
because they're local connections, right? But, you know, you're not, in order, you can't really get
in the middle of that because, right, I don't even think PTYs are encrypted. No, once it gets to the
PTY. T-Mux is a PTS. I'm not using P, T-Mux uses, okay, that's a good question. Let's talk about
that later, Lucas. T-Mux, we haven't talked about T-Mux at all, but we will eventually. T-Mux,
the short answer is T-Mux uses the remote connection methodology to do that. And that's one of the
reasons it's so powerful. It's the only time you're ever going to get an actual TTY is if you are
using a console that's connected to the computer technically. It's as if you had a wired connection.
Okay, so I know I'm going slow, but hopefully this is useful. All right, so back to this problem
here then. So what have we learned here? We've learned, let me put another time stamp. What
have we learned? We've learned that there's no problem with that. Does anybody get not get a
connection? Does anybody have it not work for them? We installed, I think we installed OpenSSH last
week. Did we not? I think it was already installed for us. I don't think we had to do any installation.
Normally, the whole sudo apt thing, by the way, raise your hand if there's anybody who cannot
connect from their local machine the way we just did by doing SSH space 127.0.0.1 local host or
192.1 whatever, the other number. Okay, if anybody out there doesn't have one working,
then that means that you might not have the software to do it. And so let's go through what it would
take to do the installation there. And we covered installation of software last time. So I'm not
going to overly berate this. So the first thing we need to do is make sure apt, I always do this
even if I don't need to, I'm going to apt update sudo apt update. And this will ask you for your
password. And this is going to update all of the package library repositories with the latest so
that when you go to install it, you get the latest. Thank you for the follow. Okay, so now what?
What's the next step? We did this last week. So I'm going to ask you, how do I install software?
What if I know I want SSH and I don't know what it's called, but I want to install software that's
SSH and I don't want to go to the internet and look how to do it. How would I find the software to
install for SSH? Okay, good. We learned this last week, right? Right. So and you don't even need
sudo for that. I don't think so apt search SSH. Let's see what we can find here. Oh my god,
there's so much. Alright, so let's actually scroll through. I'm using my mouse to do this. Or I guess
there's too much stuff. I'm trying to find ways that you guys know to do it. Let's let's learn
more right now. Let's do more for the first time. There's too many things. So let's practice using
more. So let's let's do pipe MOR or LESS or the one other one. Is the page up button work? Okay,
let's use page up. I don't want to get into pages yet. So let's do I don't think page up even works
because we don't have an actual terminal. So I feel I feel bad. I feel your pain here.
I know how to get around this. I just don't want to teach it to you.
Uh, control page up. Is that a thing? I don't know. Is it? No, it's not for me. Anyway.
Nope. No, not happening. I'm gonna teach you the pager.
Control shift page up. Fuck. I don't. The pager is easier to remember than that. Alright, let's use
the pager. A shift page up. Oh, shit. Is that a thing? I'm learning something here. I had no idea
it was even possible. No, I'm not doing page up. I don't want to do that. Okay, so so I
I know how to do this. I'm trying to do it with the least amount of technology.
We're going to learn a pager. Alright, so we're going to do pipe.
No, we're not doing that yet. We're not there yet. Okay, so we're going to put a pipe and then we're
going to type less or more. Oh, that was nice. Thank you. Let's type less.
Alright, so now I have to teach you about these one thing at a time. And so what is less? Less is
called a pager. So what this does is it here, I got to put a note. I got to put a note. I know
this is slow, but you know what? At least we're not losing anybody this time. No one's going to
tell me that I went too fast this time. It's they told me the last two times. So I'm being
like excruciatingly slow. I'm really sorry, but okay, so how how can I see stuff scrolling off the
screen? Okay, and we're going to do this. You don't want to laugh at me. I am not going to let myself
give into my own peer pressure to go faster. I'm not I'm going to force this to go through it all
nice and slowly. How can you see stuff from scrolling off the screen? Alright, so you do this.
You do pipe, pipe to less or pipe to more if you're an old fart like me and that's that you've been
using for like 25 years. Less or more. C scrolled output in terminal. And you're not always going
to have a terminal that's going to do anything. This will always work. Alright, it will always work.
Yeah, less is more. Exactly. So that will always always work. You're going to be doing this for
the rest of your life. So get used to it. You're going to be on systems that do not have other
abilities. So I'm going to do that. I'm piping it to less now and I hit enter. And you can see I
don't get the colors and stuff. You can actually force it to do colors if you want. Is it dash C?
I think it's I think it's dash dash color.
Nope. Doesn't have a stable cellular interface. Use cautious scripts.
Value. Oh, I've never used this. So I don't know.
Color force. I want my colors back. I don't remember it. Do you remember what it is?
Is it color dash auto? Okay. Let me go. I don't know. I don't mind. It's been alias for years.
So I have no idea. I mean, you can look. Hey, look, I can actually read the help documentation.
Do we really want to see this right now? I really don't care.
Color slash color. Color equals X color binary characters. Oh my god. It's like so complicated.
Why would I do that just to get color? Is it capital C? It's not dash auto.
I am going through the pain with you so you can look it up. I did man. I did man color. I'm sorry.
Man LS. And then I did slash color to look for all the color stuff. And then I'm pushing
N to go find the next one. So I mean, you've got to have our colors, right?
I don't see any color tags. Use color. Hey, there we go.
The D option can be used to change the colors. Enables color text in various places.
And then Q to stop to get out. Yep. Okay. So all right. It says use color. There it is.
Use dash color. Oops. Use color. Damn it. It didn't work. Oh, well. Oh, the cursor's color.
Normally things will not use color when you're piping it and stuff because it will cause all
kinds of weirdness on the screen. So I'm not going to complain about it. I know I got no color too.
I don't know what's up. Somebody figures it out. Let me know. But you know what? It's not that big
a deal. So we'll just use less than this. I mean, do we really have to look it up? I mean,
my system has it. So if I do, if I do man less, no wait, if I do, I'm going to try to mine here.
So suit with the app search SSH pipe to less. Oh, mine gets rid of it too. How about my more?
Oh, it gets rid of it too. Oh, well, I guess I guess I'm missing something. Maybe
somebody can give me a tip and get my color back to less. I don't know. We'll see.
I mean, I know some of you want to know about that.
Yeah. Once you get into less, you can do some of that fun stuff, right? And this,
once you're in less, you can do page up. I just use like the up arrow and the down arrow.
Okay. Well, again, we're beginners here. We're beginners here. If you want to search through
less, you can type slash to search for something SSH and then it will highlight all the SSH's.
You can say, okay, you can like go forward. I think you can do F to go to the next one.
Actually, no, it's N for the next find. N is the next one. You can say, okay, we got all this SSH
stuff to install. We talked about installing last week. So we're going to talk about this week.
And we're looking for different things. After running search, for some reason, I get stuck there.
You just, usually it's Q. If you can't get out of something,
control C to bail. Control C to bail and control D. All right. So let's, let's put those things in
here. So, so control CNT, how do you, how do you do it? How do they write it? CNT control,
control C to interrupt whatever exit sometimes. And then there's another, we're going to go
come back to all these, but I'm going to put them in here. This is kind of a saving thing.
Control D, what does control D do? Send end of data slash file. So like if it's waiting for data,
it might want those things. We're going to do all the control characters later.
But this, to get out of less or more, you probably have to type Q and Q is really common.
Yeah. Not everything. I'm just putting it all there, right? So let's put,
okay, let's put this Q to quit. And there is a help and everything. And that tells you that when
you're doing it. So there, that's good. So what are we still talking? Are we still on the same
topic? So we're on less. So we're using less and more for that. Play around with those and see
what you can do to go look around for something. I didn't think we were going to have to pull into
that this early in the session, but we obviously do. I mean, learning how to read what's on the
screen and get around, those are basic things. So let's do that. Now, so we pipe into less.
And I'm going to search for all the SSHs. So I'm going to type slash SSH. And where are they?
So we have, what is this one? I'm going to push the up arrows. I'm actually pushing the K because
it's got VI mapping set up already, but you don't know VI yet. When I pipe it to less is showing
a list of programs. It's not showing a list of programs. How are you piping it? Are you,
are you just doing it? Are you doing APT space search space SSH? And, and it should show you
like a whole thing like that, right? I think you can actually,
yeah, it'd be something like that should work. That should actually work.
If that's not working, I don't, we have to go dig in on your problem. So, but that should work. So we
got all these SSH things here. And we have to kind of pick which thing we want to install. Now,
this is something where you'd probably ask somebody, what is the package I need to install
to get SSH to work? And I already know which one it is. It's called open SSH. But I want to go
through the process of what you would search through. I am on a virtual machine right now.
Yeah, this will not work if you're on Windows. If you're on, if you're in the other Windows
git bash terminal, it won't work. This is going to sign on my Oracle VirtualBox Linux machine.
And I'm looking to install the software for open SSH. Okay, so then we go to,
um, so then we're going to go to keep looking down. There's lots of stuff here. It's a little
overwhelming. But we, I, we, I talked to my friend and my friend said I need to get open SSH on here.
So let's go do that. Let's find it. So, uh, open SSH, open SSH client, open SSH SSS1, open SSH
known host, open SSH server. And it says down here, you see how it says installed automatic?
That means that it's already been installed and it automatically starts.
Um, uh, does not have a stable command line. It works through piping to less.
You might have to try app dash get and then pipe that, but I don't know.
And so we talked about that last week. So we have open SSH server.
And that's the one is mine's already been installed. Um, but if I was going to install it,
what would I do? Everybody, what's the command to install a package now that I know it?
So I know it's open SSH. So let's actually do our query again. And we know it's your friends
that open SSH. So we're going to see it about it. Oh, that's got them. That's got too many.
Let's do, uh, maybe the beginning of a thing. Okay. So there's all of the open SSH things.
And then we talked about the carrot, meaning the beginning of a thing.
SSH server, we have to get the right one, don't we? So yeah. So now we need sudo apt install
open SSH dash server. You don't need any of the other stuff. Um, and you can do app, uh,
dash get if you want to. Now mine's already installed. Some of you might not have it installed.
And that's all you should have to do. And from now on, every time you restart your computer,
you should have open SSH running and it should be running right now. I really don't want to get
into how to show you if something is running just yet. Um, but it's super hard for me not to show
you right now. And service, um, status, open SSH or SSHD. It's like it doesn't know what service it is.
Oops. Then I got it backwards. I do. I always do that. I always do that.
Yeah. So that we, we haven't talked about this yet, but that's what we're going to get into
the next time. I'm not going to even write it down right now, but service status, this HD,
that will tell you if something's running and what's going on and when something can log in.
And we're going to do all of that. Um, okay. So, uh, we've got 15 minutes left on this boost. So we,
why did we do that? We did that because I couldn't connect. Um, how can you test? So,
uh, what package needs, uh, to be installed to connect with SSH? Okay. And that's what we just
kind of covered. Right. We covered that pretty much just now. It took us about 10 minutes.
So I'm going to say like 49. All right. That might be something that you have to practice
more than once. And how can you do that? Let's talk about that. How could you practice doing,
practice installing, doing all three steps? How could you do this repetition over and over again?
Knowing what we know now about virtual machines. If you want to have practice off the clock
and you want to do exactly what an admin would do, you can start a brand new,
you can remember the snapshot I told you about. So what you could do is you could take a snapshot
each time we, each time you guys know how to take a snapshot. We did that already.
So each, before you go to do something installation practice, right? You can take a snapshot
and then copy, duplicate that snapshot, start it up and do the install. And then you can throw it
away. And then you can do the same thing again. You can copy it again and practice doing the install
and then throw it away. And so that's why we're using VMs for this because they give you a point
in time. Doctor does too, if you know how to do it, but they give you a point in time at which
you can go back and practice over again. So having a virtual machine and the skills to use a virtual
machine are really, really critical for operations people because you need to recreate the steps
to do something that if you were to do it in a production system and did it wrong, there would
be consequences, right? So the process of going through and getting these little individual things
is going to really pay off in the long run. I think it's, I think it's apt install open. I think
it's open SSH-server. It's open SSH-server. All right. So, and I mean, if you're, we should all
be on the same OS here. So I don't want to get confused. If you're on a different Linux distro,
I might be doing something different. So that's why we're staying together on this. I'm going to
repeat this process though. Make sure that you know how to go in and take a snapshot of a VM
and then run that and then do your installation and throw it away and do it over again. Because
you want to do that. The stuff we're doing today, you're going to have to stop the video and repeat
it over and over again. And then you can practice that. So installing open SSH is like just old
hat to you. You don't even need to think about it anymore. All right. And then, and then that's how
you practice operations tasks. All right. So what package do we need to install? We already talked
about that. I'm giving kind of the answers down here in the commands here. So sudo apt.
You could do apt get or apt. It doesn't matter. apt install open SSH server.
Install SSH server, if not already. Now, one of the checked boxes when you started
was to install it. I think that's what I did. I actually installed that automatically.
So there we go. All right. So we'll talk more minutes on the SSH thing. Now, let's actually,
so we've done all of the problems with SSH. You should have a running server by now. I'm assuming
you have a running server. So how do I connect using the right user?
What is the correct SSH connection address?
All right. So let's break this down. Who knows the answer to this?
Who wants to take a guess right now while I'm writing this? Who wants to start writing this?
Why is this not connecting? I have an SSH server. Why is it not working?
Somebody figured it out during the break on their own. I was super impressed.
Why? Because all the things you need to know about why it's not working are at your fingertips.
You can figure it out on your own by doing your own learning and your own research.
Where would you go to ask the question, why isn't this working? You can go to the internet,
but where could you go that's more important than that? What's the command? We already have it.
We don't need a token. Nope. It's not a token. We need the username. Okay. We do need the username.
You can go to man. Where would I go? If I'm having a problem with the SSH command and I'm
totally lost, do I throw my hands in the air and go do an internet search? You could. But before
then, you know you're going to use the SSH command. So what's the command to look up information about
that command? Either SSH or man space SSH. So try that and see if you can figure out why this
connection is broken. Why won't I connect SSH to local hosts that didn't work? But why even this
one? Why didn't that one work? Because it's like host key validation failed, blah, blah, blah.
All right. So we're going to try some of the things. What is it? What is the correct SSH
connection address? And we did talk about that. All right. So give that one a shot.
And again, I'm talking very, very slowly. So hopefully y'all can get that.
All right. So let's do the command. So the command to look this up would be man. I would go, okay,
man. Well, let's pretend I'm on git bash. We're working DOS too, but this is why git bash is
nicer because git bash comes with man. DOS doesn't. So where's my git bash? Here's my git bash. And I'm
going to do man SSH. There's no man. Damn it. Well, what if I go over to my Linux machine and try that
man? Let's try that. Okay. Let's do that. Man SSH. Okay. We can look over here. Oh, much more
information. Okay. You could do SSH-help too sometimes. So it says there's a bunch of stuff
here. And this is probably the most annoying thing about man pages. Yeah. So it says here,
SSH connects and logs into a specific destination, which may be specified as either user optionally,
the brackets, the square brackets mean optionally, at host name or URI of the form, SSH colon slash
slash, you know, blah, blah, blah, port. And port is something you haven't learned about yet,
but you can add, port is literally the word door in French. So just remember, port is like a number
for the door on the house. And the number on the house is the IP number, roughly. And the user must
prove their identity for remote machine, blah, blah, blah. And for the record, logging in with a
password is usually disabled because it's insecure. And we will get into some of that
when we talk about keys. And we will talk about keys. I don't know if it's gonna be today or tomorrow
we've got to have a GPG as well. In a series of tubes, it kind of is. Yeah. So let's do that.
So let's say, no host is a little bit different. Yeah. What else can I do here? So let's, we know
that I got the name wrong, right? So let's, I just read that. And so now I know to try this,
RWX, Rob at, and then I'm going to do the IP address 192.168.1.35. Now, we have a bridge
connection. So if we didn't have that, we wouldn't even know if it was there, right?
Okay. Oh, look, it's giving me a password prompt. No. Now, normally it'll do this on the command
line, but because we using git bash, it gives you these windows prompt. Now I happen to know the
password, right? P-A-S-S-W-O-R-D. And we'll connect. And, oh, are we there? Are we there yet?
We're not quite there yet. What is going on? It doesn't like me. Did I break something?
I think it's my, what's going on? It's working, but my terminal is broken.
That's kind of weird. I wonder why. I wonder why. I don't know. That's new. I've never seen that.
Are you seeing this? LS is working. cd.dot is working.
Oh, that's interesting. It's almost like I didn't have a login shell.
That's very weird. You know why I think that is, is because I'm doing it from git bash.
This is the first time I've done it in git bash in like years. So normally I don't do this. This
is probably the time for us to actually put git bash into an actual terminal. And nobody really
wants to use anything but windows terminal now. So let's do that. Let's do the windows terminal
thing. But we got a connection. We got a connection. We put a password in there and everything,
but we couldn't see anything, right? So we don't just want to use git bash. We want to use git bash,
but we want to use zero updates where yours is 13 updates. Yeah, because I haven't done any updates.
And we know how to do that too. We learned it last week, right? If you want to do those updates.
So just let me check the same thing and then I'll show you how to install the terminal, okay?
So let's start up a git bash terminal using this and I'll show you how to do this in here.
And now let's try it with a better terminal this time and see what happens. SSH, I have to click
on it. Sorry. SSH rvxrob at 192.168.1.35. That was the number, right? It's stacked up RCU GPU
and the type password P-A-S-S-W-O-R-D. And there we go. So that's what we expected to see. So
in this case, we learned something. In this case, we learned that git bash by itself is not a good
enough terminal to connect. That it needs to be combined with something else. It needs to be
combined with a really good terminal, like Windows terminal. You're supposed to have
installed Windows terminal last week. And I do want to go through Windows terminal customization.
I think we should probably do bling bling and pretty stuff, you know, look up that kind of thing
probably next week, like how to make, how to trick your terminal, make it really pretty,
how to make it full screen, just talk about those kinds of things before we get into some
of the other stuff. Because I know everybody wants to do that. They want to make their terminal
pretty. It's the number one question I get is how do you get that theme, et cetera.
So if you have it, how to pimp my terminal, yeah. So we'll do like, I think we should probably do
a whole hour or two on how to pimp your terminal. And that will include how to set up your prompt
and stuff, you know, like how to get a nice pretty prompt like I have over here on these other ones.
As you can see, bin bash by itself is not enough. So if you've installed bin bash already,
you can just start up your terminal and I'm going to pretend, I wonder if I can unpimp my terminal.
I could probably do it. I could probably just copy my file out so you guys get a non-pimp terminal.
I kind of don't want to do that though. Because I don't. I've already spent like time on it.
So let's, I mean, I have really changed a lot of setting. You know what, we'll save it for next week.
So we'll include googling, googling from the terminal. Hell yeah, that's going to be later.
Yeah. That's, that's, yes. We're not going to do googling from the terminal until we've done
bash scripting. And then we'll do that because we have to know how to write a script. And that's
coming within that couple of weeks here. All right. So we have four minutes left on this.
At this point, you should have a connection. If it asks you, do I want to trust this host,
type yes. Okay. And the reason for that is complicated. We'll talk about it in networking later.
It's trying to protect you from a man in the middle attack. It's called, which means somebody
might be pretending to be your host instead of that actual host. And you're going to need to type yes
there. The rest of the conversation about man in the middle attacks and host keys and all of that
stuff needs to take place after you know how to edit files. We don't know that yet. So the primary
objective for today is to get a connection from Microsoft Windows terminal or I term
and have SSH working to connect. That is the primary goal. If you need any other help with
that this week, that is your primary goal. By the end of this week, by next week,
you should be able to just sit down on your computer, start your VM. If it's not already
running, you can leave it running in the background, you leave your computer on,
and then you just need to run SSH boom and type and run right into the IP address.
Now, it's important to know that sometimes your IP address might change. But you know the command
to find out whether it did, right? That might be like, I want you to get into the habit of
troubleshooting your own issues. Like, why can't I connect? I was doing this yesterday, last time,
it's harder now. You need to go see if the IP has changed for any reason. These days,
routers don't change it even if it's dynamic. We're not going to get into that. That's a
networking conversation. But it is DHCP. DHCP means that dynamic host control protocol,
it gives you a different IP address, so the IP address can be shared across computers.
But usually, they'll give you the same IP address every time. But you know how to know if it didn't,
right? So go to IPA and see if it's there and then you know what to connect to, right?
There's so much more to cover here. Host files, you can set up configuration files for SSH,
and all of that jazz. But right now, I want to make sure everybody who's listening has got the
ability to SSH into the computer. Can you connect to the computer from your shell? And you should
be able to do that. I wonder, let's try DOS. I'm just just for the sake of fun. I just want to do
with DOS prompt. So to get a DOS prompt is just Windows key CMD. And we'll say, okay, what about
CMD DOS? Let's just do an experiment. I'm kind of interested. One of the best ways to learn is to
just test things out, experiment, right? I want to see. I haven't done it. Let's try it. I mean,
I'm not going to do that normally. But if I, if I don't follow, if I had was a DOS prompt,
would I be able to do it? If I installed get bash, would I be able to do it? I don't know.
SSH, rbxrub at 192.168.1.35. And password.
Oh, boo. Yeah. And I got my terminals even better. So in that case, it worked even better, didn't it?
In that case, CMD worked. But now, isn't that fun? So that's interesting because get bash gave us
the SSH command, but we can still do it from CMD because it's just another program for get bash.
All right. Let's, let's try it from another program to, so Frank reminded us of another
program that you can download and use. And this Mr. Robot, Elliot uses this actually that, you know,
the, you know, the episode where it gets beat up by the warden. Yeah. Watch, go watch, go watch.
If you like Mr. Robot fan, which is really rough to watch, I'm not recommending it if you're, you
know, minor. It's really rough, but they use it. And he uses putty. So putty, putty is a program
that has one purpose, make an SSH connection into a machine. So every other thing that we've been
using, we've been using a shell, we use the window shell, we use command shell, we use,
give me a command bash shell, we use, you know, whatever. And then we had that shell and then
we did SSH from the shell and connected to a remote shell. But with putty, you don't need a local
shell. With putty, it's a program that accesses the remote shell directly. So you don't need to get
a shell on your local machine. A lot of people think it's a lot simpler to use putty. We use putty
for five years at Skillstack when people first started and I just had them connect to the cloud.
And my workplace once told me, why don't you just connect from putty to our servers and use those?
Why do you have to have things locally? Why do you have to have any shell on Linux on your
Windows machine? Why can't you just use putty? So knowing how to use putty is still a critical
skill. And we're going to cover it right now. Actually, we're going to cover that after the
break. So download putty during the break. Download putty during the break and we'll begin with that.
Okay. Here comes the ads and stuff and the music.
All right. You have questions? Let me know. I'm going to actually go get some coffee.
I'll be right back. But download putty. Go download putty. Make sure you get the right one, by the
way. If you know what that means, ask around. Make sure you get the right one because this is what
the hackers love to put putty out there and own your machine. So be very sure. WSL.
Yeah, but we're not going to do anything with WSL too. I suggest you avoid it. If you know what
it is, fine, but we're not going to do it. Break is 12 minutes long. So it'll be until
minus, minus one, two, colon, whatever down here. Yep. Yep. That's right.
It gives us nice fun. Windows terminal gives you a killer nice font. So that's why we're going to do
it. Yeah. Well, I think we will do pimp and maybe we'll do pimping the terminal like today. I don't
know because I because getting into encryption and keys and stuff, that's going to take a good
long time and we probably need to do that next week. We still need to do GPG because we need to
get stuff. Could not resolve hostname. What are you trying to connect to?
Where are you from? It's SSSH. Unsuccessful. Did you try to do it locally? Slow like a fox?
Did you try to do it locally?
So if it didn't work and you couldn't get a connection, there's one of three things that's
probably wrong. You don't have a bridged connection. You're using the wrong IP address
or you have an install open SSH. Those are the reasons it might be wrong.
There's a vape ad. I'm going to speak of vaping. I'm going to go make coffee. I'll be right back.
My favorite terminal emulator at Windows. The Windows terminal app is my favorite.
A lot of people like Alacrity, but it doesn't have full support for everything.
We didn't do the service stuff.
Yep. You guys help them out. I'm going to make coffee.
You
you
you
you
you
you
you
you
you
you
you
you
My arm is actually pretty good. My arm is pretty good. You know what? You know what it was?
I slept a lot today and I, I, I think it was the right thing to do. I'm like, I feel great today.
Three more minutes. Three more minutes, everybody. Here we go. My coffee should be ready.
Yep. Yeah, I'm actually really surprised. I got, he said, somebody's asking about my,
I got my booster shot yesterday and it kind of, two days ago and it kind of knocked me out.
I mean, it wasn't bad. I feel like really energetic today. It's crazy.
We already about the files before we learned about how to edit files. Yeah, absolutely.
We already started. Yeah, that's next, actually. We need to learn. We need to learn to connect
to the system and then we can start, we got to get our, we're going to pimp our terminal out
and after we pimp our terminal, then we're going to start part of pimping your terminal is,
okay, now I need to edit this config file. How do I edit the file? We're doing everything kind
of naturally in the progress that you would do if you were trying to learn all this on your own.
And then occasionally means, you know, going back and doing something that I didn't cover,
like pagers, which we just did. So, I mean, I really love it. I appreciate you doing the bits
there. That's really, really kind of you. We'll grab a little bit. We got two minutes left.
I don't mind saying that this SSH stuff, I'm kind of happy that we're doing it
the way we are because I was, I used to teach this stuff to like nine and 10 year olds and
I'm going to talk about this again when we talk about putty. This setting up of SSH keys and
installing a VM and stuff, this is not the kind of thing a 10 year old can do very easily.
And I'll say the rest of the story for just a second. But I'm pleased by the fact that
we're doing this on Twitch because I have a baseline assumption that you're like 12 and older
and you can do these kind of things. So, we can cover kind of a more advanced topic, you know.
When you use a slash with the man, what is it called? It's just an internal command for searching,
Orion. It's pretty common, by the way. And anything that has text in Linux and Unix land,
if you push a slash, it'll help you find something. In fact,
there's a number of plugins for the web that you can use to turn your slash into a find.
Yeah, that's pretty basic. People burn it into their thing. Okay, we got to go.
All right, here we go. Music is down. We got a lot to cover. Let's reset the pomo.
All right, so another few minutes here. All right, so as I was saying a little bit during the boost,
I was reminded of one last connection method called putty. Now, the reason that I want to talk about
putty is, you know, the beginner boost that we've been doing on Twitch and YouTube,
there's a baseline assumption you're about 12 years old, you know how to install software and,
you know, installing a virtual machine and get bash. These are things that would usually
take me several weeks to do with young people. I used to teach people Linux when they were
nine years old. I've actually taught nine-year-olds of them and they love it. Once they learned it,
oh my god, they just love it. And so, but why is that? So, but some of this stuff can be
radically simplified by just installing putty. So putty is kind of the go-to thing
when you don't want to deal with all this VM stuff and you already have a cloud server. So
it's worth learning about it right now. Yeah, so yeah, some of them actually. So we're going to
go find out what putty is. Again, I'm going to do what you would do. I'm going to go, so what the
hell, heck, is putty. Putty, P-U-T-T-Y, right? Now, when you're looking for any software on the
internet, particularly when it's in the secure shell space or Linux and things like that,
there is a lot of malware out there. Or there's Trojan software, which means somebody's hidden,
you know, a payload inside of an otherwise good program. There's nothing for free, by the way.
If you think that that song download is free or something, most people out there are not stupid
right now. They know not to do that, not to install executables on their system. Putty is one of
those cases where you're installing an executable on your system. This makes it really, really
advantageous because you don't have to have admin permissions to install it. I'm going to say that
again. You can install putty on any Windows system, including the library, and use it to connect to
your favorite Linux machine out there, which you can then use to connect to 15 other Linux
machines sequentially. And then you can do that pen test that you've been dreaming to do. This is
how people go about not getting caught, but it's also very, very useful if you want to connect
to any system, right, from anywhere. And you just don't, you don't, if you're, let's say you're at
your family for Thanksgiving or some holiday, and you need to connect to your server, right,
or a server, you can put this on their computer, on their Windows machine, and then you could do
your connection and do all your work. Most system administrators and workers, they will do this kind
of thing remotely. And this is what they'll do. They'll do a putty because it's so easy. In fact,
it's featured pretty prominently in the Mr. Robot series all over the place. So we're going to go
to putty.org, which is the official site. And we're going to download putty. You can download
putty here. There is an SFTP, and then there is an SCP as well. There are different things. You
don't really need those. These SCP is for transferring files. So let's say you haven't
covered SCP, we're going to cover by itself. Maybe today we've got two more hours left.
File transfer. So, you know, right now we're just talking about remotely connecting. We haven't
talked about moving files around. We're going to talk about files on the file system and all that
stuff next. It might have to be its own day. But things like how do I move files? How do I remove
them? How do I transfer them across the internet? How do I, you know, all that permissions on files?
That's probably going to get a good hour or two. So let's just focus on connecting. So we're going
to download putty. And this is one of those things where it's like, okay, I'm downloading putty.
And this, by the way, is the official URL. It's been that official URL for years,
so I happen to know that that's the right one. But again, make sure you've got these places
right. You might get somebody trying to get you to download some malware. And, you know,
Windows in this case does have an installer. You can download and click on the installer and then
run it as admin and do that. But in this case, we're going to pretend like we're hackers,
and we're just going to download the EXE by itself. We're not going to do any installation,
because you don't need to do any installation. You can just run it right off your desktop.
So we're going to go get that one. So we're going to get putty.exe for x86. You need to know what
kind of software you have. By the way, this does work for Mac, if you want to try that.
And so we'll click on putty.exe here and we'll download that. And you see it's in my downloads
folder. I can even run it from here if I wanted. Why not? You know, I can just click it right here
and run it. And you'll see the putty window. This is the standard putty window. Hey, thanks for the
fall. And right away, you see a bunch of awesome things here. At one, there's actually another tool
called I think it's mputty, which lets you save different configurations and stuff like that.
We are not going to go into that at all today, but does let you save your configurations into a
file. The default putty does not allow that. The fact that default putty is very, very simple and
not easy to make pretty. You can change things like the cursor and stuff like that. But most
of the time when you're using putty, you just want a quick connection and you just want to throw
the thing away later as if nobody knew you made a connection from that computer. So you can go
into this. Let's go to the very top of the session and you'll see the host name or IP address and
you should know what that means now having just gone through, you know, that explanation. What is
the IP address? Is it 127.0.0.1? It might not be getting an IP address, that might be.
Yeah, they're debugging a problem there. They're helping somebody else there. So it's not, why
isn't not that? What if I try to do that? What's it going to connect to? It's going to connect to my
own computer, right? No. It is port 22. We're going to talk to, we're going to talk about that.
And then we get a chance to talk about ports. Okay, so we remember the address 192.168.1.30,
whoops. Damn it. I pushed enter too early. I'm such a spaz. I'm a spaz. All right, wait, where's
my downloads directory? You guys can laugh at me. I am a spaz. Okay, so I'm in my downloads
directory now. Is there anything else in here you don't want to see? I want to make sure you
don't see? I guess not. Okay. So, so here we go. We're going to go, here's my putty that I downloaded.
I tell you what, since it's here, I mean, why don't we put it on the desktop? Why not, right?
Let's put it on the desktop. Okay, now it's, let's go. Actually, you know what you can do?
Oh, wow, we can do something fancy here. We can like put it down here even, I think.
Is that going to work? Hey, it worked. Okay. Again, we're taking it temporarily. I
I dragged it to my thing right here, right? So I'm going to click it here.
And now this is a running one. Okay, here we go again. So 192. This is why I like a Numkey pad.
168.1.35, I remember. Port 22. So remember, I said what a port is. So when you're trying to get
to a computer on the internet, you want the IP number is basically the main mailing address for
that. You can imagine the house or building being the IP address. And it maybe it has a service door
in the back and it has a business entrance in the front and it has a worker entrance on the side.
Each one of those different entrances is a different porch or a different door.
And they all have different purposes. So the service entrance is where all of the,
you know, stores and stock goes the, you know, the employee entrances where the employees are
going to do their work. And then you have the main public facing facade where all the people go.
And that's a different port. That's you can think of, that's what a port is. A port is the number
on the door of the building. And the IP address is the building's address. And some of those IP
addresses also have a name that go with them. And that's called the domain name like skillstack.io
or twitch.com or whatever. Okay. So, so here we go. Yeah, don't, yeah, they're talking about
static IPs and stuff. Some, if, if anybody has problem with the basic steps we've done so far,
please, you know, you can pick that conversation up in Discord as well. That'd be great.
So other people can see it if they have a same, if they have the same problem.
Okay. So, so here we have this, you'll see the connection type is SSH.
Frank was mentioning that this also supports serial or telnet. And some people were asking,
how do I connect to, you know, like routers and devices and stuff like that, you know,
the whole idea of a console, that's what you would use that for, right? You would be hard,
you would be plugged in like literally into a machine, a router or something,
with a wire, with a serial cable. And then you would use serial for that. And then it wouldn't
do any kind of routing or just go right to it. SSH is what we're going to use here. So you really
have to change anything like that. We'll give it, we can just, we, if we click on default,
it'll save it for the default and we can give it a name. I can say, I can just call it boost
and save it. And now boost has gotten this information saved when I come back to it.
Yes, telnet is insecure unless you're doing it to connect to a router directly using a serial
connection. And that was the question. You normally think, you should normally never use,
the people who use these, they use telnet know who they are. Everybody else should never ever use
it. You should only use secure shell if you don't want to be hacked horribly. So make sure you do
that. And now we've got this, this nickname for this, this connection. You can play around with
all this other stuff and look at it. But right now we're just going to do that basic thing. It says
close window on exit only on clean exit. That means if there's an error, we're not going to do it.
We click open and it will give you the prompt. It gives you the fingerprint and the SSH tool
protocol in general sends a fingerprint. This is how it knows whether somebody is trying to
pretend to be the server you're trying to connect to. So the first time you connect to something,
it says, are you sure this fingerprint is a legitimate thing? Almost always you're saying,
yes, I've never clicked no. And you're like, yeah, that's it. I mean, if you really wanted to,
you could go onto the machine that you're trying to connect to and look at its host ID if you
really wanted to, and then double check it and say, okay, yeah, they're the same. And then you
would click accept. Okay. Most people, they'll just click accept. They don't even think about it.
And by doing that, what you do, what SecureShell saves you from is it, it stores that host
fingerprint for that machine in a file. So that anytime you try to connect to that host, it says,
has this fingerprint changed? And it does change, believe it or not. Can anybody think of a time
when a fingerprint might change? When would a host fingerprint change on a system that you might
want to connect? There's enough things that we've done so far that we actually have a few scenarios
where you might actually have a situation where a connection and a connection that you had that was
working no problem, all of a sudden stops. Yes, when an IP changes. Okay. So like, let's say, in
particular, if you have a virtual machine, so I'm telling you this, just in case, I mean, it's
very possible that you would want to make a new VM. So you would duplicate it, you'd make a new one,
right? Now, if you bring that VM up at the same time that your other one is still on, but for some
reason, it's going to get a different IP address. And you're going to go connect and it's going to
say, wait, wait a second. This IP address and thing like that, I have this different other
host name over here. The only other time it's ever happened to me is when I had a computer,
and I replaced the computer. Oh, it's, it's, it's time you out. That's fine. So another time, it
actually, I replaced the computer for which the IP was the same on my home network. Whether you do
that with a virtual machine or a real machine, I had a computer on my network, I replaced it,
rebuilt it, and I replaced it and put the same IP on there. And SSH, I tried SSH and I said, oh, no,
no, no, no, we're not connected to that. That's obviously not the right machine. It doesn't have
the same fingerprint. It's trying to protect me. Now, it's gotten easier to do, but you will get
into it later. But when that situation happens, you have to go in there and physically remove
the line in the host names file, the authorized host file, not authorized, what is it called?
Host names, I think? You have to, it tells you the line and everything, and you have to go
physically delete it and say, no, I know that this fingerprint is no longer valid. I want to get
a new fingerprint. And it gives you that whole prompt, no, no, thank you. Yes, that's the one. And
then, and then after that, when you go into there, it'll ask you again, and you say, no, this is
the right one. And that's for your protection. That's for your protection. That means if somebody
tries to do something finicky, like they successfully get your internet traffic to route to the wrong
machine, that SSH will catch it. It'll say, no, you got a new one there. So it's annoying to be
sure, but it's there for your protection. So we just know that. Now, it's asking me to log in as,
I didn't say what I was logging in as, this is a putty thing. And I can type in, actually,
I think I've been disconnected. Yeah, because I waited too long. So let's go back and try it
again. Where's my putty down here? All right, I hope I saved it. Did I save it? Okay. So now I can
just click on boost and it'll populate all these things I can click on load if I want. Or if you
don't want to do that, let's try this again. Once you have it in putty, you can just click on putty
and you can double click on it. And it will pop you in like that. Now, you can put your, your
login is rdbxrob. This time I can type it. And one of the reasons that this is easier than
remembering rdbxrob at whatever, right? So it does that and it says, okay, what's the password?
And boom, now I'm in. All right. So, so now I'm completely in. Now this, this, a lot of people
in the industry prefer putty over everything else. And there's a lot of really hardcore,
um, there's a lot of really, really hardcore people who they only use putty. And, and they
think it's silly if you don't use, if you use like some sort of fancy graphics terminal or
something like that. Um, and access the internet for switching it to bridge. Um, yeah, okay.
So, so here I have this access. Now you can see I can't really read it or anything. It's the same
system. And I can type w and see who's on here. Hey, look, now I have a new connection. Look at
this. This connection is from one dot 12. Well, now you know that internal IP of my streaming
computer. That's the computer I'm streaming from, right? Because that's the one I just connected
from. Here's the, the one that's still there. That's our, that's our, our other one. But you
can see that the terminal is pretty ugly. And it's pretty ugly, right? I mean, it's not pretty.
And you, and the crazy thing is, is it's really hard to clean to make it pretty. I mean, you
can make it pretty, but let's, you know, we're going to talk about how to make a pretty terminal
here today. And there's lots of options, but I wanted to give you, you know, the main ones.
So, so if we were going to make a pretty putty, you can do it. You can do it. You can go in here
and you can say, I want to change my appearance font use. Let's change it to, I'll change my font
to Ubuntu Mono, which I had to install. I'm not going to cover installing fonts. You should know
how to do that. And then I'm going to click hit, but on regular, I'm going to go up to 26 points
so you all can see it. And let's do that. Let's change that. And allow selection of variable pitch
fonts. Don't know what that's about. Bond quality, anti alias, hell yeah. Adjust the use of the mouse
pointer. I don't know, adjust the mouse more. I mean, just lots of little things here. I don't
want to really get down in the weeds. Do we want the blinking cursor? Some people don't like that.
I do click okay on that. Color. Should we, let's check on colors. What is that? Allow terminal
specific ANSI colors. We'll talk all about colors later, but default foreground color.
It's got, and you can, you can actually, I used to be able to load a file here.
Yeah, but I mean, this is very painstaking, but you can do it. What else? You got the bell
that's like going to ring on you and stuff. I don't even think I saved that, did I?
How many did it? Okay, let's do this again. Appearance, click plus anti alias fonts,
Ubuntu, mono, regular. I'm jumping, I'm going really big so you can see it. Click on okay.
I'm going to click, go ahead and click on, and now it still says open down here because it's still
stuck on this session, right? The thing I don't like about this is all those changes I just made
are not saved until you click on save. And then when you save it, then the different settings,
you can actually set default settings and that will change your appearance.
Uh, rips are much better, right Pixel? Much better. It's my arm now because I got the boost.
All right, so we're going to click on boost, okay, go open,
open. Where are you going to opening? Are you opening and I just can't see?
Why open?
Nothing. I tried to click, but nothing happens.
Wait, is something happening? I just can't see it. Oh, I'm supposed to double click.
It's not doing it. What did I do? I got, uh, idiot. I got rid of the numbers. All right,
let me try this again. You know what? You can learn from my ADSE 192.168.1.35.
Now we don't want to tell that. I don't SSH. We don't want bare SSH. This other, we're not
going to do that. We're going to do SSH boost, save appearance. Okay, that stuff all got saved.
Oh, I think it's because I made a new session. Okay, here we go. Uh, I've always had problems with
this is why I don't like it. That's why I don't like it. You can't, you can't, Tmux doesn't work
very well in it. A bunch of reasons. So I'm going to click open. All right, now we got a much bigger
screen, right? And my colors, my things a little bit better, RBX, Rob. Um, you, I mean, you can full
screen it. You can, you can full screen it. Um, you can change the background color. I actually
made an entire configurized settings for putty for my skill stack because they wanted the colors
that I had. And it took me forever. And I had to figure out how to save the configuration file.
It's a pain in the butt because it doesn't save the configuration file in JSON anywhere. It's just
like just there. And it's really hard to like save off that stuff. Then they, they made another
version of putty to do that, all of those kind of things. Um, and it's still not quite there.
So, but you know, here we go. So, I mean, that's something that looks a lot better.
It looks a lot better than the other one, right? That it holds all your possible
association configs in one place. I think that is an advantage, but I also think it's a disadvantage.
And I'm going to tell you why, because I think it's more of an advantage because
nine times out of 10, you want to have that stuff saved some place, right? And you need
to have it in a file. So look, I wanted to show you putty because you have to know about it.
But one of the, the, okay, one of the best parts about putty is also the worst part.
Putty hides you from a lot of the magic that's happening with SSH. And if you're nine years old,
that's really nice. But if you want to do anything beyond that, you can do full screen.
Yeah, you can do full screen and it looks pretty, pretty damn good. Yep. I'm just not going to do
it right now because it's going to take over my, my space over here, but you can definitely do full
screen. And I think it's all to F11. If I remember right, otherwise you can right click here,
full screen. Yeah. And it's, it's pretty, it's pretty, pretty, pretty, you know, it's not bad.
It's pretty snappy too. As the terminals go, it's pretty snappy. The thing is too, is it's,
this is already made a remote connection. So it doesn't need anything extra, you know,
you might want to do the configuration. And if somebody has the link to the other version of
putty, this is a lot of people, a lot of people who use Linux in the cloud or in the server or
on a VM, this is their preferred way of doing it. Like above all other ways, this is their preferred
way because they can, they can just get it connectionally quick and have to worry about
setting up a terminal, blah, blah, blah. But, but I find that if you're going to be doing a lot of
development to, you probably want to use more than putty. So, so let's talk about the terminal.
Let's talk about using the terminal and making it easier to use the terminal. Okay,
whether it's a command thing. So it's the first thing we're going to do. We have 30 minutes to
talk about Windows terminal. Okay. And I mean, you already know how to download Windows terminal.
And I'm running it right now. And Windows terminal gives you full control over all this stuff.
So before there's been lots of videos made on it. And I've added Windows terminal down here
so I can click on it and run it. Now my default, so I'm going to go through my settings on my
Windows terminal right now, so that you can track them. So I'm going to go put that in my,
in my timestamp. So what are your favorite Windows terminal settings? And I will probably
do the same for iterm as well. Just cause a sec. I mean, this is for our timestamps,
so we can get those later. All right. So, and we're going to talk a little bit about theming
and stuff like that, because I know you all want to talk about it, even though it's not strictly
a boost thing. It's one of the most popular topics. Okay, so let's go back to Windows terminal. I'm
not going to talk about how to get it or anything. And I'm going to kind of exit full screen mode on
terminal here for a second, which I always forget because I haven't been using Windows
that long for this. I think it's 11, right? Is it F11? I think it is. Yeah, it's F11. Okay.
So F11 to go in and out of full screen mode on the terminal. And I'm going to not use full
screen mode for a bit, so that I can show you the different configurations and stuff. Okay.
So, I mean, how many of you have used Windows terminal before? Is anybody want to raise their
hand on that? And then I can kind of get a sense of it. I'm going to talk about it all anyway.
But so, okay, good. So again, we've got all our other stuff running in the background. I'm just
going to have this kind of on top. And I'm going to run it in not, as you know, I run everything
in full screen mode because it's just prettier. But I'm going to deliberately run this in tab
mode so you can see the different tabs for a bit. Okay. You used it? Okay. Yeah. Well,
the customizing is a little tricky. So let's talk about that. First of all, it's just a terminal.
So don't, you know, lose control. This is also the point where I need to, there's the obligatory
mention of VS code, right? So if you would rather not mess with MS terminal, and you actually want
to use VS code for certain things, a lot of people, they would do VS code at this time.
And I'm going to mention it actually, because I think it's worth mentioning. I think it's
worth mentioning VS code. And I'll, you know, I'll come back, I'll do VS code after this.
Because I want to keep them together. And that's kind of keeping me on track.
All right. So, so let's go back. So what, what do we got here? My terminal has been really
tricked out. So when you run the terminal, you should save it in your icons down here. And you
know how to do that. And you right click on it. And then you can, you can add all these different
things, right? And by default, somebody, I heard somebody complaining about this. By default,
when you install Windows terminal, it uses Windows PowerShell, which really confuses people who have
been using the command prompt CMD before, or something like that, right? You always have to
click on it too, if you do full screen, I hate that. But so if I right click on it,
Windows terminal, a bunch of things. But this is also a little pet peeve of mine.
You have to click on this arrow right here to get to what you want. And you can't get to that
arrow unless you're not in full screen. I think that's a major oversight on their part. There's
no way to get to the settings that I know of besides control. I mean, even when you're full
screened. So let me try this. I want to go back to full screen for a second. I doubt you can do it.
So what is it? Control? Yeah, it's already been taken over. Yeah, you can't. Okay, I guess it did
it. Yay. It did it. No wonder. So it's control was that control comma, control comma got me here.
All right, that's good to know. That's good to know. Control comma, control comma, I'm going to
write that down in the notes because I want to remember that. These current changes.
Why are these all these? Why won't you go away? I want to go back to my thing.
You know what? Because I can't switch back to the one that's not things. I want to find
you control. Yeah, you got to go out of full screen mode. I told you, I hate that. It's the pain in the
ass. Yeah, I'll tend to make the full screen. So does F11. So anyway, that's all really annoying.
Is it control shift W to close it? Actually, I just think shift W will do it too.
Anyway, let's try it. Let's do it again. Settings and I think control W will just do it.
No, control shift W. Control shift W. I'm not a Windows person. So, okay, that's good to know.
That's good to know. Control shift W. All right. Good to learn and stuff here.
The most annoying thing about so, okay, so if you want to know the quick keys here, and I do,
F11 or whatever for full screen, control comma for settings, which I don't always change, but
if I want to change settings and go back, and now it's control shift W, right? All right. Yay,
I'm making progress there. Yeah, control comma. All right, so that's cool. I just learned that.
This is what I've been doing. I've been going in and out of full screen mode,
and then I've been going over here and clicking on this down here and going to settings.
I think it's really a bad decision for them to not have settings here.
Close the points. Yeah, so right here, they don't have settings down here. I really
should, they did. I mean, it's a pretty common thing to go down there and get the settings,
right? They don't have that. I just, you know, people ask, well, do you use tabs in that? Okay,
so I have to tell you straight up, I do not use tabs. I use Tmux, and if you want to use tabs,
well, that's fine, but I encourage you strongly to learn Tmux because that works everywhere.
Learning all the hotkeys for a specific terminal program to split the screen and use tabs is a
very bad investment of mindshare and time, in my opinion, because now you're tied to that program.
Putty doesn't have that, for example, right? So if you did putty connection and you did
this connection and you're using Tmux to manage your screen real estate,
guess what? It works everywhere. So that's my take on that. I don't really freak out on
anything that does with tabs. I make sure that you make so many live errors. Oh, yeah,
I make live errors all the time. Are you kidding? It's because we're just screwing around together.
I don't, you know, whatever. I'm making tons of errors. I build so many windows, so I don't always
do it. So here we go. So we click on plus, and it gave me a new git bash terminal. So
how did that, why is it doing that? You're probably seeing a new PowerShell terminal,
you know, like, oh my God, like I was, I have no idea how to do PowerShell. I'm still learning it.
But, you know, that's the thing. You can type exit, get out of there.
And bridge the Wi-Fi. Okay. So we're going to click on this and we're going to go to settings.
Okay. And under settings, it's super important, the default profile. You see how I put it as
git bash. I changed it to git bash, to run git bash. Now, some people will put WSL2 here. I,
as I said, especially if you're a beginner, I suggest you install git bash first and practice
using that and then learn these other things. Otherwise, you're going to get Windows, okay,
PowerShell by default. But you use git bash as your default. And then when you start up a new
window, you get a new git bash terminal. Now, I've got problems in my bash, we're seeing left over
from before that I haven't fixed yet. I'll go show you how to fix those. And then, then what we
got, then we have launch on machine startup. So that if you want this to run on startup, launch
mode, new instance behavior, and just a bunch of little things, I really don't, I launch in full
screen. Some people don't like that. So that can be a thing. I don't want to spend too much time on
this. I think what most people are after is the JSON file. And I am going to turn my privacy on
just to make sure that there's no tokens in my JSON file. I don't think there are,
but I'm going to just double check real quick.
Okay, we're good to go. So here we go. Now, I've installed this code on Windows because,
you know, I need, first of all, you don't know how to edit files.
You know, we're going to talk about this code in a bit, but
this code has got this error in lately. It's driving me insane.
It's driving me insane. And somebody knows how to fix it. And I don't want to do it.
I'm going to click canceling solution for right now.
Is it if you don't know the JSON means, yes, you need to know JSON. So, you know what?
What is JSON? All right, so I'm going to answer that. We're not going to go deep into JSON,
but we need to answer that question. So let's go do it. Where did my stuff go?
Did I lose my session because I've been doing the settings thing? I think I did.
All right, so let's go back here. What is JSON? All right.
All right. I kind of like this method because it's forcing us to cover the critical pass
stuff as we come to it, right? And we're going to talk about that. It just says the station
you're being nice. I'm glad it's six. It feels good. First time you do it feels really good.
And all right, so, so this here and my settings for this are really small. I haven't done any
configuration in my VS code. We should probably spend a good hour on VS code,
but not at the moment other than the font size. I need to increase it. Actually, I can just do the
plus. There we go. Make it big so that you can read it.
So what is JSON? JSON is a structured data file format,
file and other data format that consists of key value pairs mostly and less color rays
that are configuration settings. And we will learn JSON. In fact, I feel like we need to learn
JSON really quickly right now. So let's go ahead and do that. I'm going to give you a quick test
on JSON. So let's go ahead and download. This is very organic. Let's go ahead and download VS
code right now onto your Windows machine or to your Mac. Now, anybody, I thought you were a VIM
guy. Yes, I am. But if you're just starting out, and by the way, a lot of people are going to use
VS code also. So should I use VS code? Okay, the answer is yes, you should learn to use VS code.
And we're going to put this on after a while. So go ahead and download VS code. Take a moment
to do that. I'll wait, but I'm just going to go forward and talk about it. And then I'm going
to kind of give you an overview of VS code once you install it. And let's do the time step on this
one. I wasn't going to do that, but it's definitely the best editor. VS code is actually extremely
good for beginners because it has so many helpers. It's actually kind of a negative thing because
people become dependent on it, and they can't abandon it later when they might want to do
hacker sorts of things with them. But let's talk about VS code for the next 19 minutes since we
kind of hit that we need to edit files and stuff, right? And we can also use scp to copy a file over,
which is what a lot of admins still do. They just copy the file and they edit it in VS code,
and then they don't or they edit remotely and they don't even use them. So knowing how to do that is
worth learning. There's no doubt there's going to be a lot of people on your team that do that.
So before you say, I don't do that, I use them, you should at least be able to say,
I know how to do that. So let's spend the next 19 minutes on VS code. That's all. I don't want to
spend any more minute, more time than that. And that will allow us to talk about JSON as well.
So the overview on VS code is this. It's visual code, I think. Is it visual code?
Visual code.org, I can't remember. What do they call it these days?
Yeah, there's code.visualstudio.com. I actually worked very closely with these people. I've had
several meetings with the core developers while I was using VS code for pair programming and
team learning. I would do a mentored session and we would share it a session. VS code was created
by Microsoft using technology that was invented largely at GitHub. A lot of people say that one
of the big factors to Microsoft buying GitHub was their involvement with open source, which had a
lot to do with Visual Studio code. I don't know if that's true or not, but you can go ahead and
download it for any target OS Linux or anything. There are versions of Visual Studio code that
don't have telemetry in them and things. I'll let you go down that rabbit hole on your own.
We're just going to use the basic one. So you download from Windows and do the MSI
installer. It's very straightforward. You don't really have to do anything else. And again,
we're only going to spend 20 minutes on this. So I am going to talk to you about the highlights and
the gotchas from VS code for an absolute beginner. And we'll close up this thing right now. So when
you first save code browser and trust this window, that's interesting. It must know I'm streaming.
Interesting. Did not know that. It hasn't done that before. All right. So when you first open
VS code, you get all this stuff here. You can open up a new file. The whole thing can be broken in
half. And it usually gives you a help file at the beginning, which I've already closed off.
You can run a terminal VS code. Yeah, that's the one. So there is a terminal that you can run.
If you run this, you get a new terminal and it will give you the default,
which is currently PowerShell. If you have installed git bash, which I suggest you do,
you can run git bash shell. You can actually run them next to each other. And then you can like
trash the other one. And you can get now what I want you to notice right away is the colors.
You see how beautiful the colors are? The main reason that I use VS code for beginners,
the young beginners in particular, is because there is like thousands of color themes available
that you can pick from. And you can instantly change them. In fact, during Christmas time,
a lot of times, where is the intense red one? There it is. I love this one. Isn't that crazy?
See, if you're a visual, look, 90% of the coders that you watch on Twitch or YouTube
are going to be using VS code. So not knowing about VS code is kind of bad. You should know it,
even if you don't use it all the time. I use VS code for a year and a half while I was doing
web development and pair programming. I think VS code is extremely bloated. And the reason I
eventually left it again is because of that. So whether you use VS code or use VS code or
anything like that, a lot of people don't like it. But I am not going to judge you if you use it,
particularly if you're just trying to get started and you've never done anything.
It can be good for a beginner. And if you're trying to teach young kids,
it has the group box theme is already built in. So this is my theme. It's already part of it.
Also check custom themes without installing them. I didn't know that. That's cool.
And it gives you a terminal. And by the way, this terminal over here I can do SSH. Remember,
RWBXRubb at 192.167.1.35. And I should be able to connect. But here's the cool thing.
I'm assuming that works. Did I turn it off? Please tell me I didn't turn it off.
I might have run out of resources. Oh my God, do I? I hope I didn't. Is he still on? Or did I kill him?
The boost is running. Okay.
Wait, what? We're going to do Vim. Don't worry. I didn't say we're using this code. I said we're
learning about JSON. And if you're editing files on Windows, you can use Vim for the
command line on Windows as well. Look, these are beginners. They don't know how to edit files.
And I need to show them JSON first. Okay. Look, I'm not saying go use the code. I'm saying
know that it exists. And we're only spending 20 minutes on it. So don't freak out.
You know, you should not be a bigot about editors. You should have a preference,
but then be able to work on anything, in my opinion. Yeah, remote files. You can,
but it's horrible. I would never recommend doing that. Okay. Adam's good too. I like VS Code because
the terminal's better and the interactions are better, et cetera, et cetera. Okay. But why am I
showing you this? Because I set VS Code as my default editor for JSON. And that's our, that's
our topic now. So I am going to give you the world one tour here. I'm going to make sure you
catch up with a couple of the gotchas in VS Code before we leave it. Okay. File. See here right
here. Make sure you find file and you scroll down and you click auto save and turn that on.
I, I have seen so many people lose code because they forgot to turn auto save on.
Okay. Turn auto save on if you're going to use VS Code.
You run make from the terminal. Yeah. If you want to. It has Git integration.
And then it was, what was the IP? I don't remember my IP. I thought I had the right IP.
Obviously I didn't.
Was it 37 before? Did I space the IP? I probably did.
Well, it's right here.
But I don't know what's easy.
I'm practicing on putty to see if I'm getting it right.
You guys have to pass it around. Oh, it's still there. Okay. So that's just my being stupid.
All right. So terminal, which is controls the bracket. If you want it to, I don't want that
terminal. You could use this terminal, by the way. If you want to, you can. You can use that
terminal too. I use the bash. You notice the terminals don't go away when you close it. They're
still there. Oh, it's one six eight, of course. Oh my God. Really, Rob? I'm so embarrassed. Fast
forward. Fast forward. All right. So now I'm on. See that? Hey, look at that. I got groove box theme.
I did have to do anything. The main reason that I teach beginners VS code is because of the easy,
pretty colors, and they can change the theme anytime they want. I am not even kidding. It's
way easier to do that than to do what you have to do to get the same exact thing in terminal MS
terminal. So if you want a quick and easy terminal, and you don't mind all the other bloat, and I'm
talking about a lot of bloat success of them boys there, but these would be cool. I don't know about
that. I think them keeps me fast in ways that VS code people can't even understand. It's not even
doesn't even register in their brain because they don't know because they've never done it. So try
both and make your own decision, but you need to be this certain things have certain advantages.
Like I have said before, if you're going to take notes in something, I got I will lie. It's I think
it's actually slightly better to take notes here because if you make a new file, you know, some
title, and then what we're going to say, let's do a preview, right? Oops, that's not it. Where's
it doesn't know it's marked on yet. So file, save as where are we some md file type mark down.
And we're going to cover jsonx save. All right, so now it's got us writing in some horrible
place, but who cares. Now you can click on this and you can actually preview it see this. And you
can be over here. I don't think I don't think you can. Can you actually type over here? That would
have been a change if they didn't. So they can be like ballad at less one, two, you know, that kind
of thing. People like this, it's actually kind of nice for taking notes. It's easier to read them
and preview them. Some people use that way. And I don't, if you're going to use them, I think you
should use them the way God intended and we're talking about that. But I'm not opposed to this
just so experiment with it. You can play around with the plugins. Some people find get integration
easier. I think it's, I think the get integration unless you're helping a 10 year old learn how to
use it is a bad thing because it stops you from learning the commands and that you need those
commands. You like really need those commands. And I put off learning them for a long time because
I was working with kids. And so, you know, the branching and all the stuff that you need to
never forget, which we will learn was one of those things. There are a number of plugins and
extensions. In fact, this is where things go really nuts. There are so many extensions that
things get kind of crazy. And I'm not a fan of them. The reason I'm showing you this is because
I needed it to show you JSON. Okay. Otherwise, I'm editing a notepad, which or something, which is
also fine. So like, let's say, if you want to do JSON in that, we could do that. Okay.
That's all I'm going to cover. How's that? That wasn't too bad. That was like only 10 minutes
on VS code. You need get bash for SSH or putty or something like that. My recommendation is you
get bash. A lot of people love WSL2. I despise WSL2, particularly for beginners and for lots of reasons
that I've documented, which I put out there. Okay. Let's go back to this. So let's talk about
JSON. What is JSON? And I'm going to give you the whirlwind version. I'm going to give you 10
minutes of JSON. And we're going to do that. That thing I just did right there. Try that in VS code.
Can't do it. Okay. So I did a transformation, a filter transformation. It's Vim's greatest strength.
We're going to cover how to do that kind of stuff. I can write an entire for loop right here and have
it transform into code that turns into stuff. Completely totally foreign to people that use
VS code or Emacs for that matter. So next, what is JSON? Let's talk about JSON. So JSON extends
for JavaScript object notation. It was invented some time ago by Doug Crockford to like in the 90s
to represent data in a universal way, whether it's JSON or anything else. And it has become
the standard for data exchange on the internet when it's doing its structured data.
And I'm speaking in huge sweeping terms. I know there's a lot of caveats and a lot of
exceptions to that. There's other structured data formats. There's Tomo. There's XML.
There's INI files. They're all structured data formats. And these are the, we structure how data
appears for lots of reasons. But in this particular case, we're using structured data for the
configuration of an application, which I happen to think is a bad idea. I think they should use
YAML for that. But that's what they use. So you have to understand the basics of JSON. So I'm
going to very quickly give you a whirlwind tour on how to do JSON. And for that, we're going to use
VS code instead of them, because you'll be able to visualize it better. And we've talked about
them today. And then you can never talk about them again if you don't want to. I don't care.
You know, if you're, if you're going to be like that, that's fine. To start
VS code from the command line, by the way, you can get on the command line and just type code.
And if you do code space dot, it will start up VS code in the current directory.
So we're actually on a remote system here. So because we're on a VM,
and we're going to get to them. Don't worry, we're getting there. Okay. One thing at a time.
So I'm going to just do VS code. No, we're not going to JetBrains.
Why isn't there? That's weird.
It's worth this not finding it. Why is it fighting it? That is the strangest thing ever.
Well, let's go back to however it was that I used it before.
Why is it not fighting VS code? And from the command line, I know
code. Okay, I guess that is the command. All right, fine. All right. So here's your
getting started window. And I'm totally totally zoomed in. So that, you know, for the sake of
you be able to read it, we're just going to close all this up. All this junk. There's a lot of things
that I get rid of. I don't like the outline thing. And I also don't like all of this stuff,
but whatever. This is the explorer. And I don't actually like this for open.
So we're going to have a new file. And we make a new random file. This is also bothering me.
Again, bloated VS code. There's like some bug in it that I have right now.
There isn't a son. Yep, there is one. So okay, so here's a new a new file and it's not being
saved or anything. And I'm going to show you what we mean. So the first kind of thing that you can
have is how much time we got? What time? I can't even see my timer right now. I got to make sure
I can see it. Oh, five minutes left. Okay, so we're going to do this in five minutes. There's
lots of different kinds of data. Okay, you can have numbers. You can have numbers with decimals.
Right. They're the same kind of thing. You can have that. You can have negative numbers or whatever.
You can have negative, negative 0.3. You can have whatever. And what other kind of data can you have?
You can have basic true or false, true, false. You can have a string. A string is a bunch of letters
and things that are wrapped in double quotes. Okay, so these are all the base, base, base types.
I know we're going to do null. Don't worry. So true or false, these are called Boolean if you
know the mathematical term. Yeah, we're going to do the compound types next. Okay, so and then you
have the type that's not a type or null. All right. So and I'm actually going to save now this is
going to fail because each one of these is a valid value. But then but most of the time when you
open a JSON file, you have one of the collective types and the collections. And there's two types
of collections that are combinations of those things. One of them is an array. So if I have an
array, I have a square bracket and I can have an array of numbers, you know, in JSON, you can
actually mix the types. So you can have an array, I can have a Boolean and then a number and then
something else. And then a string, right, that's an array. Those are called arrays or called listen
thing, other thing. Then you have dictionaries or object home objects. But I refer to them as
dictionaries or hash maps have many, many names. But these are key value pairs. So then you could
say, name, Rob, you know, and then you have a comma, you have like, likes underscore pi, it
doesn't have to have equals true, you know, stuff like that. Okay, so that that's and then you can
have combinations of all of that. And that's where things get really messy, really fast. I don't want
to spend forever doing this. But guess what, pay attention to JSON, because this helps, I've seen
this happen beginner for beginners a lot. No, there's no variables, we're not using variables at all.
There's no such thing. There's there's no such thing as variables in strict JSON. And, and
there's also no such thing as line returns. And strings, you can like if I wanted to have a line
return in here, I'd have to have a backslash and I'm not going to tell you all the escapes for
strings. Just know that that was that's what you would have. Okay, so but pay attention to the
types because these basic types are universal. Every programming language has some form of these
types. Every programming language may not allow you to mix the types in a list. But every single
programming language has pretty much these types, null just means there's no value. And so congratulations.
Now you've had your first lesson in two minutes on types. And, and that's, that's the beginning.
So now when we open up a file that has all those things combined, I'm not even going to keep this
one around. Don't say we're going to actually open the the VS code, I'm sorry, the terminal one,
right? So we've got our terminal here, we're going to go to our settings and we're going to
click on the open JSON file now. And we're going to open this. Okay, so here we have a JSON file.
And as you can see, it's this, it's those basic types that we just talked about. You have a key,
and then you have the value, right? But the value in this case is a list and the value and, and the
first value in the list is what? Oops, stupid. I'm going to break my config. And if the first value
in this list is another object, and then that object has a key value and it has an object,
and that's very common. In fact, the most common way you'll see a JSON file will be to have a key
value pair or, and if you want to call it, JSON calls it objects. But I'm telling you right now,
the term object is very problematic here, because it means so many different things.
This is more traditionally called a dictionary or a map or a hash map.
And calling it an object is a huge mistake, even though it's the O and JSON name. I almost can't
even refer to it that way, because it's so annoying. But this is the file that we need to go in and
change. Yeah, it's a thing, right? It's a key value dictionary pairs, right? And in case you're
wondering, you can't use single quotes and stuff like that, you can use pretty much any key value,
name value for the key, as long as it's done. Now, when they say to go in and change,
when they say to go in and change the values, you can do that. You can go in and change these
values, you're going to be changing your colors and stuff like that. There's my groovbox theme,
right? And I don't mind telling you that a lot of the stuff that I have in here, I just pulled
off the internet. I was like, I want a groovbox theme, and I just popped and paste cut and pasted
in there. This here is a reference to a systems windows variable, which these are the kind of
things that I didn't want to get into. But if you, you just need to know that if you're going to have
this configuration, if you're going to use, you're going to customize your terminal and windows,
you have to have this JSON file. I think it's super unfortunate that it's so complicated to do this.
You have to set up, you know, GWIDs and all these other things. And frankly, this is the reason
that I punt for so many young people and say, Hey, let's just use the terminal for VS code.
Oh, look, see, I killed my thing already. Let's just use the terminal for VS code because
it's not too hard to do, right? So if you, if there's no shame in doing that,
boom, you got your terminal, right? You don't have to do any configuration,
you just go pick your, your theme and you're done, right? But, but I did want to cover this.
And I think we're about done on this particular segment. But I think we've covered, you know,
the reasons you might want to use visual studio code for the terminal, the colors,
if you want to, you know, do stuff, it's also nice for editing files on windows,
if you don't want to do that and you don't understand how to do that yet. By the way,
you can use VIM on windows using git bash. And that's the way I recommend it. I don't,
we haven't even got to VIM yet, but when we get there, we'll cover that just in case you're wondering
if I'm going to ever cover it, definitely going to do that. So, so, but here's your JSON file,
drive back reading, hit Q macro. And that's something I really do like about VS code that,
that VIM cannot touch is anything that deals with colors. And this is why people love it for
window element, because you can actually sample these colors and go change them. That's not the
kind of thing you're ever going to get in VIM. There might be bastardized, you know,
ver plugins for Neo VIM or Emacs that do that. But at that point, you might as well just grab a
bloated ID if you're going to do it. Whether it's VS code, or it's, you know, Go Lend or whatever,
there are certain advantages to having a big graphic ID on occasion. So, you know, make your own
decision there. As you know, I'm primarily a terminal purist, because I just find I don't
find myself needing to do a lot of things in color. But when I, but when I, yeah, these are all
hexadecimal values, which we'll get into. That's what they're about. But if you want to get a chance
to change them, when at skill stack, I actually gave user IDs that were hexadecimal values and
everybody had a color. Yeah, because there was some finite amount of people and they were like,
what's my color? And then we give them a random number. But if you want to change your colors,
you can do that. My values for my terminal, windows terminal are in a specific place.
So you can go put them in there. Let's actually, before we close up the session,
let's actually change them. What you kind of have to do is you have to go into the JSON file
and you have to cut and paste out the values from somebody else's JSON file.
And I'm going to show you right now where mine are, where I keep mine. And let's see if I can
get this faster. Okay, so my terminal values, and it's normal to get your first version of a
config file from somebody else that you don't need to feel any shame there. That is a squirrel
buster. That is that regular that is normal, normal. And so, you know, this is my personal
dot files, you can go look around in here. But I didn't want to show you where these are. So in mine,
if you go into, I think it's install. And, and it might have windows. And then I have terminal.
And then I have settings.json. And this is my settings JSON file. And you can start with that
file and paste it in. And you can use that file, you can use mine as is. And without any, there's,
you can look through the file, there's nothing dangerous, it's just colors, right? Just a bunch
of colors and everything, it will change over time. But then that'll give you the groovebox
colors if you want them in views. If you want to spend, this is, there is no theming of windows
terminal. I'm gonna say that again, there is no theming of windows terminal, you can't drag and
drop from a list and get the different terminal, right? You can't do that. So, yeah, and Bashar
sees a great way to start that, we're going to get into that later too. So, again, if this is,
if you don't want to go through this hassle of learning JSON and copying files and editing
until it shows up the way you want it to and refreshing your terminal and blah, blah, blah,
blah, all this stuff, then just grab VS code and use the terminal from that for now, right?
And then over time, you'll, you'll learn how to, how to do this. It took me a good day to come
up with those values. I actually, the values that I have in mine, I took somebody else's,
and then I wanted it a little bit darker. And I went through quite a bit of work to,
to change the shades of each of the settings. And if you can do that, it's a real pain. I mean,
you need to like allocate a lot of time to do that. Because, I mean, I had to go into the appearance,
and I had to change, you know, stuff like this, use the windows name, blah, blah, blah,
blah. But when you're changing stuff, you need to make sure that you're changing it in the default
profile and not one of the given shells. Otherwise, it will only change it in that shell profile.
If you put it in default, everything new gets it. Okay. And my, my, my color scheme is called
group box. That's the one I've been using. Yeah, group box dark. How do we leave this?
The stage of terminal, you just type exit, type the word exit. Yep, we covered that.
Okay, we got another, I don't know how much of this we need to cover. So we've installed,
you know, I mean, this is the kind of stuff that you're going to want to just mess with it, right?
I don't need to tell you what I've done for mine, unless you really want to ask.
And it has this color scheme theory thing here, though. Yeah, I spent a long time doing that.
That group box one, I made that one. Didn't exist before. So, and there's other people
who have their own group box one, but I made my own. You can set up your actions and different
things. I don't use almost any of this stuff. So, I'll let you play around with that. That's
half the battle of it is learning how to tweak it and turn it. It doesn't really make sense to pair
program the configuration of your MS terminal. That's a very personalized thing. And I get it
to my knees to color. And she's like, really? It's right, right. It's right not work for your use
case. That's crazy. All right. So, you know, have fun, you know, just, just go out and have fun
to doing that. We are way over our time here. So, I'm going to, that's why I didn't want to get too
heavily in the replacement of like terminal stuff, because it can really eat up a lot of time.
So, we're going to take another break and then we'll have our last session for today.
And I would like to get into files and stuff now that we're connected. So, we probably will do an
overview of the file system today. You can just replace the current one with mine if you want.
For now, again, as I said, there's no shame in doing that. Everybody does that. They start
with somebody else's. And then I had, I had stuff in my Vim and Bashar see that I didn't
understand until I was in my 40s. And I just accepted it. I just had it there forever. I was
like, Joey knew what he was doing and I just left it there. And seriously, it was not until my 40s
that I went through every line of my Bashar see and understood what all of it did. There's just
a lot of there to learn. I mean, the bash man pages is really long. So, you know, there's no,
I just want to tell you, there's just no shame. That's all I'm trying to say. There's no shame
if you need to do that for a while. All right, let's take the break. I'm so sick. And we'll put you
here. All right. And we're kind of over on our time. So, I'm going to tell the promo timer to
shut up for a second. Go back to full screen. Pomo. Stop. Actually, let's do this. Let's do
Pomo. Pomo start and we'll do it for 12 minutes. So, when it hits zero, then you'll know ads are
over and everything. Without ugly borders is what's that without the borders. I got rid of the
borders. Yeah. They kind of all go together to make a nice pretty thing. Yeah. And then he actually
started reading the Kodak copy from Stack Overflow for selling it to your customers.
I don't run that. I don't really like desktop on metal. No, not anymore. I wrote all about that.
Yeah. I think Linux desktop on metal is not wise. At least for me. I got burned by it.
Papa was blew up. How many times? How many times has Papa was blow up? I stopped counting. I stopped
counting how many times. I wanted to, I was like, I'm going to go back to mint. And then I'm like,
no, I'm not because work only allows me to use Windows or Mac. So why not help people learn
how to be successful on Windows or Mac? And also, sorry, that's kind of loud. How to do,
you know, how to SSH. I think that's more important. I think getting, being productive
is, is more important. Yep. That's why it's a short version. I mean, if you're one of the
fortunate ones to have the ability to run Linux on your desktop, go for it. In that case, I'd run
Mint or Arch, depending on the situation. So you just manage the SSH from your phone to the VM.
Oh, is that not fun? Is that not fun? I've done that. I've done that. I ran. So I had all of
my students use putty to log into our central server. And I gave them all user accounts.
And there was somebody that needed a Minecraft configuration or something. And I was in the
store with my wife, my wife, we were at grocery store shopping. And I used juice SSH. Do you
guys know about this? I use juice SSH to connect to my server and to use the terminal for my phone.
And I was able to, it's so fun to do that. I actually, I actually had a kid, I left, we, we
did a little hackathon kind of thing and I left some ports open. And I had one of the people
that I was mentoring SSH from a football game and vocalize, Hey, Rob, how's it going? Because it was
on a Mac and you can make a Mac talk. It was really crazy. Yeah. Yeah. And so, so yeah, it's like,
let me, let me show you juice SSH. If you guys know what
and use SSH is the one that I've been using. It's a free client for Android.
Yeah. I think it is so cool. That's the solarized name even.
Oh, it's insane. It's the power of the terminal, my friends, the power of the terminal.
Yep. Yeah, what's really weird is that, um, thank you for that, Paul, that the, um,
you know, the chat client iPhone is terminus. Yeah, I have terminus on iPhone. Yeah.
The chat client, you know what, if you hook up, you can do this too. If you hook up a Bluetooth
keyboard to your phone and you're like a coffee shop or something like that, dude, you can do
all kinds of shit. I mean, sorry, I'm not supposed to swear around break. I need more coffee.
I didn't even drink the other coffee I had. All right, I'll be back. It's fun. It's fun. The first
thing we do it. SSH, the VM to itself using address 10, but cannot get it to work from
GitVash or PowerShell. GitVash freezes and PowerShell returns SSH, SSH, my friend, SSH, not SHH.
S, S, secure shell SSH. Yep. SSH should work for you. And you can probably do it from the
command prompt as well. So if you do CMD in Windows, you can do SSH and it should work.
Yeah. If you have a 10 dot address, that's, that's the other popular one that people have.
So yeah, I'm trying to figure out how to remote connect.
It's through your network router. Yeah. You, okay. If you're trying to do it from outside,
you can't do it without port forwarding. So I'll give you some extra credit here,
some extra, an extra challenge, right? If you, if you want to be able to SSH into your machine at home,
which you can do, you have extra things you have to learn and I'm not going to tell it to you
during the boost. What you have to do is you have to set up a port forward in your home
Wi-Fi router so that any connections to your, to your house, the IP for your whole house,
then you have to figure out what that is. And once you, and then any connections on port 22 or
whatever port you decide to put it on, get routed to that computer. Be careful when you do that,
though, because as soon as you do that, you just put your, you better be damn sure that you have
your SSH credentials locked down, because I positively guarantee you, you will get like
a hundred login attempts in the first two hours as soon as you do that. Because the bots that are
on the internet, it's really kind of fun to watch it just because it looks fancy. Yes. Hey, thank
you for the fall. So it's super fun to do that though. The first time that you do an SSH connection
from outside in the wild. Another thing you can do is you can set up a VPN on your phone
so that your phone is on a safe network, but that's a little bit harder. You can totally do it.
In fact, you totally do it. You can, in fact, I ran Skillstack for two years off of a server in
the corner in my house. And the IP would change every once in a while because the internet service
providers don't like that. In fact, sometimes the internet service providers will shut you down.
They won't let you do that. But I actually paid 20 bucks a month extra to have a static IP. That
means they don't change it. And they don't change my IP. And I just, I inbound connected from all over.
Connected. This is important connection timed out. Well, you have to put, you have to put
the actual number. You didn't just put 10.0. Whatever, right?
Yeah, you need to put the, you need to put the actual full IP number.
10.0 dot whatever dot whatever.
You know what you can do though, there, there are services out there,
DIN DNS and others that will give you a dynamic, they'll give you a domain name
and they will change the IP for that domain name dynamically when it changes and they will detect
it. So you can actually do that. I'm going to tell you, I'm going to warn everybody again.
I do not talk about this stuff during the boost on the first day because the people who do that
end up opening their entire home network to the internet hacks. It's much safer for you to get
a server on digital ocean. I kind of think we should do that actually. How many people would
like that? How many people would like me showing you how to set up a digital ocean server that
does exactly the same thing that we just did here? It's exactly the same thing. You just
push a couple buttons and you say use SSH and you're good to go. I can show you how to do that
and then, and then you can access that thing from anywhere. Would you guys like to see that?
Because then, now you have all the options, right? Now you know, now you know how to
have a server that anybody can use and you have your own internal server.
GCPnano is tier-free. Yeah. I've never used GCPnano. Maybe this is, maybe we should try it.
Masi, you know it. Do you know GCPnano?
Hey, Bridge, do you know how to do GCPnano? If somebody knows GCPnano, I think this is the
time to do it. We should probably do that. Maybe, let's do that the last hour.
Why don't we talk about putting it already?
It's super easy. Let's go figure it out. I don't, I've never done it.
I'm a huge DigitalOcean fan. I'm a massive DigitalOcean fan. So,
all my stuff is on DigitalOcean, but I think GCPnano is worth trying. I mean, I think,
I think this is the time to talk about it though, because we've just got our VM all set up
and we've talked about using SSH and I'd really love to show, where how much time we got?
Three minutes. Oh shit, I gotta run another ad. Okay. I would really love to show
that everything that you just learned applies to the cloud also. And that is why we did that.
That is why we did the VMware approach. We basically made ourselves a tiny little fluffy
cloud at home that you can connect to. But if you want to be safe, you can like make one of
these out in the wild. Let's do that. I'm going to go grab some coffee. I'll be right back.
You got three minutes. Oh, I know. DigitalOcean's wiki and blogs. Oh my god. You know what? We'll
do both. We got an hour. We can do both. That's a great thing to end on, I think. And we can make
this entire day dedicated to remote access through SSH and stuff. That's a great idea. We should,
we should probably do that. Does Amazon have a free offering anymore? They used to.
GCP and Google has the docs. EC2 servers, unless it's viewers, SSH and the player. Yeah, I usually
do that too. I do that too. That's how I, that's how I round skill stack. I had a centralized
server that I managed and I had like 120 users on it and they would log into it from school and
everything. And that's how I did it for a long time. Multi-user server. But I think it's also
very important that you know how to do your local VM. You have done EC2 before. It was a piece of,
yeah, in comparison to this. Yeah, it's easier, but here's the thing. You still need to know how
to set up a VM locally. So yeah, I'm going to, that's going to be the takeaway.
I can already tell the takeaway from this year from the 2022 boost is going to be,
okay, let's do cloud first. Like, let's do digital ocean or GCP first and then we'll learn how to do
a VM maybe. Be like, I don't need a VM. I'm just going to do it in the cloud.
They're not wrong. The reason I don't do that is because of the danger and that I'm a little bit
worried about that too. As a future, everybody's got a future now. Yeah. Another thing to do is
be able to do stuff locally and we talked about that. You can't, you got to be able to do local
development. Can you do a snapshot? Yeah, but not really. Go and bash and go today this week,
this year. All right, we're going to get started here pretty soon, 45 seconds or so. I'm going to
read some copy.
All right, everybody. Let's get ready to start up again.
So, I'm going to finish my coffee.
I'm going to do files next week.
I'm starting to get here. I'm like eating your ear. I'm sorry. I'm going to do files next week.
I told you it was organic. We change it based on the needs and the desires of the crowd.
This is what I do when I do a 101 mentoring. It's like me and you talking like,
hey, I don't feel like that today. Let's do something else.
Redirect. That's what we're going to do.
Tremax is great. We're going to talk about Tremax when we talk about T-Mux.
We're not there yet. You've got to be very careful with it.
So, yeah, just know that.
All right. Restart the timer here.
This will be the final session for today. I know I'm going over time, but that's because reasons.
As time has it, we got one more session here.
I've been a little bit lax on the time breaks and stuff. So, let's go ahead and do it.
Pomo starts 52 minutes. All right.
There we go.
So, during the break, we talked a lot about how similar everything we've learned so far is
to the SSH stuff is to the cloud. And I think it's important that I tell everybody that when I
first started SkillSci for the first five years, in order to reduce the amount of startup and
hassle to get a cloud terminal, to get a terminal, for the first two years, two or three years,
I ran a server from home. And this is where this came from. People were asking, hey,
is somebody just connected with their phone and to their local server? And as soon as you start
doing it, you start to see the possibilities like, oh my gosh, can I connect to this from
the outside of the internet? You absolutely can. But that brings up some security questions.
It's like the whole idea of remote access considerations.
So, we're going to talk about this. And then we're going to actually do some connecting. And
I'm going to show you how to do everything we just did. And we'll walk through it. And we'll use a
service provider. We'll use DigitalOcean, which I know I love yous all the time. And I want to
stretch my own skills here. I've never actually set up a GCP Nano server yet, which is free.
So, I would like to set up a GCP how to set up a GCP Nano server for free. And I don't know how to
do that. We will figure that out. We're going to talk about setting up a DigitalOcean account.
Server. And we'll talk some about some of that. But I feel like it's a good thing to end on since
we've been talking a lot about remote access. And all of this stuff that we're evolving with SSH
is normal. When I started this whole enterprise of mine, everybody got putty, a preconfigured putty,
and they connected to Skillstack.sh. And they did all their work from there. And there was like a
couple hundred students over there. But we have to talk about remote access considerations. And I
want to spend at least a good 10 minutes on this. Why is setting up a cloud server? What are the
differences? What are the considerations that you, as an architect and as a hacker, that you want to
think about? And I just spew them out there. We've connected to this local machine inside of your
local Wi-Fi network. What are... Oh, thank you for that, Masi. I'll go cue that up.
What are the considerations? Just throw some out there. What are the considerations that we need
to think about? So, so and so connected to their local VM from their phone on their Wi-Fi. They
consider that from your laptop. You can connect to it. Can you connect from the outside world to
your laptop on your Wi-Fi? No, right? So, what are some other considerations?
Did I start talking before my thing was done? I think I did. Is everybody there?
Yeah, locking the server down? Okay. Security. Security is the big one. All right. And the
reason that I stopped teaching people how to make cloud servers was because teaching you how to make,
how to do a cloud server and set up a cloud server without teaching you how to harden the server is,
in my opinion, somewhat irresponsible. And it's, you know, there's people who do it. There's people
who will teach you how to harden your server and stuff. But for me, I mean, this is like a
pair programming kind of situation. And so the reason that I didn't originally plan on teaching
you how to make a digital ocean server or a GCP Nano or an Azure or AWS or whatever is because
I have one thing and I, and I've been convinced to do it now, you know, because people want it.
But I am going to tell you right now that you, if you're going to have a server
outside on the internet, on a cloud, it will be hacked. Unless you, I guarantee you it will be
hacked. And if you don't believe me, we're going to do it. We're going to, I don't know if we're
going to have enough time or we might have enough time. We're going to, so firing up a server here,
we haven't gone through logs and stuff, but we will. We go through the file system next week.
In fact, it would be fun. It's free to set up a nano server and just let it be,
don't put anything secret on there or anything. And just, and then let it run for a week.
Okay. We did this at our security camp and just let it run for a week. Don't do anything to it.
Just let it, just be a honeypot out there because it's getting everything. And then
have your VM and let your VM run for a week or so inside of your, you know, your, your little
private network there. And then when we start talking about logs and file systems and stuff,
you can go compare the logs from the server that's exposed to the internet to the server that's
inside of your private internal network. And I, you will be astounded to see the difference.
And spoiler alert, someone will try to hack you about every five minutes, if not more on the
internet. And the number of bots that are out there, the botnets that are out there are so prolific
and so huge that seriously almost immediately after you put a server on this, on the internet,
if it has any, any security patches that it's missing, it will be hacked almost instantaneously.
And it's really fun. If you're a hacker, if you're a hacker, it's like, Hey, look,
I got found somebody else here. And you get, dude, it's a great time to be a hacker because
you can like walk into anything. And now I'm not telling you to break the law, but I am telling
you that it's very terrifying. It's actually, what's even more fun, if you really want to troll
people here is, is you can set up, you can set up a digital, it's, it's more fun. And it's also
not illegal to do this. In my opinion, this is more fun. And it's actually very legal. And this
is kind of before we go into the cloud thing. Okay, keep banging on the root. Yeah. I think it's
much more fun to set up a honeypot and then to shut down and catch dumb hackers than it is to
hack, you know, targets that are not in the pen testing world. By the way, the Department of Justice
this week, the Department of Justice, I got to read this to you. Since a lot of this is about
hacking, I want to read this to you. It's super important. Department of Justice made a huge
announcement this week. One of the biggest ever actually, and it's pretty amazing. I can't believe
it's not high on news. It's in my Twitter, but there's an F word in there. I don't know if I
want to show that on the, on the stream. Looks like I'm going to have to. So look away here. I'm
going to put privacy on so you don't see my effort. Because I'm trying to be suitable for work now.
My Twitter is not suitable for work. I was telling you, just look at showed and if you don't know
what that is, don't tell me about that yet. Don't tell me about that yet. Anyway, so
all right, here we go. All right, now you can look. Now you can look. All right, so
here we go. The Justice Department says, good faith researchers no longer will face hacking
charges. So if you, so Aaron Schwartz, remember we dedicated the hack, the the boost to Aaron
Schwartz, Aaron Schwartz would not have been, they could not have caused him to do what he did,
had he been alive today, because they just made it illegal. This just happened. This just happened
this week. It's a pretty big deal. They just changed the laws, broken laws to say that you can
access systems if you're a good faith actor. That means if you're pen testing and you access the
wrong, there are people, there's a guy who went to prison for a year. Because he hacked a system
that, and he told them about it, and it was a positive thing. He was trying to help them find
them. They said, no, we didn't tell this guy. He went to his, he went, it's insane. You can read
the whole thing. So, so what I'm saying, but it's actually much more fun to set up a honey pot
and wait for one of those stupid script kitties to walk into your honey and then just own them.
Many times out of 10, they won't even be from your country. They'll be from someplace else.
Way more fun to do that, because they just hacked you. They just willfully came into your system
and hacked you. It's much more fun to make a honey pot and take out a stupid hacker than it is
to hack something that you probably shouldn't be hacking, you know. So, and if you are going to do
that, by the way, go into pen testing and then make money on it. So, and now you're kind of protected
by the law more than you ever were before. So, you know, hack for good and, and then honey pots
are more fun. Honey pots are more fun because then you just get to laugh at how bad the script
kitty hackers are. They, they like, I'm probably saying too much. I'll stop saying anything else.
I'm not encouraging you to hack, but if somebody hacks you, you hack them right back.
Someone tries to kill you, you kill them right back. That's a quote from a movie. That's not
something I'm recommending. Anyway, so I had a responsible disclosure, a massive financial
fund, really nobody cared. No, they don't care and tell you report it. There's a guy who was,
he was indicted for, they did not find it and they went public with it and they sued him and won
and he went to prison because the, but the world was a better place because of it, because he
embarrassed them. I'm serious. You got to read that article. It's amazing. So, so people are now
being protected for that and, and that's great. All right. So, enough about the honey pots thing.
I, I'm just telling you, if you're going to do Shodan, Shodan is a different thing. Shodan is a
way of finding people who have open doors that are just wide open. You just walk in there.
That's not something I'm encouraging you to do. It's not nearly as fun and might get yourself,
you know, arrested. You never know. You might be walking into a honey pot that somebody set up to
catch you like I would do. It's actually way, way, way, way, way more fun to make a very,
very subtle honey pot that some good hacker thinks is, you know, oh my God, they get all excited
because they break into it, right? Those are way more fun. The way more fun because then you have
to get smarter than the hacker, the good hackers. You got to get it. It's like, it's like you're
fishing for good hackers. Can you send flu shots? I don't know. Hey, Lauren, the hacker's in there,
but that's the good question. I'm not going to tell you how to do that. I'm going to tell you.
I mean, there's lots of ways. There's lots of ways, but I'm not going to tell you that.
So, if you like the security thing and you like, and you like that, and you're
prepared to do that, by the way, if you, if you hack the wrong person that way, and you're not
prepared to deal with what they could do to you, which, you know, it's one of the reasons I don't
do it so much anymore. It's super dangerous to do that because you just don't know who you're
going to get ahold of. You might end up angering a state actor or something, and that's just not
good. You don't want the dark army knocking on your door, you know, like, why did you set up a
honey pot? First of all, they wouldn't fall for it. And yeah, yeah, with honey, like literally.
Yeah. Okay. So, enough of that. I mean, obviously it's a topic I really love to talk about. I do
believe it's a topic that helps the overall good in the universe by reducing the number of people
that are going to hold a hospital, you know, hostage, which the fact that certain people can
do that just completely escapes my level of understanding. So, but I mean, there's a lot
of fun things you can do there. But you can't do any of it unless you know how to use a server.
And so, how do you set up a server? Since Russian invasion of the US government is
lighter on hackers. Oh, yeah. Yeah. Yeah, there's, so another thing too, I'll just say,
if you're, if you're going to hack, don't hack your own government.
Hack another government that your government is kind of not into at the moment.
You won't get prosecuted. I don't want to get into all that stuff. And my hacker skills are like,
shit right now. I'm sorry. Whoops. I'm not supposed to talk bad. My hacker skills are so bad. I was
reminded that watching OSCP the other day. So, they're horrible right now. And you can't do any
of it though, unless you know how to set up a server and do all of this stuff and, and again,
and make tools for this kind of thing. And that's what we're going to learn in the boost. And that's,
I just want to just mention that maybe as motivation. First of all, hacker club, don't talk about
hacker club. Exactly. I know. Okay. So, unless you're a Twitch streamer, and then, you know,
again, I, to Twitch TOS, I don't want to get banned because they will ban your ass on Twitch.
If you talk about illegal hacking of any way, you know, or, you know, you show a body part,
they'll ban you for the two. So anyway, let's talk about how to do the servers. We got,
we got 38 minutes to talk about this. This actually isn't really a lot that I can show you.
What if you talk about that one? So, a digital ocean server. Now, I happen to know digital ocean
servers. You know what, this is going to be really hard for me because I'll end up doxing
stuff about servers I haven't hardened. And I don't want to do that. I don't want to do that.
I don't want to tell you all my servers and everything. I mean, I'm more okay with you
learning my IP of my house than my servers. So, so I'm trying to figure out how to do this. So,
I think in the best ways to go into incognito, and then to just show you digital ocean. Okay.
I cannot show you, I cannot show you the digital. Thank you for the link. Let's go grab that link.
And yeah, I'm not, I am not even going to risk signing into digital ocean in front of you.
That's just, just not wise on my part. But I will down here. I'll put it down into related.
And you can go, you can go try it out. And you know what, this is kind of, I think this is probably
would be a good exercise for you. I don't have a problem doing, well, I should probably not do the
Google one either. I mean, let's talk about how to do it. But, but I think I'm definitely not
opening any of my digital ocean to anybody because there's just too much there. Now,
when I was working with people one on one, the thing is really great, especially if you're an
educator, digital ocean, you're no, there's no free tier for digital ocean. The lowest one's five
bucks. And what you can do is you can get it and then you can get rid of it. Digital ocean has
a thing that you can do where you can set up a team. And so you can have like five or six or
10 people share the cost of one server or something. And then they can do it. And it's really
great for educators. So I'm going to tell you what I used to do for people is I would set up an
account and then I would, I would pay and then they would have access to it. And they could bring
up a droplet and take it down a droplet is their word for a virtual machine that's running in the
cloud. Surely you have a burner email account to set up. Yes, I do, but I didn't have it set up to
do that, Denny. I didn't, I wasn't, I wasn't, I wasn't planning on it today. So I don't want to give
up even my burner accounts. So then you have experience with Linode. Linode is a good service
too. A lot of people talk about Linode and people advertise for Linode on Twitch. Linode is really
great. Linode had a very devastating hack that pretty much tanked the reputation for a very long
time. I did your center pass for the play text. I don't, I've never used Linode. I like Digital
Ocean's interface better. I'm kind of, I kind of like it better. I like the Digital Ocean company
a lot. There's, I've never seen Linode, for example, pay people to write good documentation.
So, you know what I'm saying? Vulture, what's Vulture? Let's just talk about that. Let's talk
about it. Rather than having you, let me like drop all my things here. Vulture. So, so let me,
let me give you a challenge here. And by the way, if you want to do that while we're sitting here
and talking, go for it. Sign up for one of these accounts and sign up for one of these accounts
and then try to create one and it will give you an SSH and you're going to see all kinds of things.
You're going to see a web console. Well, I don't know. I just, I really like the docs on
Dud, I love the Digital Ocean and graphic interface. And it's a brand name one. You can
afford it. It's pretty cheap. Vulture was cheap when you signed up a few years ago. I don't know
about that one. Is this it? Vulture Cloud Servers? Very cool. I did not know about Vulture. This is
the first time I've heard of it. So, I guess let's put this in here. Let's talk about
I mean, let's talk about this. Let's say, what are some cloud providers? Where can I get on the
internet? Okay, how about that? How can I get a VM on the internet? Let's just change that to
be our topic for right now. So, how long we've been talking about this for five minutes or something?
Isosec-d minus five minutes. I'm going to replace that with a number. There we go.
Put that there. I think that's probably good. AWS, GCP too. Those have insanely complicated
UIs. Absolutely. Also, so let's actually go through which ones exist. And let's just talk about them.
So, DigitalOcean. DigitalOcean is my favorite. I think it's .com, right?
Yeah. DigitalOcean.com is hands down my favorite. A lot of good things came out of there.
Actually, Steve Francia, who made Cobra and the Google of Angelus for Go now,
started there. He worked there for a long time. Another one is Vulture. So, what did you say,
Vulture? I don't know about Vulture. Let's go find that one again.
Vulture.com. I've never used it. There's Linode. I don't want people to think this is an advertisement.
Linode has got all kinds of sponsorships for streamers all over the place.
If it's your password in plain text, massive bold font. Who does that?
Who does that? Linode has had big security flaws in the past, so I don't like that personally.
I've never had it. I mean, DigitalOcean did get hacked once, but not nearly to the level that
Linode did. But, you know, make your own decisions. The big ones, though, the big ones are GCP,
and I don't even know how to do GCP. We just got a link to that, so I kind of want to go do that.
What was the GCP link you sent me? Quick start getting ready on
CreativeVM instance on Google Cloud. Yep. This is the one I really think I would want to try,
personally. I kind of want to do it right now, because Google Cloud is like the new hotness.
I mean, our company is going gaga over it. I mean, they're just doing everything on GCP now.
It's similar to it, but it's friendly. It is. That's everybody says. I don't have any personal
experience with AWS. It's got a killer command line interface, but apparently GCP is like
really, really user-friendly when it comes to that. My experience with GCP from the graphic
interface is that it's very good. Now, I haven't done it. I'm right on the edge of going forward
and trying to make an account right now. I mean, I'm just afraid of doxing a little bit too much,
because I didn't set up for this, so I haven't gone through it. I'm pretty confident in my
streaming ability. No one had to cover something up, but this stuff, I don't know. I could click
on the wrong thing and dox all kinds of stuff. I don't have an account over here, but I would
kind of like to have one. How easy is it to shut off a Nano server? Is it pretty easy?
No, I didn't go. It's too far away. Yep. It's too far away from me. I'm probably not going to go
this year at all. I'm going to go to something else. I'm saving my money. Is it one click?
Is it really? It's possible we can set this up. I'm going to try a few steps here.
I'm going to risk it. I'm going to risk it, because I don't want to throw this whole video away.
I set up a Burner Google account, but then I have to use... Okay. I have a couple of those,
but then I have to go through the Burner account, and then all the form fields are going to
populate with stuff that's already there, because I hate that, and you're going to see my phone number
and stuff. I'm sure it's been docs already, but whatever. All right. Let's see here. Prepare
for the next class. I think this would be a fun one to try before next class. I actually did do
a preparation on GitHub about how to set up keys and stuff, but not so much for this class.
It is five o'clock too, so I know about the YouTube from Cut Tool, and there's another one
as a video, so you can check on it, edit out docs and stuff. Yeah. So it's five o'clock,
and I want to hold to that, even though I think it's probably best that we do that. But let's
do this. Let's do this. This week, let's all go out and play on these different cloud platforms,
so that when we come back next week, we can talk about how easy our experience was to get a virtual
machine running. You know everything now to make a virtual machine on any cloud platform,
and you learned it by practicing on your own cloud platform at home on a VM. It is a cloud.
It's a tiny little cloud, a little fluffy cloud. And you know it all. You know how to set up the
SSH keys. You know what an IP is. You know enough to connect. You know enough to navigate the
command line. You don't know enough to put shells commands over there or understand the file system
yet or any of that. But today, it turned out to be the theme was remote connectivity. That was
the theme today. The theme today was remote connectivity. Figuring out secure shell to make
your connection. We didn't do file transfers and stuff. We'll do that when we do file manipulation
on the file system. And then we can go from there. You can put your yes, you can. You can
do port forwarding and put your home PC on the internet like a gig a chance.
That's dandy. That's one of the reasons we went there, because that's what people were about to do.
The people were talking about, Hey, I just connected with my phone to my local VM. And
they're like, the next step is like, how can I use my phone to connect to my VM from the internet?
And I told them, I said, well, you can set up port forwarding. And then they're like,
and then I had to say, wait a second. Oh, yeah, if you do that, you're going to get totally owned.
I'm sure nothing bad will happen. Yeah, it's actually really fast. The time I caught the hacker
was when I did that. For the record, the time that I caught a hacker is I set up a really hard
in PC. I ran my own domain name. I ran my own mail service and everything. And I got hacked.
I got hacked and I caught them because I had a tripwire system running that I wrote
to catch anybody who created new stuff. And I caught them and I reverse proxied back to their
jump servers. And I turned them into the authorities in Amsterdam, I think Amsterdam or
Germany. And so, you know, setting up a honeypot at home is fine. I just don't I don't want people
to start doing that yet because you don't know how to protect yourself. And frankly,
that might be the next boost that we do after the beginner boost. It might be
security hardening and penetration testing and setting up a honeypot.
That might be fun to do over Christmas, actually.
That might be really fun to do over Christmas. Because once you set up, once you know how to
secure your own home network and, um, yeah, opposite. Well, I love obstacles, but it's yeah.
I mean, we'll have to do that. I mean, that stuff is just really, really fun. The problem is,
I don't want to get blamed for when you get hacked, you know? Yeah, I mean, everybody wants to do it.
You know, it's fun about it. This is what you this is. This is why I like it. Okay. And
we got to get through the boost because the boost is going to give you the skills to do
everything necessary to set up your own things. Christmas NDA.
You're behind seven proxies. Well, see, nobody even knows what that means. But if we cover it,
if we put a little bit more emphasis on networking by pulling, like, yeah.
So, but here's the thing. Once we learn how to program and go and bash and we learn how to set
up SSH and cloud servers, right? And we know containers because Docker. Now you'll have all
of the skills necessary to make your own tri-hack me boxes. And you hear what I just said there?
Once we get out of the boost, whether or not you decide to go on to get a job doing those things,
one of the really fun things that you can do is that you can make your own tri-hack me container
servers. And so you can set up your own gaming. And one of the things that would be really great
is that instead, one of the things that I've always wanted was rather than have to, you know,
pay a company to do that for you is that, yeah, we have war games. And so what we do is that
everybody sets up their own boxes and then we create some sort of open registry of boxes.
And we create some sort of community way to vote on how hard that box was. And then we just let
people have basically you making honeypots. So you're making honeypots that have a particular
angle and that you know people are going to attack and you're not going to have fun with them,
you're actually going to help them learn. And maybe drop some sort of waiver. I know,
I definitely need to do, I need to do that. That's why I haven't done it yet. There's a box on an IP.
There isn't actually a box at five security. Yeah. Yeah, you just never know, you know,
and actually the skillset that I owe was always meant to be that. So skillset that I owe the
binary that's in my shirt is actually vulnerable. Yeah, there would be something like vulnerable,
but it, but it would be a community driven decentralized vulnerable. The danger of that,
there's lots and lots of danger. Okay. The danger of that is that whoever manages the
central registry is up for liability because, because if you, this is why I haven't done it so
far, because if I let everybody develop their own honeypots, right, I can't distinguish the
good faith actors from the bad faith actors. So if, I mean, if they're a social engineer,
they know what's up, they know how to play that game. And they would like totally,
totally own everybody. And you know what I mean? They would totally, totally own everybody.
And I just don't know if I, if I, if I want that, is this, this better be suitable for
worker. I'm going to be mad. Okay, good.
Barely suitable for work. So, so we will talk about this. So,
when you want to teach a pen testing, you have to teach a bunch of network stuff and
it will up security first. Otherwise you get a bunch of script kitties that don't know anything
and end up getting totally owned. This is exactly what I'm talking about. I'm glad you get it.
I'm glad you get it. Because the only reason I haven't pursued that,
and I'm sticking with teaching people the fundamentals of networking and, you know,
how to set up their own local VM. And why I honestly, I haven't added any cloud stuff at all
is because as soon as somebody goes out and puts a cloud on the internet and they get totally owned
and they don't know why they got owned and they use the same password for their cloud that they
also use for their, whatever, you know what I mean? Then they're, then it's just back on me. And I
don't want to be the cut. That happened, that happened in the Minecraft world.
In the Minecraft world, I taught a lot of kids how to do Minecraft mods and stuff and they were
all getting, their home networks were getting totally compromised and some of them, one of them
was the CTO of PayPal. So, you know, it's like you don't want, you know, I don't want to be the
person that's helping people who really doesn't really take them fully through the whole thing.
Because if they don't, and that's why I haven't done it.
Yeah, I'm a good boy. I promise. Yeah. I don't even know you. CTO,
TO. Yeah. Back in the day, it was a while ago.
Yeah, it's, I mean, that was a long time ago. That was eight years ago. Eight, well, no, more
than that. God, was it 13 years ago? 2014, I think, 15? Headless now, Rob, since we have SSH.
Yes, you can. That's a good thing to do. Try that. Hey, we got 20 minutes. Let's do that.
Let's do that. All right. So,
I'm going to put, be careful out there.
Let's do that. Let's, since we got time, let's do that. Let's relaunch our system as a headless
system now and, and do that. I'm glad you said that. Who said that, Ian? Thank you for keeping
this on task. So, we can get rid of the overhead of running with that dumb gooey, right? Speaking
of overhead, let me close my windows terminal and let me go back here. So, where is it? Here we go,
boost, right? So, boost is still running. Yeah, people are going to, the first thing that people
would ask me is Minecraft servers. They would be like, oh, right? Okay. So, we have this, this
extra stuff running, right? And we actually don't need this to run. If you're using VMware, maybe
VirtualBox or VMware, actually. Now, there's a number of ways you can do this, right? If you
don't want to use the gooey though, you can do it from the command line. And I'm going to have to
remember the command because I have to look at it every time. It's, I'm not telling you to it.
But another thing you can do is you can go into the, I mean, you can just close it, right? You
can say save the machine state. Click on save the machine state. I'm going to turn that one off.
Right? As a little bit easier to learn to port forward. Yeah. A lot of people do a lot of crazy
things. Everyone says, hey, I want to run my own Minecraft server at home. You can totally run your
own Minecraft server at home, but be prepared for all that port forwarding consequence, right?
Diving into on a closed course. Do you want to attempt these notes on public streets?
I mean, you know what? And I suck too. That's the thing. I've been doing this for years and I've
seen the skills of some of these hackers and I, I'm like, I know that they could own me in like
two seconds because it's all they do every day all day. So I don't want to open people to risk
too much, but I do think that at least know that you're at risk. I actually want to show
that one of the go projects I want to have us make, but still a bit too much to make. Maybe we
could do it though. I want to, I want to have everybody make Nark. So Nark is a project that
is basically a tripwire clone and go that just, that just itemizes your file changes
and it will catch any hacker on the planet. There's no hacker that can avoid it. And it's a super
easy thing to do. And I think it would be a fun go project. It's really fun go project because
they're not, they're not counting on it. They're, they're, they're hackers are thinking that you're
going to use something else. I like how I branched to a lot of knowledge of what you're not going to
get watching a tutorial. They just run a bunch of nuclear templates on an API. Ooh, yeah, they do.
There's an open source tripwire. I've thought about trying the open source tripwire.
I think it would also be a fun project. Yeah, we have to need the open source tripwire. I don't
know if they've been maintaining it. Well, see if you could find out for me, let me know. We need
to look at that before we get to the go stuff. But I think it would be fun to write that code.
That's a relatively simple program. And it's got recursive file checks and file typing. And,
and it's basically, it's also a great way of enumerating a system you've attacked.
So all the code that would be in a go tripwire program could also be in an enumeration program
that shows all the files that I've set you ID. So you can use the same tool as a tripwire to
protect yourself. And you could use it offensively to like enumerate all the crap on the machine
that's been mis-configured. So I kind of want to make that code on as a, as a project and maybe
and maybe instead of the discord thing, but we'll see. All right. So, so there's no more boost.
Boost is saved, but not running, right? So if you want to use the GUI,
let's do it both ways, right? So the first way is to go to the GUI, headless start.
So you do a headless start and
it's running. I heard my fan go on, I promise.
You're taking my word for it. All right. So now what are we going to do?
So pretend you've configured your SSH terminal because you did, right? Actually,
no, let's do it from the command line thing. I was kind of fun actually. It was from DOS.
I'm going to SSH to my machine from DOS, the Haxer SSH space, RWBX Robb at 192.168.1.35,
I think, right? My ultra secret password, password.
And I'm on baby. Look at how, look at how old my machine already is.
10% memory usage. It says I've got stuffed update. I need to update stuff. I should probably update.
All right. So one last thing on SSH. We don't know how to edit files yet. So I can't touch you
that. You know what? We need to do that next week. We need to do VIM next week. We need to do
minimum VI next week. We have 15 minutes. Should we do it today? Let's do it today.
Let's do minimum file management today. Let's do it. All right. So the resource for this,
since we got time and I kind of got slide tracked. Let me put a timestamp. I know, I know, I know.
Okay. How to start VIM headless. Okay. So we use the graphic thing, right?
All right. So let's, let's, let's, God damn it. Did I not put a timestamp in that? I'm a spaz today.
ISO sec dash D. Three minutes ago. Bing, bang, bash. All right. So there we go.
All right. Now what? So let's do, we did headless like with a GUI, but let's do it without the GUI.
All right. So to do this, we need to shut down our, our GUI. I mean, our, our connection.
So am I on there? Where am I? Am I not on there? Where am I? Where am I? I'm on there somewhere.
It's my DOS prompt. Where's my DOS prompt? Why isn't it showing me my DOS prompt anymore?
Is this it? Okay. There we go. All right. So now shut down, we already learned this one, right?
Shut down dash H now. I'm turning that thing. Oh, gotta sue. Do that. Push up arrow.
We're not going to use up arrow for the history later. We're going to learn VI. It's for that stuff,
but we're not there yet. We need to learn. Yeah. All right. So password is password.
So how do you shut down a machine? Shut down dash H. Now there's, you can do log out. There's lots
and lots of ways of shutting down. I have just done shut down dash H since the beginning of time.
So I do it all the time. Now your machine should be off now. All right.
Now this is the thing. If you're using VMware, I know this font size is sucky.
You know what? I'm going to do something else here. I'm going to do something else.
I'm going to make it so I'm going to open a command prompt terminal. So this is just DOS.
All right. This is just DOS. It takes tools to solve. Yes. We haven't done that yet though.
We haven't done touch or anything with files stuff. We're going to, we're going to do that.
All right. So now we need to start it up using VMware. Now this is the part I don't remember.
I'm going to have to go look it up because I can never remember it. So you said, you know,
you can either do it from the GUI and then you can do it from DOS command line. Now you can
do it from any command line, but I'm going to do it from DOS just to make my point.
Yeah. Vbox manage. Yeah. I think it's Vbox start. I think it's Vbox manage. I'm going to try to
remember Vbox manage. There's no command completion. It's Vbox manage. And then it's something else.
And then I have to go look at all this. All right. So I'm scrolling because reasons.
So it's Vbox manage VM, I think. Yep. Vbox manage VM space start.
Can't remember though. I have to look it up.
I don't know the command for VMware. It's they don't have good commands of VMware.
Oh, you found it for me. Thank you obsidian. You're the best.
I have to look at it every time. Thank you for that. I should probably put that on my notes
like now. I always have to look it up. It's probably a good candidate for like a,
you know, some other kind of thing. Let's put that here. All right. So
start VM headless. Okay. And it's only works if you know the IP number. And the reason we need to
learn about the eyes, I want to show you how to edit your SSH config file. So you can actually
add it. So you just remember the name, like I asked the station to Anton and it does. I forget
the IP. I don't even know. So unlink and stuff like that. We're not going to do that. Yeah,
RM, that kind of thing. We haven't done file removals or anything. So you see where it says
dollar VM. That means a VM name. All right. So I think it goes without saying it is star VM. Okay.
All right. So, so, so, so, so, so where is our command prompt? Here we go. So V box,
even from DOS VM start. And then the name of mine is boost. And then we need dash dash headless
stuff. I remember right, right? Oh, type headless. That's right. Dash dash type headless.
You can just put it in your path. Absolutely. You can do all that. I wouldn't do that until
you've mastered the command because I haven't, right? Is it just start VM? Oh, I'm dyslexic.
Sort of. Not diagnosed, but I feel like it sometimes. All right. So waiting for VM to boost
the power on as successfully started. And I didn't even have to use the GUI. And now I can do,
I can probably SSH into it. Let's do it again. SSH or WX Rob. Of course, it's annoying to type
that every time. I'm going to show you how to avoid that right now. So at what? Rx Rob at
192. I also don't want to type that every time, right? 168.191.68.1.535. And password,
we're going to get rid of password management and later we're going to do certificates.
So there it is. There's my server. I am actually on and you can see the last the connections with
the last command. You see the reboot that happened. You said I'm on a PTS now instead of a TTY.
It says I'm still logged in. Look at that. So it knows that I'm there. If you're a good hacker,
you'd never leave those kind of footprints with one, but you know, there's hard ways to get in.
It's backdoor stuff. So there you go. And that was all from DOS. That was DOS with SSH.
So I didn't even have to do anything else. You know, you can, I'm just trying to show that the
SSH command is the same no matter where you are. And so is the VMware start, the VMware, whatever,
VBox manage VMware start. So, so there you go. We're all in now. Now, let's say we want to do some
other stuff. I wonder if my VIM is actually going to work on this. I think it might. This is DOS.
I'm deliberately punishing myself. So I'm pretty sure you can use VIM here. You can.
Yep, there it is. There is VIM in a DOS terminal. I kid you not. VIM in a DOS terminal, my friends.
So, so there you go. Let's have a little VIM lesson. Shall we? Shall we? And we're going to have the
fastest VIM lesson you've ever had. I'm not even kidding. So, uh-huh. I so sick.
Okay, so we're going to do this like fastest minimum. What is minimum I need to learn?
VIM that I need. And I wrote a guide for this. So you can go read it. I'm going to go read it
right now with you. It's called, yeah, it's called VI survive. And if you go out to it,
and I know I'm going to hear about it because I made some assumptions in order for the simplicity
of beginners. And it's VI survive. And I want you to take your own notes, but if you want to
get there fast, let me show you how to get there. I mean, for today, okay, we're going to do VIM
tutor, but not right now. Yeah, VIM tutor is broken in many ways, and we are going to go through it,
but I think it's overkill for right now. For right now, okay. For right now, it's overkill.
All right. So, so why this is the minimum you need. This is, these are the only commands you need
to, and you're like, well, there's arrow commands. I know. So here's my premise. I'm going to say
this is the last thing we'll do today. It is easier to use VI than nano. I'm going to say it again.
It's easier to use, if you allow yourself to use the arrow keys, it's easier to use VI
than nano. And I see people using nano on YouTube all the time, and I see hackers using nano,
nano this, nano that, and the whole Lennox world thinks nano is easier to learn. I'm here to tell
you it's not. It's not easier. In fact, it's bad. So everybody hates the arrow keys, but I have seen,
I have watched over so many years, I have watched beginners learn VIM and the arrow keys,
nano was not easier at all. They think nano was easier because it's all arrow keys.
People, people balk at using arrow keys and VI for beginners. And then, but they, but if you ask
them about nano, though, like, oh my God, not nano. The reason it's easier is because there's less to
remember. And I want to tell you something that's very dangerous about nano. Okay, let's learn nano
at the same time. Okay, we're going to learn nano at the same time. If you have your BM on, you've
SSHed into or whatever, okay, we're going to use nano. And we're going to, we're going to actually,
no, let's do VIM first. I want you to learn the right way first. No. Okay, so let's, let's do VIM
first. All right. So the only thing you need to know with VIM as a few things. So I'm just going
to open a file. So first of all, to open a file with VIM, you can type VIM. I have an alias
for VI because I've used, I've typed VI my whole entire life. When we do the full lesson on VI,
we will actually go into the difference, learn ed as well. And we're going to do all of that.
But for right now, we're going to stick with the minimum, the absolute bare minimum necessary
to use it. Okay. So VIM space, and we'll say like foo dot, I don't know, MD, right, for markdown.
So that's going to open the file and we hit enter. And we get all these things. Now,
mine looks nice and pretty, because I've done a lot of configuration to it. In fact, I should
probably not use this because it's misleading. Whoops. That was weird. All right. So let's,
let's use, um, let me, let me connect again. Let me use a command, DOS command and SSH.
Hell, the size is horrible on that. I want to get one that you would be yours. So let's see that.
SSH. All right. Come on, Rob. All right. SSH, RWX, Rob at 192.168.1.35. Password.
Yeah. I mean, there's lots of things you can do. Okay. So, all right. So we're going to,
we're going to edit, um, a file. So let's edit. We haven't done file. We haven't done anything
for files. Just a stupid, okay. Vi foo dot MD. Okay. So now I've got, this is an absolutely
unconfigured Vi. Uh, you know, like I want to start off, I don't use WSL too. So they're not
reliable. They're not the same. I always get bash for that. It's fine. Okay. So two, the first thing
that happens when you come in here, you have to understand about Vi is you're either in two,
one of two modes, insert mode and command mode. And the better you get, the more time you'll spend
in command mode and the less time you'll spend in insert mode. But because you're an absolute
beginner right now, you're going to spend gobs and gobs of time in insert mode. And you're going
to use the arrows and all kinds of things that you would never do before. Notice right now that you
can't use the arrows. You can't use the arrows. Try to push the arrows. I don't have any kind of
keyboard tracking, but you cannot use, no, don't use a Lackardy. It's, it's horrible. And it doesn't
have full support for all the terminal escapes. And it's got all kinds of bugs that don't work
with Windows. So, so then you go, okay, so you push the dash, you push the arrows and everything,
and nothing happens. Why? Because we're in command mode and the file is empty. So if you look at
every one of these blank lines with a little tilde, that means that it's an empty line,
then there's nothing there, right? And so in order to add anything to the file, we have to change
the mode. And the most important way to do that is the I command. So you push I and it changes down
the bottom and changes it into insert. And so now you can type away anything you want. You can
actually use the arrow keys as long as you have stuff, you're going to enter and do all kinds of
jazz. And as long as you got a bunch of stuff in here, even while you're in insert mode, I can use
the arrow keys. See how I'm using the arrow keys to go around? Same as nano. All right. It's the same
as nano. You go here. Oh, I wanted to add something here. You know, type it, you know, backspace,
the same kind of things you would normally do. All right. So, so there we go. We're making all
of our changes, right? So what are the, what are the commands we learned so far? We learned the
I command for insert, change the insert mode and the escape command to go. Now this is where we
really lose people. This is where people have all kinds of differing opinion. For right now,
all you need to do because you're going to be living mostly in insert mode, right? For right now,
just push the escape button. Don't get crazy. There's a million ways to do that. Just get used
to using the escape button. Okay. Now you can use your arrows to navigate. If you want to get fancy,
you can use JKHNL for navigation, but you don't know about that yet. So just pray with the arrows.
We're just being absolute basics. Absolute basics, right? Okay. The last one,
macro, the isosite command. Hey, yeah. Yeah, I definitely will. So, so here we have, I'm not
going to macro it though. Let's do a command for it. It's just one word. And I also need to be able
to add date advancement. So here we have colon WQ for exiting colon Q, exclamation point and
colon W. These are the standard ones. There are alternatives that I prefer that are faster,
but for right now, these are very intuitive. Write and quit, quit without doing writing
and just write. I know that's easy. We're trying. Look, this is the beginning. This is survival.
Please don't overwhelm people. So if this is your first experience ever using BI,
this is all you need. I'm telling you, this is it. This is all you need.
And then we're going to layer on, this is, this is the way of Linux and Unix. You learn the basics
and then you layer on extra stuff as you go. Yeah. So, so there we go. Okay. So now watch.
So now how do I save it? colon W. Now it's saved. Right? How do I save an exit colon WQ?
And that's the one that all the jokes are about. Okay. Now, you'll see me do this all the time.
So I don't want you to get mad at me, but to exit and save quickly, you just do two capital Zs.
Same thing. It's been around. It predates all the other stuff. That's an ed thing.
Actually, no, I think that's a BI thing. The ed thing is WQ. The WQ, the reason I'm having
used WQ is because those work with ed as well. Okay. And we haven't done it as all yet.
There's a bunch of other things that you're going to learn. Like for right now, you really don't care
about deleting lines. You're, you're a nano user who's gone to them. And so you push escape.
Like I want to delete this line. So I'm going to backspace, wait, and push I, right? So I'm going
to go over here and I'm going to just backspace the line out because that's what you would do in
nano. In nano, you wouldn't know about the YY and DD and all that fancy stuff that you're going to
learn about. You would just know to backspace out the lines and you would have to like spam
the arrow keys to get to where you needed to be. So I'm going to say it again, don't learn nano,
learn these minimum things in VI first, and you'll be better off for it. And then you can
layer on extra stuff as you go after that. You can put more things on top of that. And I'm not
going to cover all of those things because I don't want beginners to get confused. And when I, when
it says escape here, stick with the escape key for now. All right. I want you to know that this is
the actual key to use. If you, if you ask anyone on the internet or on Twitch or something,
there's a million different opinions, not a million, probably more like, Oh, I don't know,
maybe over a hundred about what you should do to not get around using the escape key. In fact,
there's one prominent stripper who uses control C, which is an interrupt sequence, which will not
work in VI. And it's actually fucking dangerous. So the first reason is that that's what caused
all the dramas. I started calling them out on it. So use the escape key. And now I'll, I'll give you
one small piece hint. There is another key combination that is exactly the equivalent
to the escape key. Anybody know what it is by chance? Does anybody know what it is? There is,
there is a key combination, which is the exact equivalent of the escape key on American keywords.
Nope. Let's go. Yeah. Control up bracket. Control up bracket. All right. And it,
you got to have good pinkies for that. There you go. Yeah. Control up bracket is the answer.
Control up bracket. You'll see me doing it all the time. Control up bracket is guaranteed to work
on any American style keyboard. In fact, I was talking about this the other day,
because I only realized in my 40s when I started streaming actually from international people,
I had some international people tell me that, you know, because I realized in the process that,
because I have an international gaming keyboard and I was like, I can't do that. The combo is too
hard. And I actually had international people. I can't remember who they were. I can't, they
wanted to say it was Russia. They actually buy us keyboards for using them because they use the
control of bracket instead of flying all the way up to hit escape every time. Well, by the way,
most of the people who do hit escape use their, this finger, that's not my middle finger. That's
usually the finger they use when they do it. If you're going to be an escape user. Now, I will
tell you this, that a lot of people have remapped escape, hard coded it into their keyboard so that
their caps lock is now escaped or control or something. That's so acceptable. But you're a
beginner, you're going to be useful. You're going to be able to use any keyboard anywhere.
And escape is always going to work. And on most of the systems that you're on,
control left bracket will also work. And I use control of bracket. I was raised to use control
of bracket when Macintosh took off the escape key and made it some stupid little thing up in the
top. I had no problem because I was still able to use control of bracket. Anybody who gets used
to using control C or any of those other things will be wildly surprised when they go to use
VI on a nano box and an Alpine system, a busy box, AIX or any number of systems that don't support
it. So stick with escape or control of bracket as an alternative. I didn't put it here because I
want you to know what the actual key is. It's where I can be able to do anything. That happens.
Yeah, but keyboards are a personal choice these days. So this is kind of the homework.
I do a lot of HA to spell correction. Look, there's so many awesome things.
Nano is a no go because of the control thing. Okay, so yeah, let's talk about the control
thing. I'm glad you brought that up. I have witnessed this. It's like my biggest pet peeve.
Of all the pet peeves I have about nano, this is my biggest pet peeve. And I've taught hundreds
and hundreds of kids and adults and a large percentage of them all fall into the same trap.
And so I'm going to tell you what that trap is as soon as I can find it.
Where is it? Here we are. Okay, so with nano, which is on by default, so this is going to
do nano if you want to try it, right? Oh, I need a timestamp, but that's what I was doing.
I forgot what I was doing. Yeah, here we go.
What the hell? All right, so we need to timestamp this.
Okay, why is nano the devil? And just saying on a nano, I even made an app for that.
I'm going to show you why. And then we're going to be done. I mean, I know we're way over,
but I feel like this is good. My throat is actually kind of hurting because I've been talking so much.
So this is why nano is the devil. So you start at nano, just type nano, right?
And everything that has a little carrot like this, by the way, nano was the first editor
that I learned. Nano, Pico and Joe, those are the new things that I learned.
You can do that. Yep. And you see the carrot? The carrot means that you need to put a control
and all those things. And a bottle of water or beer, I should. So the reason that nano is the
devil is a couple of reasons. First of all, look, I still can't move down because there's no data
in here, just like vi, just like we did before, right? I still have to like make a new file or
something. So I have to start typing, I push enter. Once I have data in here, I can move the arrows
around, right? But I can't go below it because there's no stuff there. So it doesn't show you
where your lines are. See, I have, look, put the arrow down or you can't go down farther because
you're on the last line, but you don't know it, but you can't see that you are.
Nano hides it from you, which I think is stupid, especially for a beginner. You want to see that
there's no line there. That's what the tilt is for. So that's the first complaint I have.
The second thing is that when you're typing all this stuff in here, right, you still have to
spam the arrow keys, just like any other reason. I mean, there are ways to navigate using other
things, but you still have to do all the spamming, just like you'd have to do with vi if you're starting
and magnetical. But now when you're going to write something, here's where it gets really bad.
It's just like, no, no. So now we're going to write something. It's like, I want to write it.
So you write out control. Oh, it says, write the file name. Okay. So bar.md or whatever.
And it wrote it. It says a row 12 lines. It looks all nice. Everything. This is what's bad about
that. How do I exit? Control X. And I, this is where stuff gets really messed up. Okay.
And it's not completely intuitive to most users. But what is nano encouraging everybody to do?
Every one of these things is a control command. And control X is not horrible.
Anybody know what control X does from the command line?
What does it do? Let's try. Control X to exit. No, it doesn't.
Control X. It doesn't kill puppies. No. Control X is one to the left to the right of X. Yes.
And control Z is one to the right of T. Yes, it is. So I want somebody to try this. I'm going to freak
out right now. Do control Z. Actually now try this. Now do control S. Do control S. You're all
going to hate me. Do control S. What happened? I cannot tell you if I had a dollar for every
time this happened, I have like $200. It's not save. It's not stop. It's suspend. And a lot of
people don't know this. I wasn't, it wasn't until my 30s that I learned this. How do you undo it?
Now you're typing all kinds of random shit that you think is going to be trying all kinds of crazy
S things, right? And then when you finally figure out how to unlock yourself, which is control Q,
all that stuff gets typed. You know why? Because when you did control S, remember that old teletype
I told you about? Remember the teletype I told you about? You sent your teletype machine a suspend
saying, hold on, I'm ahead of my teletype machine. It's not ready for more data, but I want to cash
it all up. And I've seen people accidentally do control S while they were trying to figure out
all something like they're got like an infinite loop going on or something like that, which control
C is the proper way to interrupt that and go on your way. But I've seen people because of nano,
nano tells them that they need to start that when I'm encouraging them to experiment on the
command line and everything, but nano burns into their brain and their muscle memory to use control
for everything. So beginners, old and young will start to experiment when they get stuck
and they just really fuck up everything. And then they're terrified of the terminal.
I don't know how to do it. You can disable that suspend by the way. I'll just try to do that in
the Bashar C so that that's not happening. But that you need to know about that because that
happens on every system. And it is control S. If you type control S and type something,
and you can type rm-rf or whatever, right? And it won't do anything. And if you control C,
you're like, oh, it's still not really doing anything. Control C kind of did something,
but not really. Why did it do it that? It kind of, it did. It stopped it from doing it. You
suspended it and then you also shut it down. So you're like, blah, blah, blah, blah, right?
So but if I do control, if I can do control S and type it, you know, you type enter, enter,
LS, enter, enter, pwd, enter, enter, it's like, oh, and then you actually figure it out.
Boom. And then it'll actually run all that stuff. And I've seen people like remove things
because they are getting crazy. Yeah. Yeah. And the Etsy Nano, see, that's another one. So
Nano, you know, has, that's probably, I bet you that's probably why they use O for save
for basic help type control G. And here's all the help.
Um, executive function. I don't, the bottom line, I don't think this is easier
for a user. I don't think it is. I based on, and you can make your own decision. I, you should,
you should still know how to get out of nano. I actually find it harder to get out of nano
than out of EI having, having learned it right the first time. I mean, cut and paste, you know,
control U, control C. No, it's stupid. Nobody does that anywhere else. The other reason to
learn the VI commands is because the VI commands are better off forever. I know we're over time.
I know we're four hours and 46 minutes. We're like a full, full, full hour over today.
All right. So, but I, I'm glad that we covered VI. So now you can practice those basic VI.
There are a lot of other gimmicks for learning VI and we'll talk about them when the time comes,
but it's not now. Uh, no. So, okay. It's way to stable suspend. Thank you,
Mosse. Yeah. I have that in my machine. Thank you for telling me that.
That's kind of a, it's kind of a bash RC thing and we'll get to that. I hopefully next week,
hopefully next week we'll be on the show, be customizing the show. We'll be talking about
file system the whole time. It'll be all about being about the file system. It'll be about editing
files and leave out your bash RC and basic bash scripting. And we'll add, you know,
we'll layer in some things. We're going to do enough bash to understand what's in a bash RC
file, but probably not through the bash scripting and then we'll circle back and do some more.
It's kind of a layered onion kind of thing, right? We have to keep, that's a bad metaphor,
but you know, you have to keep adding stuff on the, on the top there.
Control VM boost power off. I think you can do that or you can just type exit.
Yeah, that's true. How do you list your, your stuff too? I forgot that one.
It is a V box manage. I think it's list VMs, right? Or is it, or is it V box? I can't remember.
There's another one. There's a, there's another one for listing them all. I can't remember what
it is. It's not, I think it's, it's list, uh, VMs. There you go. So there's all your VMs.
And then you can list only the ones that are running too, if I remember right.
Running VMs, running VMs. Yeah. There you go. Antonin boost. So then I could turn it off.
What does it stop VM? Is it stop VM? I can't remember. Control, control VM boost.
I mean, I powered it off, but power off. 100%. There we go. Let's see if it's running still.
Nope. If you got the one, there we go. I hope everybody's having a good time tonight.
My throat is gone. I'm going to take a couple hours off, but I'm probably going to be out,
out and about walking at seven o'clock tonight, just to get some, just to get some outside time.
And if you want to come back and ask questions or just talk about random, you know, stuff,
that's the time to come. Otherwise we'll be back here. We'll see you next Saturday.
Sorry, Sunday. Remember next Sunday at one, and we'll go from one to four.
Notes should be up. I can't post the video right away. I'm going to have to wait 24 hours before
I post it, but it should be up right away tomorrow. And that's all we have for today.
So I'll put those extra commands we just did in the notes and we'll see you later.
All right. I'm turning the music back on here.
You
you
you
you
you
