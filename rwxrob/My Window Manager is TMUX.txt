One of the things I get asked all the time
is what my window manager is.
I don't know what this is about people who obsess
about window managers and distros and stuff.
It's fine, people are just making conversation.
Rarely they're judging you based on your choices.
To me, it doesn't matter.
My window manager is T-Mux.
And do I use a status bar?
I use my T-Mux status bar.
So as you can see right now,
everything that you see on the screen is T-Mux.
This is a full screen Nome terminal
that came with PopOS as my distro.
And I have got a T-Mux within a T-Mux.
So this stuff down here is all we chat.
This down here is my status bar.
This is the status update,
my pulmonary trauma on my T-Mux configuration,
which we're gonna be covering in other videos.
So stay tuned.
And then here's my title down here.
You can't see it, but.
And then up here you can see this is a VIM session.
And up here you can see that I have another T-Mux status bar.
That's because I have a T-Mux within a T-Mux.
And stay tuned, I'll show you how to do that safely
so that you can actually have two status bars
or you can split your screen
and do all kinds of crazy amazing things with this.
So by using, what's that?
Can you use it to preview CPU usage or other things?
Absolutely, I can do all of that from the command line.
If I wanted to put CPU utilization or anything I wanted to,
I could put it in my terminal,
in my status bars of different types.
So I could put it up here,
or I could make a pane, I could do this.
So I can split a pane over here.
See how easily I just split that pane in half?
That's pane management.
And then if I want a new window, Control-C,
let me turn my Eskies on so you can see everything.
But as you can see, I can go back and forth,
screen and tell it multiplexers.
I can split this guy some more.
I can make T-Matrix here run.
I can put the fish in another terminal.
The point being that I have absolute immediate control
over all of my windows and panes.
People continually say, you need to learn I3,
you're learning blah blah blah,
and I say, no, I don't need any of that.
All I need is T-Mux,
because T-Mux gets you everything you need.
I do everything from the terminal anyway,
so there's no need for me to do anything besides that.
It does manage my windows, it manages my real estate,
it manages my panes, it allows me to do,
I mean, I could do H-Top over here
if I want to have that thing,
sometimes in another window, I'll run my other thing.
And by the way, all the bindings that I have here
are also completely transferable, right?
So it's like a configuration centralized
and portable in a single file.
So your T-Mux config, if I'm doing,
I don't know, I'm planning on doing
the Kubernetes certification,
and I know that they have T-Mux,
so odds are I can take my T-Mux.com file,
stick it on the system along with my Batch RCA,
and my VMRCA, and I'm good to go.
I don't care, could I install i3 on there?
No, could I change my Linux distro?
No, let's say that I want to just run a Docker container,
so let's say I'm going to run as like default Docker container,
Docker run at, let's say I can run an Ubuntu container,
dash dash RM, and let's give it a name,
let's do Debian, and what should we call it?
What is it, how do you do name?
Is it N?
I think it is something I don't remember.
So, uh-oh, fairly correctly,
could tell us it goes dash N,
and I found, oh wait, I think it's dash N, something.
So Debian, is it dash T?
Dash T is the name?
I thought it was dash N.
Is it dash T?
What is it, people?
I think it's dash dash N, name.
I know there's a shortcut.
Okay, so here we go, we're on here, right?
So now I can like, I have my host here,
and it didn't seem to work, so we'll just go ahead and use this.
So let's say I want to put my Tmx config over here,
or I want to put my Tmx config.
So, docker copy this.tmx.conf,
and I want to put it on this, yeah.
I know it's a directory, what am I talking about?
Docker copy, oh wait, where is my Tmx file?
Did I put it someplace else?
Oh, there it is.
Tmx.conf to, am I doing it wrong?
What am I doing wrong?
I think I have to put slash there.
Yeah, there we go.
So now it's here.
So over here, I don't have Tmx, sudo apt update, damn it,
apt update, apt install Tmx.
Yes, I want to install Tmx, let's see how fast this goes.
I start Tmx over here,
and it didn't pull up my thing yet,
so let's see if it's still there.
Is it there?
Yep, there it is.
So where's my home directory root?
Okay, here we go.
Move slash Tmx.conf to dot,
and now Tmx, oopsie, get out of that, Tmx.
And it should pick it up, it doesn't look like it is.
I'm just not picking it up.
Let me see if I can do it.
Tmx, was it dash C?
I got it, I don't remember what it is.
I didn't plan this.
So, what are you talking about?
Oh, there's no man page, shit.
All right, so Tmx, is it dash C dot Tmx.conf?
The point is, you can use Tmx on it,
or if I can't get it, you can get what I'm saying.
Notice this file directory.
What are you talking about?
Oh, there we go.
Set dash, oh yeah, I know,
you didn't think you were gonna get to see me
docker fail this whole time, did you?
Notice this file directory, what the fuck?
Oh, wait.
Sashay, I don't know, I see it right there.
Maybe I'm doing it wrong.
I want it to be loaded with my Tmx,
and it's not loading it.
Come on, load my Tmx, please load it.
Okay, well, it's loading something.
It's loading something.
I don't think that's the right thing,
but it's loading something.
The point is, you can take your configuration with you,
and you can change it up,
and just copy it between docker containers,
and something like that.
I don't know, here, let's try this.
Man docker, I don't have two minutes left,
so let's try this.
Man Tmx, wait, we're gonna go into the Tmx Conf right
after this, so.
Man Tmx, let me go see if I can look up the Conf.
No, dash C is a shell command, of course, silly me.
Silly me.
Where's the configuration file?
By default, Tmx was a configuration file
from ndctmx.conf.
It looks for a user configuration file at tilde.
Does that mean, because there's no user over here?
Is that why?
Because it looks like there's a lot of identity.
Okay, that says add user U.
U password U, U.
Yes, U, U.
Yes.
All right, nd dash U.
Copy root.tmx.conf to here.
First denied, arg.
All right, well, let's try this.
Shmox, shmod plus R.
It doesn't have sudo built-in.
It has to install sudo.
Yeah, so that's why I'm doing that.
I know, this is what you get when you get
a bare-bound container.
I actually have configure containers,
but you get the point.
Cannot operate on a dangling sim link.
How are you a sim link?
You're not a sim link?
All right, fine.
I'm gonna change this.
Let's do this.
Yep, let's do this.
Give me my copy.
I'm gonna copy it to slash home slash U.
I'm at that.
And now we can do it.
Exit, Tmx.
Damn it.
Oh, wait, su-U, Tmx.
Still isn't kidding it.
I don't understand why.
Make it go away.
Wait, did it?
Am I using the right Tmx file even?
You guys like it when I scroll up anyway, don't you?
I mean, that's your favorite thing to watch.
No VI?
I could use, Ed's not even here.
Is Ed down here?
I think it is.
Damn it.
Damn, not even Ed.
I didn't sim link it though.
You saw that, right?
Did you see that?
I did not sim link it.
So, abs, self-minimum, I don't need the rest.
Is it Vim's tiny?
Is it Vim's tiny?
Yeah, that's it.
Okay, I could remember.
The sim link came from the host.
You?
LS-J?
Oh, you guys finally cracked it for me.
I feel so silly.
Of course it did.
It's like trying to link to things that don't exist.
I'm 14 seconds over.
Can I do it?
Pomo, just shut up for a second, okay?
Okay, Pomo, thank you.
All right, so CD into dot files.
All right, let's do this.
So, copy, go into the T-Mux, the T-Mux.
Doctor, yeah, yeah, thank you.
You guys cracked it.
It seems more fun that way when I screw up, right?
And you can, the perils of using symbolic links.
All right, so dockercopy.tmux.conf to this thing,
whatever this is.
I didn't take my name because I got the command wrong.
Look, I can't remember shit, that's just how I am.
All right, so then we do colon slash home slash you.
And I have a better feeling about this.
I just do, I just have a better feeling.
LS-L, LS-LA, oh God, LS-L, T-Mux.
Huzzah, there's my T-Mux that I know and love.
It's got my own things here.
It's got all my bindings.
It can turn my clock on.
Where's the clock though?
There's my refresh thingy.
Anyway, as you can see, you get your T-Mux.
And yes, I had problems because other reasons,
not because it was hard to get T-Mux over there.
So hopefully that's just,
helping that can make the case for you to consider
using a window manager that's just T-Mux.
And you can put it on anything
and put it on anything.
So I'll, let's just review configuration,
centralized and portable in a single file.
You can put it on anything.
Can be configured to behave like a screen,
which has come on every system since it's on a time.
It's extremely powerful.
I cannot even begin to tell you how powerful it is.
Powerful and configurable.
Even if you don't buy into the plugin stuff,
which I don't, I avoid plugins
because the plugins defeat the whole purpose
of having a, because no longer portable, right?
If you, but you can use them, right?
No longer portable.
But I personally don't like them.
I try to stick with the basics.
And it's universally available.
So even during certification exams.
So, you know, if you're working through a web browser
and you can't see what you're working on,
and you're having to fight with the web browser already
because you're doing a certification test,
it's a terminal based thing.
And you're already using some sort of stupid ass web emulation.
You know, if you got T-Mux in there,
it just makes it that much less painful
because you can split the screen up and stuff like that
rather than to do whatever.
I can't even imagine what you would do
with just a single terminal.
If you can't, if you can't split the screen
and you got to do two things at one time
and you want to check,
maybe you want your documentation open in one window,
which you can, you can do,
or you want a man page or be able to something like that,
you know, then yeah, you need this.
You're not going to open up multiple windows
in a web, web terminal tabs
in order to check out your different things.
So there's just a million reasons
to make T-Mux the only window manager that you care about.
And I cannot overemphasize that.
We're going to still talk about how to configure T-Mux thing
and all that,
and I'll move on to different videos about that.
But this was supposed to be sort of a seamless demo
of why you might want to use the T-Mux window manager.
All you have to do is watch me or anybody
who uses one for a short amount of time
to really get a sense of why you might want to pick it up.
And I mean, you can use it to make your own
sort of monitoring station if you're a Kubernetes person.
And we did, I did this at work the other day
where we had a bunch of things
that were watching at CD health checks.
We had some pings running in other windows
and it was all in this beautiful big split screen console
with no annoying borders in between
other than like the one terminal border
in between the whole thing.
So that's my argument for using T-Mux, give it a shot.
And we're going to proceed with some other videos
about configuration and stuff like that.
We're going to talk about, oh, persistent sessions, right?
I forgot about that.
So T-Mux also allows you to have a persistent session.
I'm going to do a different video
about persistent sessions though.
So watch for that.
