Can anyone recognize that?
Can you recognize that?
We're like a world's wall though of things to look for on my back.
Oh, you want to read the quote?
Yep.
Oh, Monty Python, you got it.
The killer rabbit with sharp pointy fangs like this.
Some call me Tim, Tim.
When I let go of what I am, I become what I might be loud too, loud too, loud too.
That's my wife's, what time is it?
It is, oh my God, we're late.
We're late.
We're kind of late.
I need to start my pomo and all that jazz.
Can I finish my coffee first?
How many have we got here?
I don't even know.
I don't have my counters on the screen like I usually do.
I am so discombobulated because I came back from that run.
Also hacker music yoga is on.
I'm going to leave the music on for just a bit more.
When the music goes off, that means we're actually down for bidnath.
We're going to get ready for bidnath.
But I'm going to keep my draw diagrams on there because I might be able to use that.
What else?
We've got Anton running, we've got Noelbs running, we've got the Discord running.
What else do I need?
Wait, wait.
Website.
Okay, let me grab a new web window and put this over here so I can do stuff.
All right, boosters or whatever we're going to call you.
I don't even know.
RWXers.
What should we call you?
What should we call you?
What's your name?
I don't like skill stackers, that's like weird too, there's like another thing.
We're on the same page.
Boosties.
That should be my swag.
My swag should be boosties, manziers and boosties.
You notice this channel's rated M, right?
For the next four hours I'm going to be trying really, really hard to not be rated M, but
for the most part that mature rating is there for a reason.
You've been warned.
You've been warned.
That's all I have to say about it.
I don't claim to be a good person, I just claim to be trying.
That's all I'm going to say because I definitely have many flaws.
Hey, Halion.
I warned you and you followed me anyway.
All right.
All right.
I see how you are.
Okay.
I think the universe knows that I'm trying to be a good person and it just keeps trolling
me.
I swear to God that's the reason.
I don't know if that's the reason, but I feel like that's the reason.
Exactly, exactly.
Somebody had to say it.
You know what?
I deliberately didn't say that word.
I was making a subtle reference to the word and sort of an inside joke and now somebody
has seen Boost on 2021 and just reminded everybody about the sweet beavers.
Of which there are many in North Carolina, by the way, we may actually see some sweet
beavers.
Insert inappropriate joke.
Okay, so here we go.
I'm not even kidding.
Log munchers.
Oh my God.
How dare you, roosters, oh my God.
How am I supposed to get anything done?
You guys are so funny.
I'm going to spit my coffee on my keyboard and break another keyboard.
I already broke one keyboard this week.
I did.
I spilled coffee.
That's why I have 15 of them.
I have 15.
I'm not kidding.
Here, I'm going to show you.
I am not ashamed.
I very unashamedly use a Mac keyboard.
Number one keyword among writers, authors, and journalists, by the way, gamers don't
like it, but all the other people who matter, it's a joke.
It's a joke.
If you're a gamer, you're mattered.
Don't be offended.
I game all the time.
I game like for three hours last night playing Overwatch.
That's how casual and horrible I am.
Oh my God.
Can we just not?
Is this a short key movement?
Absolutely.
That's why I have it.
The reason I have it is because, first of all, it's quiet.
It's quiet.
It's a quiet keyboard.
Look, if you use that mechanical keyboard next to me with all that clickety-clack stuff,
it'll kill you.
I'll beat you over the head with it.
I'll beat you till brain matter comes out of your ears with that thing.
I hate the sound of mechanical keyboards.
Other people love it.
I don't.
I don't.
I hate the sound of what I do to them.
In official, I'm still in just chatting.
I should probably change that, right?
What should be the official category for this, by the way?
I think it's science and technology still.
I think we're going to have multiple categories for a boost content, to tell you the truth.
I do.
I think we're going to have multiple categories because we're going to be doing a lot of go-coding
later bash and go and but for right now I think it's science and technology
personally and and if you're gonna get tribal on me get the fuck out I'm sorry
oh wait we start already I'm not supposed to say that anymore yeah oh my
god please no VMT VMT is so capable of making me spit my coffee all over the
screen and camera just start the BB yeah yeah beginner boost I think that's
the way to go am I ready cut all right now I'll be a good now I'll be good
welcome to the beer boost everybody what are we gonna do today no kidding I am
not gonna use my right will do how every time we started beginner boost that I
I'm gonna make a mark I'm gonna make a mark ready actually well where's my
marker thingy ma bob where is it but I gotta turn this music off I turn the
music off so many things to do no more hacker yoga for a while we'll play the
hacker yoga during the breaks if you like it I know some of you do so we'll
play that add stream marker yes okay so we're gonna put a stream marker because
I am just continuing on a previous stream it's got IRL content everything and
I'm gonna be chopping this up and doing different things oh well Linux tips just
join which is awesome Linux tips is a great streamer okay so here we go
time to swear in chat not yet so I can put a stream marker here and I'm gonna
kind of cutting up the boost to making into into a thing so I'm gonna just talk
to you in close-up mode for a bit just to catch up and everything so what it
when I when I say what are we gonna do today I'm actually not just joking a
lot of the time when a lot of the time when we are starting a boost if I was
as I've said before imagine that we're in a one-on-one session right so we're
sitting here we're pair programming you'd walk in my door I'm just role
playing how how I do private mentoring you're working you're walking the door
and I'd be seeing my computer doing something and you'd be like okay I turn
to you and I'd say yeah what are we doing today I'm not kidding and the reason
for that and I want you to be I want you to be I want to be very clear on this
point the reason that I turn to you and ask you what we're doing is
unfortunately because of twitch we have to kind of have a structure because
otherwise it would be all over the place because we got like 150 you know so
people watching at any time so we kind of have to stay together but if it was a
one-on-one session I would come in and I would ask you what are we doing today
and the the I just want to tell a little story here because the the the
responses would vary dramatically sometimes I would get an answer from
his sound oh you're a teacher tell me what to do and then I get another person
who would tell me oh I got I got a lot of questions before we get started I have
to ask you these questions okay and then after 60 minutes is done by the end of
the question we just covered all the questions which one which one do you
think is the way to go which one do you think is the way to go now the person
the person who came in and asked me the person who had all the questions for me
got a junior engineering job I'm gonna I'm gonna brag again I'm gonna brag I'm
gonna brag about my people because I brag about them all the time I'm
incredibly impressed by them as human beings and as a technologist so I'm
gonna go show you so the person who always ran the timeout with their own
questions and it got talk about being an easy job once you develop a person into
an auto-didact or help them become an auto-didact active recall questions
like that yeah you guys are getting it so the second one so so this quote right
here I'll zoom in this quote is about the second person right here so I do I do
you know before we get going I like to talk about the whole learning process a
little bit before we dive in this is a reminder of some of the stuff we covered
in and because it's really the most important thing that we're gonna learn
so this this is this is a quotes about me but but I think it's more about this
person clearly have a talent for educated people in tech after you remember
success here every I suspect the review team will be even more interesting
picking up one or two of your students we've had a lot of very bright
interest for some of the top universities in the country and your
community member was right in the mix with the best of them this is a person
who spent two years with me who and the end of it was asking me all the
questions they ran the session I was just available I was just available as a
mentor as a resource so why am I bringing that up so when I say you know
when when I ask you when you know when I imagine I role play that you're sitting
down with me which is which helps me get through this because if I have to think
of it is me you know teaching a structured course for 250 or 1000 or
6000 people or something like that I'm like shoot myself in the head because
I'm not gonna do that that's just not fun nobody wants to do that maybe there's
a few like statistic people that I don't so my idea of a good time learning
wise is to learn something with you and to sit with you and to help you get
through it and maybe it's something that's challenging for me as well and I
see this is my kids too my kids that say hey what should we do today you know and
we will come up with ideas for games we can make and we can play together and I
actually enjoyed it as much as they did it wasn't like you know some time you
had to do because you had you know dad as a title and you know that I'm really
grateful for that because those were some really positive times that I had in our
early their early childhood and I was a big part of their teenage years so that
was that was really valuable to me so as we go into this learning session just
keep that in mind I have to do that little sort of like disclaimer at the
beginning to remind people that the way that I do mentoring is totally different
than what you've probably been exposed to and it's extremely casual and it's
extremely unstructured now it's not as unstructured as other times because
every time every single individual person would come to me they'd have a
different path that they were on different thing they wanted to do and
they were so we have to kind of pretend that we're all kind of going down the
same path today and what is that path all right so the path for today is gonna
be Linux and and it may have started as a new modeling business oh that's kind of
funny actually if you just started your modeling business you should keep going
with it that would be a great idea you should definitely do that my wife will
hire you I'm not even kidding if you're doing new modeling my wife will hire you
not kidding we need she's more new models my wife's an artist yeah that doesn't
faze me good try all right so so let's keep going I'm not kidding my my room my
house here when you're doing our house dreams is filled with nudes because my
wife does arts and the human body is a beautiful thing so we can't can't faze
me there so let's go back into the booths and I'm going to set up the session
here we are going to start I'm going to start up a teamwork session this what
this does is it starts the team looks inside of the team looks like we talked
about before I'm going to clear out this empty one here and let's start a new
one so let's just review what we did last week and I'm not going to start the
pomo timer until we're actually into the content but we will take a break you
might get you by new paintings you totally can here we go so let's review
what we did with week one and then we'll start a pomo session when we're like
really into it so last week I'm going to do this really quickly and if you're
watching the YouTube video right now skip past all this okay because you can
just go look at the other one we're not going to do too much yet we're not quite
ready for T-mux we're definitely going to cover it but you got to do you got to
do some of the other file system and command line stuff first okay so focus on
knowledge management we talked about Zettle cast in and how to take notes I
would really love for y'all to talk about that I prefer you do that during
AMA sessions tomorrow though so if you're during the week when I'm doing IRL
sessions you want to report back on how the success you've had taking notes and
things please do that during those times that's what those times are for and I'm
doing a lot more IRL streaming these days so that's the time to come talk to
me why get up for notes we talked about get up being universal why not you know
we're talking about gala we didn't mark down we went through that completely we
installed virtual box or VMware Fusion if you have a Mac that should be already
there you should have already installed a bunch of server and we went through that
whole thing we talked about how much to do go rewatch that video if you have not
watched that video we're not doing that today at all so we're assuming you already
have it we'll start up the server but we're not going to go back into that part
of it and the only thing we installed was it was a secure shell I believe so then
we did we booted a bunch of server and we looked around and we were using the
command line interface as you remember looks like this right so this is you
know the command line interface and that's all we did but we didn't install
any terminal or anything and we're gonna do that today all right so so that
that's a good summary of where we were again this is the kind of thing I would
do with you you don't have to do zet notes look just use whatever note taking
method comes easiest to you if you want to I but to tell you the truth I would
not do the zet method unless I had a tool that automatically created is that for
me so because it's just too much work so if it for right now and we're gonna make
that tool together by the way we're gonna code that tool together in bash so
I'm gonna show you how to how to make one and you can use the one that's there
and then we'll eventually maybe do so do that in in in go as well and that's
I'm cheating I know because that's a project that I need to do so I might
actually do that project as a part of the boost with you and then we can all
code it together and be a pair for programming project the really cool
thing about that is that every single person in the boost will get to take
credit for making that app when it's finished and one of the things another
thing that I do when I do my mentoring every time that I say what are we doing
today when the person is driving the mentoring session they get the credit
for the projects they're working on not me so I am just a consultant on the
project they are the ones that get the bullet point that for this unique thing
that they made now in this particular case I have to come up with a project
and there's a couple projects which I've listed in the syllabus if you want to
call it that that list and one of those is not listed right now but I think it
will probably end up being making the zet tool for for managing github and
talking to it and doing stuff like that and I don't care how long the boost
takes I wanted to take 18 weeks but if it takes more than that that's fine but
I think it will be more important that everybody here who wants to have credit
making that thing can literally put on their resume created the zet go tool and
you can talk about it because you will have gone through it and you can say no
I was a contributor to this I made it on the boost with Mr. Robin blah blah blah
if you need to get into the details but but you should be able to take right
okay so but we need to get there we had a long way to go before we can start
doing that so the first thing we need to do and I actually I don't know how many
of you are out there but I would actually like to encourage some of you to
make do when we get to the get stuff right it to make commits I want to
encourage you to make commits to my open source projects that were that were
starting up right so that you can start by saying I've committed to these open
source projects and then that can be your first commit and you can show that you
can say no I've committed to these following open source projects blah
blah blah yes they're projects for education but they're also projects that
we need and it's another reason that I'm selfishly picking projects that I need
also need to do because because then it's legit right it's not some extra
thing and it ends up being pair programming that we're doing instead
of you know me telling you what to do and you typing it which is never a good
thing so here's the commands that we learned we learned LS learn man PWD
shut down so we learned the basic things so I would like to rehash the help
documentation functions really quick today so we're going to start a new one
of these this is in Markdown we covered that last week I'm not going to use
anything fancy that that's not in basic Markdown so if you need to go back and
review we're going to try to learn how to SSH in the VM today yes so so let's
let's do week two and we're going to write our goals here you know what right
away I'm going to change the numbering system here I am I'm going to change week
zero to week zero zero so they will sort properly otherwise they're not going to
sort well so give me a sec here so this is a command you can take note of we
haven't learned it officially this is called a move command or the rename so
we're going to move that and we're going to move it to zero zero dot MD and I
mean I could I don't even really need the week in front of it but whatever and
let's do the other one to week zero dot txt yeah I don't know if you saw that I
pushed tab but when I to complete that and then we're going to do week by the
way if you want something to do right now make sure that you have Windows
terminal installed at or that you have I term to if you have a Mac so while I'm
doing this like setup stuff the task at hand for you to do is to get Windows
terminal installed Microsoft Windows terminal because we're going to be
configuring that today and if you have an installed you're going to be I'm going
to show you how to do the theming and everything and give my theme the second
thing we're going to be doing is showing you how to do I term eventually I I
don't have my I term library in front of me I'll have to pull that up for next
week or something but I'll make sure it's in the notes so it's on my other
computer so we do week zero dot txt and I'm going to resolve any of the links
here to this to make sure that they are good I just a minor change but I like to
you know teach by doing so we'll do that let me actually move these two so week
one dot md to week zero one md and we'll move week one dot txt to week this
is these notes by the way are in the the text version of the notes is in the
YouTube video description so that's what I'm doing a huge renamed appeal I just
saw that comment you learn to exit in finally oh look at you go all right so
so yeah we go and let's do another one let's do week two week to that md and did
I have a title though on the other one I don't remember I'm gonna look god damn it
I mean I mean something besides that I'm not gonna swear I'm gonna try not to
actually know we want this to be this is not a set entry this is like notes to go
into a YouTube description so that's the way I'll do this so I'll put this
summary summarize video here what that to do all right so summarize video here
and so there's a couple things we want a couple major things that we want to do
today and we want to can see install and configure terminal software all right
what's that rename not be also powerful for beginners it is it's actually just
one line too right yeah we're funny all right so install configure terminal
software for beginners and I'm gonna put MS terminal or I term two and what
else we gonna do and I haven't got my Mac streaming setup yet I'm gonna do that
eventually though I'm gonna have a dedicated streaming server with OBS just
case you're wondering and I'm gonna stream from the Mac to that system so I
can just change computers over and change the scene I don't have that set up
yet but I will get that it was all coming with the IRL stuff all right so
next there's no music right okay good we need to do we need to set up open open
SSH right so set up SSH server I mean we can just put a set up secure shell now
this I fear is gonna be the biggest time sump of all of them and part of the
problem with it is that I have to help you understand what it does and how it
does it and all that and I don't know where to put this I've debated about
where to put this a lot but we need to we want to grok what is Unix so like
what is Unix and Linux where did it come from and right off the bat
let's see what are the what is Unix and let's just do that so right away I'm
gonna put some like related links and I want to I want to have you all go get
this here right now you can go search for it I'll go search for it where is it
learning the Linux command line so if I'm going to slow for you and and I am
going much slower this year because I'm doing everything with you as opposed to
telling you where to go and then letting you do it and report back so
there Linux command org is where this is originally done now let's William shots
yeah all right so let's let's open this up let's open up in a browser that you
all are using for now so we'll go to Linux command org all right so this is a
free resource for learning the Linux command line so I'm kind of showing you
these things for those those that want to go faster you can go mess around with
these things while I'm talking and going through the other stuff kind of slowly
if you want to go faster you can go here so first of all don't buy this book
it's free I bought two copies of it before I realized it I did I bought it
I bought so there's the book if you wanted it's a very dated book but it's
still really really good it's horse and a source for all places William shots is
a phenomenal author and person I just really really like William shots I
really like his writing style and he's got a few things here you can go read
about but if you if if you want the book why bother learning a Linux like
command line environment and it gets you know crazy what is the shell guided
tour so if there is a textbook you yeah you'll definitely get a beard you don't
have to have a beard the only reason I have a beard is because I'm bold do I
have to spell it out I can make all kinds of jokes about what I look like
when I don't have a beard also I have a huge nose yeah I'm a Nord I'm a Nord
and Nord's are supposed to have like dwarves we're supposed to have big old
beers to counter out our big big ass noses I'm just saying that's why I have
a beard look at my nose look at how big that schnauzes look at how big that
thing is I haven't I was called schnauz in high school because my nose is so
big so you get those tips for free those tips are free a beard was sorry the
bear was easy you just don't shave you have to like trim it every once in a
while and like take the food out of it on occasion I mean you don't have to if
you should beard hygiene I like the tangents if you don't like them I'm
sorry fast forward okay so so here we go the length command line let me command
org so there we go WWW oops too many slashes there it's a coffee command
org so this book is free there's a PDF you can download of it in fact I think I
still have the PDF yeah so you can go get that and you can start learning it
there is a really great section there that we're gonna learn they were gonna
learn we're gonna learn a section of the book in there one of the ones I want to
read to you is what is the shell and we're gonna read this together because
he's already composed the ideas I can tell you what it is but I kind of want
to go through there so we're not gonna do what is the next but we also do what
is the shell what is a a shell and why do I care and we did talk about this a
little bit right in fact I kind of think we need to put these things first okay
so let's let's let's do this let's do this and then we could do the so start
installing the terminal software people and start installing secure shell okay
but we before we do the center for secure shell we need to do some other
stuff so we need to do basic system update right so we need to do a basic a
basic system update and we need to cover the bare bones like basic like like
really basic and I don't mean you know like modern definition of the word
basic really simple shell commands so a really simple and essential shell
commands and I have a cheat sheet that has these on there and we're gonna we're
gonna go through those we can cover all those in about that about 20 minutes and
move to have hair oh that's perfect mm-hmm yeah we're in package installation
that's what this is system update and package package management and
installation and again a lot of this I just am going through the tasks with you
and so if something gets in the way of the task because we don't know how to do
it we'll stop and do that thing and put it in the list okay and that's how I do
everything because you know you I'm hitting the the task as you would need
to hit them and I'm you know we end up come with kind of a guide at the end of
it all right so so what have you got so you need some links I'm gonna I'm gonna
give you my summary of that and then we're also gonna actually let's let's
read the Williams words first you can do your own searching in fact I like
to do that I liked it as I said with a pair programming thing it's not just
pair programming it's paired learning I think paired learning is a thing and
what that means is that I get to feign that I don't know about something or
that I've forgotten everything about a thing which is usually true and then we
can go back and like read about it and study about it right so let's first of
all go to the internet and then I will go to the Williams shots resource which I
already knew about I mean I think half the job of a mentor is telling you about
the curated information sources that they have obtained so you can know where
it will get the information so there's two primary purposes for a mentor in my
opinion one to tell you what you should know or help you understand what you
should know based on their experience in the field and two give you a list of the
places and resources to go learn those things not necessarily give them to you
but show you where and how to go get those resources and do those things I
think those are the two primary responsibilities of any mentor and and
I'm going to put that in here okay so so say primary responsibilities of any
mentor okay I'm gonna I'm gonna write them I'm gonna write them I don't run
right here help you know what to learn to help you know where to learn it you
know I curate resources not necessarily and then and I guess the third thing is
help you when you get stuck on something that's pretty much it I want to
know so let me clarify so you're installing Windows terminal on the
Windows machine that is hosting virtual box where you're running your VM
because you're gonna need it you're gonna pretend like Windows is a computer
that's next to your Linux box even though it's running inside of it and pretend
like those are two separate computers and we're actually gonna have to change it
to bridge if you haven't done that yet we're gonna I'll show you how to do that
we have to change it to bridge so that your virtual machine is considered just
like any other computer on your network and then we're gonna treat it just like
that we're gonna connect to it remotely using secure shell even though we're on
the same computer so so that's the goal all right I sent you another freezing
cat cat beard to her to her all right so all right so here we go let's go back
and read a little bit from William shots he's he's got such a great writing
style I just really like it people know that I love to you know talk negatively
about things that I don't like that are bad but I want you to know that when
something is good I am awful appraise and and I cannot overstate my
appreciation for William shots work on this even though it's kind of falling
out of date and for his writing style so why bother why do we need to learn a
command line anyway well let me tell you a story many years ago we had a problem
I worked and this is why I already like him because he's a storyteller he's a
storyteller and I think most people learn best by stories there was a share
drive on one of our file servers that kept getting full I won't mention the
legacy operating system did not support user quotas that's another story but the
server kept getting full and it stopped working one of our software engineers
spent a couple hours working with a C++ program that would look all through the
user directories and add up to spaces and users to make the list of the results
and since I was forced to use the legacy OS while I was on the job I installed a
Linux like command line environment which is probably sigwin yeah
yeah sigwin which is by the way what get bash uses when I heard the problem I
realized I could perform the same task of the C++ program does with one line
du-s star sort-nr blah blah blah and this morning I was watching any ASCII
sometimes known as Anya and if she's watching I'm a huge fan and Anya ASCII
is it like that did I spell it right did I do it right yeah that's her and she
was she was doing some of the Mr. Robot stuff and she was using some command
line stuff and I was just laughing with her completely because some of them are
so so simple to do through through the command line scripts so yeah and learning
how to learn is definitely essential graphic user interfaces are helpful for
many tasks but they're not good for all tasks I have a long felt that most
computers today are not powered by electricity they instead seem to be
powered by pumping motions of the mouse I love I love William shots William if
you're out there oh my god you're such a great author computers were supposed to
be free from me on manual labor but how many times if you perform some tasks you
feel sure the computer could do for you much easily without using the mouse
pointing and clicking pointing blah blah blah I once heard an author say that
when you are a child you're used to a computer by looking at pictures and when
you grow up you learn to read and write well that's computer literacy 101 now
let's get to work now I I just love this because I mean just look around on
Twitch and I'm not going to point at any particular streamer but I'm actually
had people in Linux tech tips actually there were some viewers some of
his viewers who started going off on the Linux terminal people saying that they
were old crusty you know mean like pedantic unnecessarily complicated
people and she's largely right the woman who said that but but it's still more
efficient and I got to tell one story about the command line here and we'll
get into the Linux thing which is related to this I didn't tell the story
last time I thought I'm gonna tell you and so I'm gonna tell my story about
about and I have to say this she was a housewife and she came to me she her
kids were getting a little bit older and she's like I want to learn computers and
I mean this woman had no knowledge whatsoever of how computers worked or
anything but she had just taken it on which I just thought was so amazing and
and I was trying to explain to her this is this is my story out fact I'll zoom
in a little bit for this story this is kind of a fun story yeah we're all
going to see so so this this housewife and I'm not saying that
pejoratively at all she was an amazing woman and she was super motivated and
frankly she was living in it it seemed like she was living in a in an
environment where there were a lot of men in her life that were telling her that
she couldn't do this or couldn't do that you know and and you know I wouldn't
surprise me in the south where we are but she was very hungry I mean and she
would she would think this is that she was so old school about everything she
had she would bring a huge ream of paper you know like take meticulous notes on
paper when she was doing things and this woman I loved her story it does make me
a little sad inside because ultimately I'm gonna give away the ending you know
her family obligations and stuff kind of took over her amount of time to study and
she says I can't find any time to study and she was kind of consumed by you know
the maternal pressures that were still being placed on her so she couldn't
really finish her studies but I you know to this day I want to tell you the
successes that she had before that kind of overcame her and it's something of a
tragedy and that's why I like this story because this guy I want to help people
get over this I have another story too about somebody who came to me to share
their their project I'll show that another day it's a pretty fun one too so so
she came to me and she had no concept of directory structures at all she had no
idea what a rooted node tree was she didn't know what a directory tree was
she'd been using a macro whole life and this is something that's very very
interesting so the modern Mac users there's no reason for you to understand
what a file system is and we're gonna do file system stuff later and she had no
idea what they are she didn't know what it was so you know when you click on the
finder like in a Windows machine or Linux you click what let me show you so
if you you click on the finder here right and you get this thing here but
but but but Windows is doing it now too more and more these systems are taking
away the interface they're taking away this this hierarchical nature of it so
you just see a bunch of icons and you hope your things there but you have no
concept of how the things are organized now thankfully when it says this PC you
can go here and you can kind of drill down and you get this idea of a structured
format right well this is this supremacist relation to the command line so so you
know the process of going through all these commands and expanding things and
moving things and renaming things is painful it's super painful we do that
from the command line and we'll do it later but when you do that from the
command line it's like one command so this is the story so first of all we
were she was learning HTML and I was trying to use the idea of directory
structures as something to build on I mean I do I do diva I'd like diva a
lot yes so so so this is when we started I started to realize that she had no I
tried to use the concept of a directory structure to explain something about the
web that you know if you have a web at the URL and a website and maybe some of
you don't know this so I won't breeze over too quickly but the you know each of
the slashes up here represents a different directory and it's kind of like
you go down into that directory and you get to that she had no concept of that
and it was the first time I've ever encountered that it really blew me away
and I've taught kids as young as nine years old who understand it and it was
not her fault it was because she had been using graphic user interfaces so she
had used them so much in a Mac in particular and become so search-centric
which is good you should do that that she had lost the ability to understand
how the directories were organized so when I explained it to her she was like
oh my god that makes so much more sense okay everything's going in a folder
that's what they call it a folder blah blah blah blah and then I showed her the
command line so I took her this is the point of the story so I we were down
here and I was like okay how are we gonna rename x and y files so you know we
have all these different files down here you know like my my running thing if I
want to rename a file you right click on it and you hit you know you got all
these things you gotta go find the right one edit with vim share open copy god I
can't eat how do I I just want to rename the file how do I rename the file I have
no idea how to rename the file I don't even know where the file is in the
first place so first of all okay let's go on the desktop let's try this okay
all right I'm gonna cheat okay so we're gonna make a new file on the desktop
is it I don't want a new ff whatever why would I ever click f2 I'm not doing that
all right so so I go to new okay new folder there we go new folder
all right my new folder and and if I was a beginner I wouldn't know not to put
spaces or anything in there I would put spaces there it's nice and pretty I can
read it so so now I have a new folder right so I found it now now if I want to
rename it so you right click on it right click on it hopefully in your rename
and yeah my new folder still or whatever right and and then you know and then
let's say you have like 10 files here right to me so you're gonna make a file
uh and this is all related I'm just kind of all over the map so let's make a new
text file some I'll say foo and the thing it's really crazy about this too is
that these files have extensions and people don't know they have extensions
and they go out and they read ed youtube and they say or they watch youtube and
they read internet and it says you make make sure you have a file called food.txt
so they do this food.txt right and I mean that looks right how is that not right
we're not doing that this is boost I'm sorry my project's wrong right now
so so let's make another file okay so let's do another file right click
new and this is kind of an object because the same lesson I showed her
so a text document so bar.txt right so I'm giving example of like how you make
new files and some people don't even know how to do that
yeah but you see you're giving away the ending you're giving away the ending
I'm being like the beginner on purpose here right so if if if this woman who
had no experience whatsoever and she was an amazing intelligent woman if she had
no experience using computer whatever she'd go out to internet says well you
need to make a file called something.png or something.txt
right and she has no idea about extensions or anything so she should
do this right and and she has no idea about directory history or
structures everything so I'm gonna I did all of that and I showed her you know
some people some of the really young kids have to learn how to copy files by
dragging dropping they don't even know how to use a GUI
right so that's how you would move stuff around you double click on this
like but how do I get it to go back up how do I go back up
people oh I guess I could do this right what
I don't what I don't know what to do I want to go back
how do I go back up I want to go back up in the desktop okay I'm gonna drag it
to the desktop I mean and a lot of people know how to do this I mean you
watch you know people you know coding and stuff
so so so there we go right now I know they're hidden by default on one of
those that's that's not the point the point is
that that the GUI actually works against you
and so and so she so this is the story this is the main point of the story
the main point of the story is I showed her all this stuff and I showed her
how directories work so that she could get a sense of
what directory structures and organizations what I did use the GUI for
that because I wanted her to get an understanding of how they
related to visually I thought the GUI would help her understand it you got
the whole you know path up here and everything
and she did she understood directory structures based on that and maybe that
helped some of you out there who don't know about that
well and then randomly completely randomly just to show her I said well
you know but you can do these kind of things from the command line much more
quickly and I this is the point so I showed her how to do what I'm going to
about to show you on the command line using the move command
and as soon as I showed it to her on the command line
she like put her hand out and she said
teach me that right now and this is the point from William Schatz
this is the point that William Schatz is making as soon as I showed her how
powerful the command line was her eyes got huge she stuck her hand out she said
teach me that right now she wanted me to stop everything I was doing and teach
her the command line in that instant and this is somebody who as soon as
as soon as she saw the power of the command line
she's like you need to show me that magic immediately because and this is the
thing and so this is the point of the story and I'll show you how to do the
move next but the the point of the story is that
when people are exposed to the power of the command line
uh when they're exposed to it they immediately want it because it's so
much power it's like with makes great power comes great
responsibility but I can not only that but I can rename
like every every single file 30 files in a directory I can rename them all to
have an extra letter in the beginning or in the middle or something
that's what the power of the command line does and that kind of power
cannot be done from the GUI there is no way to do it from the GUI
and the crazy thing is is it's more efficient to use the command line
people think the command line is some old crusty thing like this stupid person
in LTT said and you know that had no basis for it at all I say okay fine
yeah buh-bye this is how you respond to that by properly
like oh you think it's like for old crusty like gray bearded
old men who don't have any relevance anymore because they don't use a GUI
anymore that's what you think okay
okay that's the proper response
that's the proper response to that that's the proper response
usually I don't use the proper response usually the proper response is
involving lots of non-suitable for work but language
the proper response is okay
all right have a nice day bye I'm gonna get something done over here
while you fuck around with your GUI sorry I swore I had to I had to right
there that was just the best way to do it um so let me show you how to do this
exact same task uh it included local calls
appended area code to your phone number or two lines of code yes
exactly so so let's do that let's do that we're going to learn a command today
so I know you don't have a command okay so I'm going to pretend like I'm you
and that I don't have a fancy terminal yet so I'm stuck on this stupid thing
so at this moment we have to start a poem I'll start after this
so now is the time to start your VM if you haven't done so
in fact um I'm going to remind you how to do that
by starting the boost one that I did last time I'm I don't want to jump ahead
so let's do this so and then I have a couple stories related to this
including a very highly paid machine learning person who doesn't know how to
do this they gave a demonstration to like 300 people
so thanks for the fall so let's do this we're going to go
to our Oracle VM virtual box uh you're going to open that up and get past all
the whatever things I am so sorry for the blinding white
they do not have that if somebody wants to contribute to be
virtual box will be please make a dark mode is there not is there a dark mode I
just don't know about there possibly could be
is there I don't I don't I don't know that there is one
it's like one of the bad sides about free software so unfortunately I have to
be blinded by this for now it's it is open source yeah
I mean we can probably change it so anyway so so boost my boost system is
powered off right and I'm going to power that on
so I'm going to click on my we already know this last time so go back and
watch the video I'm going to click on this I'm going to click start
lots of different ways to start we're going to do oh we're going to do a
headless start well we're not going to do a headless yet because we don't have
ssh setup that's how we're going to connect
and we're going to use our fancy color terminal uh rather than this
you know really ugly uh VM so we're going to click on normal start
and it's going to give us our our boost now we're going to do this
for a while so you can get ahead I want you to understand that you can always
fall back to this okay so if your ssh is messed up or it doesn't work or
something you can always fall back to just going to the
version we're not going to use start VM from the command line
you're way ahead of these people please don't confuse them so uh
ls give in grep oh nice okay so now we've got our our bare bones boost
machine that we've started up again uh no it doesn't do
full screen we're not going to do that first of all I suggest you scale I'm
using scaled mode but you don't even need scaled mode here's the thing
don't waste a lot of time screwing around with the base console from
vmware because because why are from virtual box
because we're going to use ssh and then all that's irrelevant and you just
start headless and you connect to it and then you configure the crap out of
your terminal you can go to your terminal and do
much much much more rich configuration so don't mess
with the the console just stick with the minimum console I am
currently viewing it in scaled mode so that it's actually readable through the
stream but but don't waste time on this because this
is really not the place to do it uh yeah if you're in linux min that's fine but
again the basis here if we're assuming that you're either using windows
or you're using um you're either using windows or you're using
um uh mac because you cannot use linux min at work
99 percent of the people out there cannot use linux min at work
the boost is for people who are going to have jobs not people that are in
college you can use whatever they want um and i think it's fantastic and we
talked about that in the first uh in the first or second uh boost so please go
back and watch that if you want to get a full explanation of why i'm not
doing that uh you know and i i'm i'm all for linux desktop
don't get me wrong i i happen to have been burned by linux
desktops pretty heavily pretty badly in the past uh year so i'm not as uh
bullish on them as i used to be uh not just me a lot of other people
popo was in particular burned me pretty hard so i'm going to log into this
using my login if i can remember it um and i hope i remember i might have to
make a new account um uh oh
i never fear you know you know how many times i've been working with somebody
and they cannot remember what their password is
uh i could have swore i made the password password
i guess not i feel really bad i might have to make a new one
and and that would be fine because i'm an idiot
i i said password management was not in scope and here i am can't even remember
my password did i make it not password i think i might have made it not
not password
i don't remember it i don't remember it i don't remember it
is it not password
no it wasn't password but i don't remember it i feel really stupid but oh well
i that's the problem when i just do things like lazily
instead of him yeah instead of him wasn't going to say yes you can
uh come on i don't remember my password i don't care
i have told you i don't it's that password it's not password and it's not
not password no
wait you know i might have to reinstall oh well
i'll just have to go along today i don't care
i don't care i can't believe it it's not
wait i know this is bad i may edit this part out
i don't remember uh my password password my username is
password my password is faster
and now this is an anton this is boost i don't remember
i don't remember it i honestly don't i honestly don't remember it doesn't matter
it doesn't matter because i'm going to install a new one right now thank god i
didn't get too far in that right by the way it's right control to get out
all right so you can go away um power off this machine well guess what you get
a new lesson in how to make a new virtual machine good thing i didn't do a
hardware install so there's that lesson
call it call it boosts are any fast no no no
so so goodbye boost remove you can die now delete all files
it was nice knowing you um i'm so glad i used the vm
i mean i didn't even find that look because i'm i'm playing the fool on
purpose i did that on purpose
new okay i'm just as bad as anybody else you can't remember
do you if i had a dollar for like every time some beginner didn't know that i
made a hole the first time i went to go program it was all for password
management for the people that were i was mentoring
i'd have maybe like fifty dollars it's a part of the first
why you should use the m's i mean yeah i know i know i know
damn it you know my secret i can't remember shit why do you think i have a
zettle casting all right so here we go we're doing this step again it's
actually not that hard i'm gonna do it fast this time because you already
know how to do it linux and then
uh one two sixty four next uh we're gonna do two i'm gonna do it fast
it's kind of an exercise creative virtual disc yes please
vdi virtual disc image yes that's fine dynamically
allocate you can do this all from a single command line in fluff eventually
which i want to get finished let's do 20 gigabyte hard drive
um 20 ish how about that create this putting it in that right place
hey look there it is um start it's funny because i just made harbour earlier i
could probably remember it um a bunch of iso i'd already
remembered my s of 22 so make sure you have 22 that's because it's in my
downloads folder click on start on that so i'm gonna click on view
uh scaled mode i think this is the universe telling me
you need to go through that again because these people want to see it all over
again they want to see how to do it all over again so i'm doing scaled mode
all right here we go that's that's my story i'm gonna stick with it
i was part of the plan all along all right so
the point the point of it is is that uh number one i'm an idiot can't remember
anything number two it's okay to be an idiot
sometimes god knows i am i ain't worse things have
happened out there i love i love everybody else is like
oh my god this dude like as if they never ever ever
ever do that shit you know it's funny that's how reddit reddit
and and like people's like it's like and stack exchange are full of people that
know everything that never make any mistakes and those are the people who
are like the biggest assholes to everybody else
but you never get to see them make a mistake because they never reveal that
they're making a mistake well i just revealed that i make a mistake
and i might call you out for being stupid but sometimes i'm stupid too
so here we go done one two server yes minimize no
we want the the man pages and all that uh we're getting our active recall we're
getting forced to have active recall absolutely this is good too because i
can show you how to do the bridge networking which i forgot to do
uh the password you said you were going to forget it did i actually say that
i told you it's because i picked a good password
i don't want to i'm going through the whole process again the universe has
as decided and i have to do this over so there
uh done uh proxy address no proxy we don't need hdp
mirror address yeah we'll use that uh use an entire disk yes please
again it's only that 20 gigabyte file that we allocated it's nothing more
than that so and we're going to accept all the
defaults here and eventually you'll understand more of what this is but this
is just all the breakdown of of your disk drive
and and how that gets that's done i'm going to kill all your stuff okay fine
your name uh rob rob your server's address uh well we
can use boost now because i killed the other one
username rvxrob make sure it's the same as your host os if you can because you
don't have to do it password password i don't care that it's an easy
password to remember you know what it was i was
shaming somebody shamed me or i shamed myself and did not using just
password last time install open ssh server now
i have a question for the y'all here should we do this
or should we actually do it from the command line
i think we should install it from the command line what do you think
i mean this is one of the things that you once you do it the first time you're
never ever going to do it again yeah let's do the command line
i think last time we said that so let's do that so let's do done and we're not
going to install anything extra we're going to assume we got we got the
whole thing okay thank you deja vu yeah well active recall
garfield that's what we're going to talk we're going to call it active recall
we're doing we're doing this for active recall
have to tell us you are so lucky that this is suitable for work time
dmd
i mean seriously you're trying to you're trying to you're trying to be getting
not suitable for work i know you're trying it
was it bang password i tried i did bang password i must have missed
time spent
hmm oh god all right time for me to go refill my
coffee i'll be right back take a break take a break
take a break now's the official coffee break
ma'am
yan
ma'am
All right, we were supposed to take a 15 minute break anyway so
you know what the universe is keeping me on track here I'm a firm believer in
that universe was like you need to go over that again because you covered it
really fast last time so do it again I believe in the machine
and so we're gonna do this install now it's time for you to your install hey
why you're doing this let me go show you up because I can't do that for you I
have to I can show you how to do it but I've already got my install so I can't
actually do the next part for you so let's go look for it you want to get
Microsoft Windows terminal and we'll go back to the Linux and you sing I promise
I'm kind of all over the board that's just how I am as long as we cover all of
it during the day I don't care so Microsoft soft and there's actually an
hour and a half video from like 2018 about 1918 and where they made it and
the whole team that made Windows terminal tells you how they made it okay so
the best way to do this is to go into this software store which I do not
remember how to do let me try it was it app store there we go so you go to the
app store I am and SSH keys later and I ran down I when we sit at best the
keys I never remember the password of that and because I set up to do to do
I do see do or is it for free and I can't remember the password at all but I
don't need to because you do access you know I know they did well they had a
terminal before actually the reason I mentioned the reason I mentioned it as
the project stuff is going to be off off so we're not and we're doing the boost
right now so so here you go you go in here and search for terminal right and
they have Windows terminal and then they have Windows terminal preview and the
Windows terminal preview has been the one that's been around forever but I think
they actually finally went with it yeah they made it they made an actual Windows
terminal should we see the video wait how are we how are we doing on the on the
install all right we're still waiting are we still waiting yeah we're still
waiting all right so if we're still waiting let's go watch a nice fun
interview from a fun video I thought it's not it's not actually hmm is the
sound off the sounds off right yeah I because because if you watch the video
it's got it's got really great sound but this sound is George Hodges streaming
nice an election if I guess yeah George Hodges awesome too yeah yeah
Microsoft yes okay there is a way to download it and install it and get around
it do x how do you see your name execute do you have the link for that because
because it work yeah and this is about work and you can get the terminal you
just have to go around it thank you thank you thank you thank you thank you thank
you oh my gosh you're awesome I'm gonna put that in the show notes so that people
can go get that because there can be a lot of people in I need that same thing
with the I term to one star reviews the the the kind of like pump you up music
on this is really good actually yeah I really really love the terminal marketing
for that I won't even like I do I really love it so let's do that let's get the
windows terminal I'm gonna I'm gonna put that on a related here I don't want to
clutter up the outline so so if app store no app store needed we'll say that
how about that all right so let's go back in and read them while it's installing
oh there we go we're on style now what is the difference between terminal CLI and
a shell as a great question let's talk about that right now so and this is I'm
so glad you asked that question because I love this I love this I'm gonna put this
in the notes so that it's captured and we'll put a marker here and everything
because I love that question I want to answer it right now okay so as a shell
what is the difference between terminal terminal is a terminal CLI and shell
all right so I am so glad because there's actually a thing called that TUI so
I'm gonna I'm gonna answer this question really quick we're not using the problem
thing we will I'll I'll start using it again here after as soon as we get this
stuff installed I'll start the problem so the difference between terminal CLI
and shell so that terminal is the thing that gives you the what they call cell
based text screen right so and let me let me give an example of a terminal
application that is not a command line all right so so this is the the really
cool program called Neo which is a take on t matrix which is cool you can change
the colors on it everything and this is if this is a terminal application now
why is it a terminal why does it qualify as a term it's not a command line
application but it's a terminal application so you could say that it uses
the TUI I don't think I've ever heard anybody say to me but it's the TUI the
terminal user interface this is using this idea of you know measurement see I
can see up in the corner up here really quick so look right up here I'm gonna
it's gonna it's gonna go away really fast but look right up here and it'll tell
you how many columns 81 by 25 and that number is actually on purpose because
the typical terminal in the old days was 80 by 25 so 80 by 25 is the standard
terminal size from the make the old days if you watch it like the old-time
computer there's a computer old-timey station on twitch or channel twitch you
go watch that and use some really great stuff there but the first terminal
applications were 80 by 25 and so I deliberately a vt100 yeah thank you for
that and and vt100 was the type of terminal there was a time that terminals
were considered you know let's do another terminal application fishies you
guys have seen now and you see on my channel all the time so these are
terminal applications they they use the idea of a cell and sometimes these days
you can split the cell in half in fact I think my sunrise program will sound
like like yeah like that's a little bit too much right now and I have my
terminal color set properly otherwise that would be more granular it's not
you these days you get millions of colors on on most terminal applications but
the idea that the word terminal comes from an actual physical terminal that
used to be a thing and I could get out on this all day old vt100 terminals and
there's actually there's a thing called retro term that you can get you can
watch crystal the shoes is a lot and I I use retro term a lot back in the day if
you want to simulate an old terminal on your screen this the windows app store
have it that would be interesting let's see I know you guys that's like not the
terminal you wanted but I bet it might have it cool retro terminal it's called
retro terminal I mean some of you might actually like this more than windows
terminal I don't know where it is you just go retro terminal all the time it's
pretty fun isn't it it's worth it's worth showing people what it's like I
actually did a video on it let me go and get see if I can find my own video here
I'm not promising that I this is more fun for me to do it this way so we're
gonna do so cool retro terminal the reason I like it is because it it reminds
you the old school terminals hey look tech hunt yeah there's everybody's done
these there's mine two years ago two years ago there's a video honoring
boomer tech from the early 80s oh my god this is so old I've still got my ads on
because I'm a I'm bad but don't yell me don't yell at me who the hell just give
me the past the ads please we were being I was being silly I'm not gonna be
really there's a sound this out you just go here I here's the link here I'll
give you the link but I'll give you the link here you go please you're supporting
past you I kind of am I didn't even upload my own video there we go hacks are
sanded out back then and I mean this is what this is got it's gonna be a long
time ago there's people their content is great yay and then some some random
spam this is back with my old Elvis Mike and everything we were having fun
you're talking about war games everything it was this is actually a good
video so go watch it I did I was doing you see OCP prep back then and because
that's what I thought I wanted to do with my life and I changed my mind that I
wanted to cloud stuff now I kind of want to do SCP again I know it's hard to
follow everything so there's a YouTube video me covering cool retro terminal I
have the link in there and everything so if you want cool retro terminal you
can get it but but but why cool retro terminal a cool retro terminal is based
on all the different types of actual terminals they use this is old deck
terminal I mean you can see like if we go back to the pictures list and the
images let's do that so here's like all the different types of terminals that
exist six hundred bad damn fast yeah and I mean you got the deck ones you got
the ones that that I grew up with this is the IBM one you have all these
different styles if you want to play with them you want to actually emulate
these terminals and see how they used to be you can go there and look and that's
where the green comes from that's where the whole matrixy green kind of thing
comes from that's where the limitations by 80 columns by 25 rows comes from yeah
did you find it oh wow oh yeah no somebody is somebody did me in hacker
mode somebody did me in hacker mode they actually made a whole meme about me doing
this and in try hard mode I called it because that's what it was I was a
try hard learning out of hack and I had not learned how to hack so I was a try
hard anyway let's stick with the topic here so so yeah so here's all the
terminals there's an old person doing the terminal you know boomer is doing
terminals so this is where the term terminal comes from so a couple things
here the word terminal I'm gonna go ahead and let myself go down this this
rabble because I love this rabble okay so the terminal comes from like where
did the terminal even come from like where where is it you know who invented
the idea of a terminal period right so it's terminal comes from an original
teletype machine and if you've ever do you guys remember anybody know what a
teletype machine is and this is gonna become important later because we're
gonna talk about a device in Linux to this day called TTY and the TTY stands
for teletype so the way this stuff all came about was they wanted faster ways
to input information to computers and we could go all the way back to I actually
have punch cards I mean do we really want to do the whole lesson here I guess
we do I'm gonna do it I don't have time because crazy I'm gonna do it this is
how I have a punch card and I was used to show people punch cards and the punch
cards were invented if you want to read the innovators book it will talk to you
about what's his name who invented the loom so the punch card technology comes
from yeah you have to show punch cards here they are so a punch card the punch
card technology comes from the loom and if you go back far enough and I can't
remember the guy's name who invented the loom it's like right on the tip of my
tongue my Charles Babbage we talked about him and venting things you know
the first mechanical difference engine and then the analytical engine and then
Ada was Ada Lovelace was the first programmer because she wrote how to use
those things I'm doing this really quickly because it's really fun to go
into it and it's not really relevant for the boost other than just backstory okay
jacquard thank you the jacquard loom yeah and and so the the the I mean if you
can read all this in innovators from this great book but so it wasn't until
Mockley invented the anyac which is a computer sometime later where they were
trying they were struggling with putting data into computers and so at the time
they had to like you know flip lights on and off and switches and stuff like that
he literally had to like flip switches to do the coding and if you understand
assembly and binary and touring stuff and all that you you'll get in that we're
not going to go into it here but that's where it comes from the whole ones and
zeros thing right and stuff's all gonna put come into play later when we get
into learning about types and integers and things so we're talking about now
and so it but back then then somebody came along with the idea that they got
from jacquard on the loom they said hey what if we just have you know this
computer read all of the where there's a hole there's not and then they have to
do it they don't have to flip a switch and so that was much easier way to put
data into a computer but it still was time-saking and if you look at the first
the very first personal computer it was called was it called the one that the
brew the brew club did with Steve Jobs was it called the Altair the Altair the
Altair was the first personal computer and that's not it so this is the first
computer and people would pay like hundreds and hundreds of dollars for
this computer that's the teletype in the punch card ears I bet so so people
would people would pay a hundred dollars for this thing and the way that they
coded it I kid you not the way they coded it is it would be like up and down up
and down you know with their little things and if they got one switch wrong
their whole program was lost can you imagine that can you imagine writing a
program I mean not to mention the fact that just to type the letter a is like
in this in this world would have been eight odds and offs that's how they had
to do it and it took them forever and the people that were into the computers
originally they were so happy to have a computer first PC right they were so
happy to have a computer in their house they did not care and so they would they
would go through this and they would do this and then and then they started
figuring out ways to tie it to the teletype machine so so that they didn't
have to do that and so because you know the engineers at the time like there's
got to be a faster way to type to type this stuff in so they started hooking up
teletypes and what were teletypes designed to do you know the original
ticker tape kind of communication was all ones and zeros that would go over you
know stock exchange you guys have seen ticker tape before right you guys have
seen ticker tape stuff so so they would see I mean this was the first way for
you know data to be transferred ever across you know a wire and this was an
analog thing it was a one or zero and it would be they would use Morse code for
this and if you don't know what Morse code is is it they know what Morse code is
I mean I'm kind of having fun with this but all this stuff is going to come in
to to play later because it's all about binary so binary meaning you know base
two one zero zero we're gonna cover that so I mean we're really going back right
but but this is all important you have to know this to understand how what
how a terminal came to be okay so so you've got so you got all of these like
little ones and zeros here you can send it across and then they figured out ways
to communicate stock data and all kinds of things and then they were like well
gosh it takes so long did it did it did it did it did it did for a letter L so
then they said you know what there's got to be a better way so they took the
tell the typewriter they were already mechanically typewriting back then and
they're like what if we made what if we tied a typewriter to an electronic thing
and that's where teletype came in that's where teletype came in is somebody you
know some smart person back then I don't know who said what if we made it so that
they could type instead of having to do to do to do thing and so that was when
the first teletypes started to to be and you started to see the first teletype
machines and the teletype machine as you can see that's not a good one let me
go back as you can see the teletype machine logging into the 1930s is that a
bigger is that a bigger bigger picture so as you can see back then it was just a
matter of typing and then those words would go in that tell a printer tell a
writer tell a type in the looms and so this became the way to put in data to
enter data into things and in fact to this day the control sequences that are
sent that are invisible to the terminal emulator still match the teletype so for
example a backslash n represents a line feed a line return sorry there's there's
a line return and then there's a line feed and they're two are separate and
that's why both of them used to be sent and we're going to get into that it's
kind of annoying today but you know those were actual signals that were sent
to the teletype one of them said hey go down a line and the other one said go
to the beginning of the line and to this day windows standard text files have a
carriage return and a line feed at the end of each line it's invisible to this
day they still have it so those text files that you're throwing around and
using all the time those command codes are still there and those are the exact
same digital command codes that were used in the teletype machine so and there
are a number of other codes and we're going to get into them and we're going
to do all kinds of fun things with them so like you know neo or like mat matrix
or the stuff like that that's just using all those different commands that you
could send to the terminal and and what they did is once they started using
terminal emulator so we're going to use instead of an actual terminal you know
we use the word terminal to mean a terminal emulator these days we don't
really say terminal emulator but the truth is terminal is a terminal emulator
and the standard that back then everybody was fighting about what terminals
should be the best and they they created all kinds of ways to create standards
between that uh pty yeah we'll talk about pty versus uh pseudo tty and um and so
yeah i mean you've got like all kinds of old timey ways of doing this um but
they all the and oh this is something really interesting so when we get doing
vim later uh you know um the caps lock key the cat you guys know your caps lock
key right the caps lock key on all of the first computers was the escape key
and they tell if the typewriter lobby decided i mean the secretaries and
everybody who was doing typing back then they decided that was too annoying
and because this is really crazy the the computer keyboard came out before
electronic typewriters came out and yeah i did we're gonna go back and so then they
ended up typing it the the point of that story is that it's totally okay for you to remap
caps lock to escape if that's what you choose to do as long as you remember to do it every time
and you can do it on your keyboard and not have to depend on something we're going to
get to that point but i i think it's you know historically i think it's interesting to know
that the caps lock key was escape before and it got taken over by the typewriter lobby because
they they they said we would rather have a method of like locking down caps and so they
they they banished escape up into the upper left hand corner of the typewriter or any other thing
because it was kind of taken over by the caps lock key which is really unfortunate how many
people actually use the caps lock key it was not a trump supporter
does anybody might as map to your firmware with qmk it's yeah if you're gonna do with
firmware mapping that's the way to do it because then you don't have to change your
keyboard wherever you are uh control was there is where alt is currently located yes control yes
and um yeah okay so um i mean i don't i don't know how much you guys care about all that i
know you just want to get on with it but this stuff is all going to come back later so the use of
the use of terminals what the question was what is a terminal well that is the long answer a terminal
is actually a terminal emulator based these days on the standard vt 100 terminal that was invented
to uh use a digital method of inputting data uh to replace the teletype machine that was being
used before that is the short answer but that's the history behind it and where it came from
and it's going to get really important later because because later on you're going to start
wondering what all these escape characters are the ones for color the ones for clearing the
screen and all that and we're going to do a bunch of that code that's actually really fun to do if
you want to make your own you know like animation or something and we we regularly do that during
skill set sessions we had one game make a make a really great nine cat uh animation just using
the terminal but the question the question was what is the difference between the terminal cli and
the shell and i'm going to cover that right now okay so we're don't worry on time we're going to
keep going as long as we can um so um so the cli um is the command line interface okay now
specifically you can do a command line interface without a terminal now that's weird to say but
you specifically you speak strictly speaking you can a command line interface is sometimes
also known as a repl all right so what is a repl and we talked about this last time but
uh what is a repl okay a repl is a a read evaluate
print loop okay and the command line interface strictly speaking is anything whether it's a
terminal or not that takes in input on a single line and then does something evaluates it and
then prints back whatever if there's anything to print back to you and then it then it prompts you
again so a command line interface is strictly speaking so and i'm gonna this is gonna kind of
sound weird but i'm gonna ask i'm gonna ask you guys a question i'm gonna drink my coffee and ask
a question how many of you think and then this is kind of a question for our hackers out there
how many of you think is it possible to have a command line interface on a linux system that
does not use a terminal what is your vote yes we got some yeses all right so i okay now any any of
our hackers out there some of the more experienced hackers out there will tell you that if you hack
into a server and you get a backdoor into that server that is speaking over the network right
now you you likely you likely are going to be using a terminal uh so strictly speaking you
can't use that command line interface unless you have a terminal on your computer but if you hack
into a computer and you provide a back end uh program that uses a command line interface to
talk over the network and that's all that is talking over the network is just like a type
it's just sending it over the network one one character at a time and more or less there's
buffering but um and so when you when you do that you do not get a full terminal that can
draw the screen for you as anybody has anybody ever backdoor means breaking into a computer and
providing a way for you to connect from uh the computer the the network over the network to
that computer so that you can enter commands on a remote computer that that do what you want
and creating a backdoor is a very is basic it's like it's like hacking one on one right it means
that you've compromised the system and you've got a backdoor but that backdoor has to have a way to
access it and a lot of the times when you access the backdoor um you are using a command line
interface you're not using a terminal on that computer now you might be using a terminal on
your computer but you're limited to using a command line interface because why because let me ask
another question if i compromise a computer and i access a remote computer and i just have a command
line interface backdoor can i run neo and t matrix on there can i run my fishy's program on there
you can't and why can't you because what you've connected to is just a command line it receives
commands and it prints back output it receives commands and it prints back output and a lot of
times it doesn't know about any kind of terminal at least the remote session doesn't know anything
about a terminal and that's important because in when you do that we're i'm telling you this because
you're going to ask me later why do i just use emacs or neo of them and i'm going to say why do i
need to learn ed you're going to say why do i need to learn vi because even vi which is visual mode
for ed which we'll get to does not work in a command line interface like that so you're you're
limited to single commands one at a time and that's what ed is ed is the standard unix editor
and everybody will laugh at me for learning it but if you want to do anything in hacking world in
fact it's so important that some distros have started to remove ed because systems that are
compromised through a backdoor vulnerability the the people who have done that can edit files by
using ed and sometimes they'll put ed into their rat's nest in order to do that and which is why
i'm doing bonsai because then you can put a command line editor into it um uh vim tiny isn't quite
good enough so any the the reason what i'm this this is this is kind of a rabbit hole conversation
but i want you to understand that this demonstrates the difference between a terminal a full terminal
and a cli all right uh and for for fire forget needs to compare uh insert code to prevent it yeah
that most of them do but i mean however you're going to get on there right you have to have
something to connect to so let's say so what i'm trying to tell you is that there is still a very
valid situation where you will have a command line interface type one command watch the output
and that output is just like you know information it's not going to send special ascii characters
are going to cause your terminal to reposition and and moves you can play a game or do neo of them
i mean you know neo uh matrix c matrix kind of thing so they're i know it's a lot to say but
it strictly speaking uh a terminal and a command line are not the same okay to a lot of times to
use a terminal the command line interface you need a terminal but you don't necessarily need a terminal
to use a command line interface in fact a lot of people will use a website that contacts the
back door and they will use uh a web interface to talk to their back doors uh without having a
terminal at all so a command line interface simply means i type a command the computer does something
and then it prints back data that i see and then it loops back and it prompts me for more data and
i type something in and it prompts and it comes back that is what the command line interface is
a terminal is a bigger word it means you know everything about the terminal experience you
know the the mapping the escape keys the teletype idea all of that and then we have one last term
to define and i know i've gone way into this but this entire boost is fundamentally dependent on
your understanding of terminal technology because it's it's all about that and we're going to be
referring it to a lot so i don't feel like this is a waste of time um and then we have a shell so
the shell strictly speaking a shell is the shell has colloquially come to mean the command line
interface of the terminal people interchange these words all the time incorrectly and that's fine
you know but people say a shell but the shell strictly speaking the shell is an interactive
program and it doesn't have to be a command line it can be an interactive program that provides
access to another system a deeper system a system that's got a kernel is more complicated
you know because if we didn't have a shell we would have to write system calls and stuff in C
in order to get anything done so and there's lots of visual implementations of a shell
of the unix shell unix gets most of the credit for defining what a shell is
yeah well kind of yeah not not necessarily because dollar dollar zero is the command
that's being executed by the shell okay so so this is actually probably one of the better
pictures of it so you have that this is if you were to peel back the layers of a computer i mean
you know that remember that tele-type stuff i was talking about and the punch cards and the ones
and zeros and all that well all of that is necessary to get the operating system but then you
you know you have this like core operating system in the middle that's running all this stuff
and then um yeah what kind of calls in C yeah yeah that's what i was going to say a system calls
yeah so so so this is how linux works you've got um the kernel right and if you if you've
been following the rust stuff there's all kinds of talk about rust being able to write kernel modules
not the kernel um and most of the module most of the kernel these days is uh it's all written in C
right now and so there's this really low level um code that's highly optimized and when you hear
about linux what you're really hearing about is the linux kernel and linux torvalds most people
don't know who that is well sure so linux torvalds invented this linux torvalds is the inventor
there's him flipping off invidia which he can't do anymore because invidia just open sourced all
their drivers this is a famous picture of him flipping off invidia for not for it's he's
well known for this picture so linux torvalds the inventor of of linux the linux kernel
and as richard stolman would remind you uh that's all he invented he didn't invent any of the other
stuff that you use in the shell because stolman and the canoe project invented all of that
it can still put them on yeah um so so so here we go so uh he has to get yeah get his
other big claim to fame he may get for better or worse uh kernel modules on the drivers
kernel modules on the drivers i don't know i don't know we won't go down that rebel
it's it's big news because that was just in the news this week it's been yeah invidia finally
released a bunch of their stuff to open source which they've never done and torvalds has been
really mad because torvalds released the linux kernel to the open source to the free and open
source world under gpl v2 uh he also hates gpl v3 which is a licensing topic for another day
it's worth saying at this point though what is free and open source um and i'm going to give you
like the two two sentence definition uh free software according to richard stolman and i'll
pull him up really quick and this is all background stuff uh richard stolman invented free software
the whole movement um he's a very very controversial figure i believe he's the most important technologist
of our day um he invented the concept of free and open source software uh but here you're i'm not
going to go into it but there's several other really really highly controversial things about
this individual that i'll let you figure out but just like any person who's created created
amazing contributions to history you know there's amazing things and there's lots of
negative things i mean you can look at thomas jefferson martin Luther king there's a lot of
people who have done that i'll let you make your own decisions but he is the one who invented
the uh gnu uh opera you know the gnu and he eventually made his own kernel but the way
linux came to be and this is why people make jokes all the time about whether you should
call it gnu linux or not and to be to go back to the book actually um there's a nice um there's a
nice explanation of this in in his book uh and we're gonna go here we go uh click the focus
let me see if i can find it in his book he has it it's kind of a fun little commentary on it
but he basically explains that we don't call it gnu linux anymore because yeah i'm gonna put this
in here uh let's see uh what is gnu um you know who invented linux you know that kind of thing
i'm just going to put a bunch of stuff in here so linux the name linux used to be gnu slash linux
and the reason it's inappropriate to call it that in my opinion and i agree is because these days
there's been so many contributions from the open source community you know people that gave their
time and effort for free norm comes to mind that to call it that you know with the slashes you'd
be having a million slashes in there so for convenience people have dropped the gnu installment is
all up in arms about it um uh yeah without alan cox and any of those people right uh what would it
be without gnu um well it would definitely look there's a bunch of stuff that's wrong with gnu
right now in fact most of the gnu utilities are being replaced and there's a lot of people replacing
gnu utilities with rust in fact i predict that within five to ten years all of first of all the
gnu stuff is ancient the gnu stuff is so old that it needs to be written rewritten anyway and i think
a lot of it i'm actually rewriting a bunch of the gnu utilities myself so that i can make them into
bonsai trees and put them in a single monolith that i can then download to a backdoor server
or something and get all of it without having to deal with gnu there are huge licensing issues with
gpl v3 and i won't get into that suffice it to say that if stolman had his way nobody would ever
have proprietary software anywhere ever uh no matter what and that and and he and so his licensing
gpl v3 is very aggressive in forcing anybody who uses the software to give not only that
software away for free but any changes they make to it for free and that makes enterprises very
nervous they don't want to use it so enterprises use the license for linux which is what torvald
says stuck with called gpl v2 which is a little bit less restrictive it still you have to give
your changes back and then there's a whole other family of licenses that are about just giving
your stuff away for free and that includes apache and bsd and mit so so i think that's probably
more than i wanted to say about that um suffice it to say that that's that's where unix came from
so now we have to do we have to talk about well where did this come from right so so this guy
invented gnu which is the shell and all the tools related to it let's go back to that so so uh he
didn't write vi and ed he hates that he wrote emacs but all these little things around the edges
these these programs that run they are running as interactive shell programs that do the tough
job of communicating with the shell and so they send the shell something called sys command sys calls
which are a c code by the way it's another reason you should learn c because you can go you can do
an s trace on something if i let me see if i can s trace something um i want to give somebody a
reason to need to use s trace of some kind uh i don't know how fast i can do this but let's try
i'm just trying to so if you want to see what a program is doing uh i probably could
have touched most of this new dimension target oh right um all right so so this right now
is just sitting there it's not really doing anything i i wonder if i change some things it'll
do something no it's not that's not that's not a good one to connect to i guess um but the point
is is it these we're going to talk about process management and everything too so all these things
are programs that are running on the computer right and they're usually running on the computer in the
shell and that's why i wanted to show it to you so the shell is the layer where all the the kind
of human interaction is happening and that's why it's called a shell now the term shell has come
to mean many other things it's very confusing so you'll hear some people say shell and they mean
POSIX shell programming which is a language to write that that you can write scripts in and stuff
that interact with the kernel right um and then you'll hear people say but there are many there's
there so there are interactive shells that are generic bash is the default which is the one
we're going to learn there's the case shell these are different forms of languages for interacting
with the generically just with the whole thing and those shell programs can cut combine together
these other programs that all constitute the shell so we will be using the shell the shell is
command line but it doesn't have to be vi is not a command line tool vi can be a command line tool
but it's primarily a visual terminal tool right um uh if you interact with the kernel and see then
why would you imply you can interact with the shell as well um well yeah i mean you can talk to
what i'm saying is that with the kernel you can you can watch the syscalls come across and they're
written in c language so and they're using a specific library are very complicated it's basically
so the people that write programs that run in the shell make them so that users can use them and
that's the short definition of what a shell is the short definition of what a shell is is anything
that provides an interface to the human uh that talks to the inner part of the system and in this
case it's a kernel but but you could have a shell in in you know any other language or any other
system you know it doesn't have to be linux but that's what a shell is a shell is the layer that's
there to talk to the human and usually it's a command line but you could actually have a GUI
shell you could have a GUI shell that provides the interaction and makes the interpretations
and then sends those commands and interprets the commands coming back the uh messages coming back
from the kernel and then the kernel makes sure to get all that to the to the hardware and that's
really low level stuff that's like assembly level kind of manipulation of memory and thing
so so these are the layers if you want to get all the way to the hardware this is how you do it
and the shell is the outer layer okay and then you you do have some outside programs application
programs that that that run in the shell like chrome for example so i'm running chrome and chrome is
not strictly speaking a part of the shell right chrome is not the shell chrome is being i can
execute chrome from the shell i can go to the shell and type chrome and it'll start it up right um
and so you have application layers that are kind of out here usually that's talking about um you
know uh you know protocols and and application GUI programs and stuff like this a graphic user
interfaces um but so so this it's really important that you understand this if you not just because
uh i mean this is how all computers work all of them and you know the power shell you guys play
around with windows right it it's a it's a different shell so i mean if i if i ask the station to
windows right now i'm on windows i got a power shell that this see how i enter commands into it
i'm now on windows and i made a remote connection and now i'm on the windows machine and i can
mess around over here i can use my ls command uh because i have git bash installed but otherwise
it wouldn't work you use dir and stuff like that and then i can go back and exit back out
and now i'm back on anton again so this this ability to connect to all these different things using
uh programs that make uh connections between the the things and we'll have to talk about networking
as well that that's coming next but but um i'm glad i mean i know that was a long answer
and it kind of was all over the place but but hopefully you understand the difference between
a terminal a cli and a shell so and a repl is largely equivalent to a cli a cli it means redevelopment
print loop in fact repl the term replet is the basis for the name of a service which i recommend
all of you go sign up for uh if you just want to mess around with stuff it's repl.it or repl.com
um this is a place that has created uh they've they've created a a way to use uh through the web
for any kind of stuff so you can just come over here and click on create this is repl.it.com
and i've i've had interactions with um i'm jotting the gang over there they're doing great things
so let's say you wanted to write bash or go you can practice your coding or you can show off your
coding over here without having a terminal so this is a terminal that runs through the web
there's a lot of them out there um but you know and then they give you a shell over here they
give you an actual shell uh and i believe me this is a real shell when i first saw this this is not
an emulation this is uh yeah you can collaborate it's really good for collaborating so if you have
two people you want to work on a project together uh it's great particularly for learning um i recommend
it i i don't i'm not a fan of dependencies on the internet for any kind of project development
and eventually you know you'll learn how to share get repos and stuff like that but
but for the learning nature of this this is used by a lot of educators um uh to do this now
i can click run here and you'll see it'll run the console so and but the shell is a different
thing right so this is a shell and you can type ls or dpwd or dir um if for some reason you don't
want to go through the process of installing a vm uh you can go do all of the stuff that we're
doing uh through replet for now and you can actually share this you can let people do it
you can do all kind of coding you can code and go you can code c there's people have done amazing
things people have done entire chat servers on replet this this isn't crazy things so i'm just
going to mention that so uh replet.com um uh give uh uh i'm gonna uh i don't know i i'll just put
that here yeah um if you if you do run into umjad in the game please tell them uh thank you and that
that romps as i i've written a pretty uh scathing review of it actually if you go search for i don't
know if i want to even bring it up some of you might want to read about it though so i'll go
ahead and give you a link to it so if it's on my medium i was one of the first people to review
replet when it first came out um and at first i hated it um uh because it failed me in many ways
and i'm not going to go into all the details of it um but i do think it's important um yeah here we
go so this is so umjad actually took uh i almost actually went to work for them there was a time
when i was really interested in going to work for them and then uh their their um their product
failed me uh immensely and um so if you want to read about this i wrote this this is an update in
2017 um let me give you a link to this um but but just in particular if you're an educator and you're
watching this right now i want to make sure you're fully informed and that you make your decisions i
had to quickly abandon replet in the middle of a course i taught at private school because the
network did not support to the use of the internet and as cool as i think it is i think it's important
that people understand um the possible problems there i wrote that years ago but it's still very
relevant and i'm not going to get into it now but i am i want to just say how grateful i was for
umjad for responding and he and i had some some um some pretty you know positive interactions after
that an email and everything um and i you know full disclosure i did consider working for them for a
long time and then i ultimately decided against it the reason i thought it was nice is because
people didn't have to set up their own servers and i was going to use replet and i was like man we
don't even have to go through this whole vm crap right wrong you still need to know how to do this
and that was that was a realization that led me to think no we're going to go through it the long
way even if it takes me an entire day to go through it it's probably about time for us to take a
break here i haven't been doing the promo session very well but uh that has been kind of a whirlwind
tour of terminal cli shell uh we will come back to unix linux we could do a little bit uh and um
and we're going to talk about that um we've got the the terminal installations going on and um
and i think when we come back i'll do a little bit more about unix and linux
and i tell you what let's do some installations tasks get some fun stuff done
and then i'll inject a little bit more of the history when we when we come up to the end
i don't know if we're going to get to secure shell today at secure shell we might
but it really it's i mean we'll try we'll see what we can do here uh but i i don't feel like
not covering the terminals is would be i think if we had not talked about the terminal it would
have cost us later um and this is why i removed the the final date for the boost because if we
need to push it out we'll push it out it's all configure server terminal software so
we're going to take a 12 minute break and uh i'm going to start the promo for the break
start uh 12 min and um when this is over when we come back we'll we'll do some installation
we'll go back and install some software and then we'll while stuff is is installing we'll
talk more about linux and unix okay i'll put some music on during this time
uh the terms okay uh and it's fine and time to do yeah all right so i'm gonna i'm gonna put a
little bit of music on for you and but i'm gonna go take a break to get some more coffee
you
you
you
you
you
i know this is the boost cheers
you
most of kendrick
i guess i can answer questions right now if anybody's got other questions
so how many boot camps let's you drink beer in the middle of the boot camp
oh i'm so sorry i don't know who that is i'll have to go look
i mean like we're half way through so
i mean you know what i'm saying
we're halfway through so i look it's kind of okay
um i think we got all our links in there right
i i do need a breaker once while we regroup and kind of figure out what we covered
because i do go all over the place it's just my style and i don't apologize for it
um private get a repo now private uh i don't know i i would not try to trust it as private
can you sit down for getting past your TTYs yes absolutely
people do it all the time in fact we caught a hacker uh at teleport doing that and they they they
put a um they put a sniffer on the TTY and they were able to see every keystroke he did
and they actually brought the authorities in and they showed him the guy the guy hacked into our
main server cloud using a printer a printer an old printer driver that had not been closed
and so they he scanned that i mean these are the normal things to hack right he scanned our system
he found the vulnerability uh and he got himself a back channel river shell
and he broke into our root systems at teleport and and they watched him rather than turning him
on they they they put on a trace on on the TTY and they brought the authorities in and they
they got they brought the IP address and they watched it i remember i'll never forget joey
was sitting there in the blinking lights room and i remember being kind of a noob we didn't
know about any of this stuff and i was sitting in the back watching this go down i mean they had
lawmen you know police officers were there and they were watching the TTY being traced
and um it was it was just like a movie i i swear to god i my early experiences with
linux and unix would would be tantamount to something that you would see in a movie because
because i was in it was just so cool uh yeah the kernel space is crazy um yeah i did a lot of
CGI back then actually yeah and i had to know i had to know how to make some really secure CGI
scripts i wrote a setuid root CGI script uh and i wrote a c-rapper for it and so does
you know it uh and i we created the first thing the first web um tool ever this is like way before
geocities and it was called teleport webweaver and it was kind of fun because my the product i had
made i i took the bus to work and stuff and i one day i was sitting at the bus stop and this
bus came up to pick me up and it had a massive advertisement on the side of the bus that was
the software i wrote it was really i know i'm flexing a little bit but my god it was so fun
it was so cool it said teleport webweaver the only place to make your own web pages and i wrote that
i wrote i i wrote it in CGI and parole and in order for it to save um to a user's directory
as the user it had to run as root so i had to run as setuid root wrapper which is really dangerous
because if if i did anything wrong then they could break out and get root access and and but you
believe me my the linux guys they they've been the unix team over there they they beat that thing to
death in fact skeezix passed an entire core dump to my program over the internet to see if he could
make a buffer overflow and i my program put up with their testing i mean these guys are guys that
goes def con and black cat every year and and they were trying their hardest to break it because
because everybody wanted it and except for the admins they're like i'm not running that setuid
root thing from this mac guy because i was you know doing my development on mac back then i was just a
web guy and i proved i held up i was i think that's the first time that i probably won um a little
bit of of respect in the eyes of of the of the unix team and and after that time um after that
moment i started to get you know more help from them they started to to not see me as the enemy
you know as the application person who's going to break the violent violent all the system security
and i absolutely worshiped them i thought they were just the most amazing things that ever lived
and i was really really fortunate to work there again that was teleport internet services in 96
77 um and um joey and again um you know i just just amazing people i'm just so grateful for them
um without bouncing their connection to being extracted from their remote service
yeah i don't know why they didn't bounce it they didn't i don't know how they did it
uh i all i know is that they were tracking the tty in fact one of my greatest fears since then
you know doing a little bit hacking myself is and i'm not telling you to hack things illegally
i'm not saying that but if you ever actually get access to something and you think that that nobody
can see anything be careful that your software does not use the tty one of the reasons that your
backdoor vulnerabilities should never use the tty is because the tty can be traced like i just told
you so if you want to make a root kit that is untraceable you don't use a tty that's all i'm gonna
say look i said so you you may be wondering why i'm going into such deep detail on some of this
stuff but one of the targets the target goals of this boost that i said so openly is to produce
security professionals it's to produce a cloud infrastructure people uh developers you know back
in developers in particular and infrastructure you know security people and the infrastructure
security people who don't understand the nature of the tty and how it can be traced are are gonna be
uh made aware of that in potentially uncomfortable ways so i want to make sure you understand it
it uh it has to live in the firmware which you can do now with eb and f so there are ways to do
that now we got one one two more minutes one and a half minutes left to geek out
it's unique what yeah we're not showing it's unique system it's a unique system
um let's start with that vmt let's start with that should we start with that i'll go i'll queue
that up yeah we got one minute i haven't been running any ads or anything i'm sure people are
being interrupted i i've been a horrible streamer today normally guys so i'll queue up the i'll i'll
run all the ads uh during our break so that you're not interrupted but at this point i i'm just
being lazy i'm sorry so let's go watch it's a unique system yeah we got we got to see that
but all right so i gotta get my clips thing running again i mean that was the best
i have beer burps in your ear
i you know what no i know you guys don't want to watch all the ads right
no one's gonna be able to see it anyway because the sound is going to be clipped out of the
laud i don't have clips they don't know i don't it's one of the things i lost on one of the vm
yeah because it's too hard to set up clips i am gonna eventually add that back but that was
the one of the main things that i lost all right you guys ready all right turn the music up
wait we got we got a few minutes a few seconds left
turn my music up all right so yep all right the promo promo's over so welcome back
um i'm still drinking beer and stuff so vmt reminded me of this great quote so we're talking
about unix and linux uh i you gotta know about this this is kind of a meme in the unix world
uh i'm sorry if you're watching this on youtube you have to go look it up because it can be muted
but there's the url here it comes here it comes
i know this
i know this
when's the last time you've ever seen anybody fly through the screen
it's a gooey i know it's a gooey it's not a unix system nature finds a way
it's a unix system look at him they're flying through directory trees in 3d
there's actually a quote there's actually a quote about this
there's there's a quote about this semester robot there's another there's a quote about this
semester robot i'll have to find it for you yeah
oh movie hackers oh yeah for sure yeah hackers yeah that's actually there's another reference
to the word to the movie hackers must be cali oh my god she's so happy
if you want to see a true unix system you got to go watch this and this is a this is now a
christmas tradition for for skill stacker for us on our real crop every every christmas
we watch the the unix system uh outline making computers more productive this is actually got
ken thompson in the gang and it is so funny it is so funny we kind of watch it watch watch how
long it takes him to talk about it he'll like watch how long it takes he's like reading a teleprompter
in 1974 and you can
watch the unusual breaks between the thing
so it's like totally cool
i'm trying to explain in this video yes yes they didn't need to write another program
um yeah and so i mean to check it out it's like
so there's denise richie there's denise richie i know they could they command the power was to
see a live for sure uh as it's right now so i don't know why i didn't i didn't stop the ads
today i it's not for me i don't know so there's ken thompson and denise richie this is the guy
invented c he died on the in the same week of steve jobs and nobody cared the guy invented c
nobody cared so anyway i'm gonna give you a link to this um i think this is mandatory viewing
personally i it's just supposed to be just crazy crazy crazy fun um but and i never i never saw
this this is the the whole unix um video i'm gonna put it here um i probably put a link to
its unix system too or let's go for that uh we got the war games saying let's go find the other one
um so wait is this the it's a unique something i know this this is the one share copy i'm sorry
for the ad so i'll get rid of all right so um and there he is there's ken thompson uh you
can still find ken thompson he talks about grep in here here's here's oh brian kerrigan sorry
duh that's not ken thompson that's is it ken thompson or kerrigan i can't remember i can't
remember which one it is yeah there we go kernel shell utilities so you have a whole shell
conversation here you go here you go so this is some fun stuff you can go watch i mean like
first week i had you watch the really sad erin schwarz documentary and maybe you can go watch this
now um and and stuff wait i lost the other link what happened with that it's a unique system
it's a unique system let's actually get used in the unique system shall we i know i've been
pumping this up but all right so let's do that let's say um it's a unix i mean come on this stuff
you gotta you gotta learn like the culture besides besides the the the boring stuff right
you gotta know the culture unix and linux is is is a lifestyle i'm stealing that from anton i mean
from me from leon leon uses says that tech is a lifestyle well i'm going to go so far as to say
is that unix and linux is a lifestyle it really is uh having a growing his unix beard he kind of is
yeah um and so let's do this um what is this called what is this one called let's get this
puts a proper name here so the shell the shell on the colonel so there's can uh i want to say this
can is that is that not can i was brian kerningan i keep forgetting kerningan and and can thompson
brian kerningan tem thompson actually thompson is the one in the video i'm pretty sure someone
correct me if i'm wrong but these are some of the most important people i mean you gotta know these
names if you're going to be in the in the unix linux culture so ken thompson brian kerningan
and denis richey are the most important people in the entire unix world if you don't believe me go
watch their videos of them talking at a conference ken thompson sitting there he works for google
uh he was one of the participants in the go thing and he gets a standing ovation just for being on
the board just for being on the panel and he's just sitting there he's all retired and everything
and people because they're so famous they're so famous yeah more probably more yeah so um
a tnt archives the unix operating system so i'm gonna put this in here i'm giving you a bunch
of links so stuff other stuff you can go watch it's really fun uh as quote unquote homework but
the homework here is of course just fun it's not really um you know serious in any way and so we'll
put that there and um so what's the difference between unix linux let's go ahead and just and
just cover that real quick since we're kind of on it and then we'll get into the installation and
then we can be all about that for the for the final hour excuse me so um what's the difference
between unix linux anybody want to take a stab at it uh practical applications are as their
inspiration design yes so what is the difference between as i drink my beer what what is the
difference between unix and linux ready go go type as fast as you can what is the difference
between unix and linux how many of you know that and you can guess if you want to guess that's fine
too one has an l that is the best explanation i've ever heard oh my god that is the best
actually you're my new favorite person one has an l
unix close source okay unix for surge is developed by bell labs is proprietary linux was largely
based on open source wow that's like a very complete exactly accurate answer i have no idea
that's also fine linux's open source fork of unix pretty true it's not a fork but yes uh i'm
a new but i don't know i'm a guru so guru is a kernel linux's support linux is modeled on minix
ooh there's somebody knows what's up uh yeah linux is actually based on minix which is what
linus torvalds um high school professor made and he kind of rudely said your minix sucks
i'm going to make it better don't believe me go read about it it's all written in the original
post for the first linux operating system if you want to go find that i'm going to give you a
challenge here it's kind of an easter egg challenge i turn my pommel off it's giving me a give me a
hard attack here i turn my pommel pommel pommel uh pommel in it i'm going to do pommel in it
and i'm going to do pommel start and then i'll give this our uh our 51 minutes okay so i got
51 minutes to cover whatever um so if you if you really want to do it i'm not kidding linux was
in your face uh to his professor from linus torvalds he's like i'm gonna make it better
so they took minix and made it better and minix was free minix was a free version of linux
uh a free sorry a free version of unix and per seat i think the price back in 1986 or something
was three thousand dollars a seat to use linux uh unix can you imagine that can you imagine paying
three thousand dollars a seat to use it at and t unix invented by bell labs cost three thousand
dollars a seat if i remember right and and and there were a bunch of academics and parameters
and everything no no no no no we gotta do something better so they made minix they made bsd
get ready to know about berkeley systems unix right bsd unix um yeah there's another good one
a c oh wow what'd you find there that's a good link that's a good link let's go look at that link
so there there have been um a lot of other things out there uh the department of computer science
yeah uh oh wow this is the original one and first of all i retired but not really
interesting okay so interesting stuff good stuff there thank you for all the links this is a
communal event here so thank you for that uh mac os is bsd it absolutely is in fact mac uh apple
apple computer paid good money to get themselves um certified as unix so this statement this is
very true somebody from the community told me about this the mac os is the largest unix distribution
in the world this is true mac is berkeley software distribution linus torwald famously said and you
can go find the link um i would never have made linux had i known about bsd now bsd didn't take off
like linux did in terms of like deployment and everything bsd is still used in apple products
is still used in routers is still used all over the place so um if you can kind of imagine
in your in your brain there that you have unix as the source right so you can watch the documentary
about that the unix operating system unix was the brainchild of brian kernighan kentompson
and denis richey this c language a lot of people don't know this i didn't know this until my 40s um
a lot of people don't know that the c language was created to make unix they made the first
version of unix in in assembly and they're like oh my god it was way too hard we have to make it
easier and so denis richey created the c language to make the second version of unix so the second
version of at&t unix was created in c and it was the first major operating system created in c
for which c was invented so you know people love to throw you know dirt on c or garbage and call it
garbage and everything and it does have problems but the reason it has problems is because it is so
close to the hardware because that's why it was designed it was designed to be close to the hardware
and if and if you want to go watch the linus torwald's uh video about c and why c is the only language
it really matters i strongly encourage it um because it's it's close to the hardware it's a
pain in the butt to compile it takes forever and the reason we're going to learn go is because
rob pike was a big c guy before who worked with denis richey and kentompson and kentompson actually
invented the go language because they wanted a language that would compile faster than c primarily
so that's a lot of information but that kind of will give you context for for all of the
stuff that we're going through um so the the short take on the history for unix and linux
and what's the difference unix was invented at at&t by at&t at bell labs and everything great
came out of bell labs it seems at the time um um brian cantrell from joyant who now is running
oxide computing who is a really hilarious person um and i'm going to i'm going to i'm going to link
to you uh brian cantrell my favorite my favorite video from brian cantrell brian brian is an
absolutely brilliant guy who is obsessed with computer languages and the origins of software
and he's just so entertaining and um this is a this this this uh video um has rust in the name
and that's whether we should redo the operating system and rust and his ultimate conclusion is
no but i am linking it to you because of its entertainment value and its historical accuracy
it's really really good at giving you a sense of what unix is why it's a thing why these languages
that were invented um you know is is it uh time to rewrite uh uh the os um os and rust and again he
talks it's it's just i i i really think he'll enjoy it because because he gives you a historical
like you know feel for the whole thing he talks about these languages he studied that were very
um conservative it's just you just have to watch it uh brian cantrell is one of my favorite people
on the planet um and he he's gone on to do great things so again the point here is to show you
what to learn and where to go to learn it and so that's why i'm doing this um uh three three k for
unix seat when it was publicly released and it's now 19.5 k are you kidding me oh my god to get an
actual seat all the urbaners swear by it they all want pure c code in their software yeah uh see
it was a short term sucker called b says history yes um uh let's raise the news group time for a
serious flame war mr tonamal yeah yeah and so um so let me recap so first unix was invented it was
invented at bill labs it was it was it was um the groundbreaking actually that was when the idea of
unix pipes and filters were invented were invented we're not going to cover those today we're going
to cover those when we start doing our bash scripts and our vi stuff and the main reason i want to
cover the idea of the unix philosophy which we're not going to talk about today is because you won't
really get it until you're starting to make a script and you'd be like oh i can take the output
from this program and chain it to another thing and then when you understand that you understand
immediately why neovim is useless because you can just use um unix filters and we'll get to that
so let's let's start installing some stuff here we've only got about an hour and a half left
since i did kind of go over because of the reinstall so um so what is gnu and who invented it i
talked about what richard stallman stallman invented all these tools uh the short answer for
what is gnu is that gnu replaced um all of the tools that were invented to go with unix uh ls for
listing files you know mv all those things they they got um alternatives that are now um in in
linux so you can read the man page about this you go to the bottom and you can see that it is
available in the choreotills from gnu software so they painstakingly mike parker david mckinsey who's
in most of these tools it painstakingly recreated the tools that were available under unix at three
thousand dollar a seat for free rewriting them from scratch um in in c and and then putting them
under the gnu gpl v3 um license and i've talked to you a little bit about licensing issues i don't
know if we'll ever actually dive into that during during here but if you want to ask i mean i've
done a lot of videos on licensing um we'll get into that more when we start reviewing you know
releasing our software and stuff and we have to pick a license so but i wanted you to see that in the
then the copyright statements here it still says that it's owned by the gnu project okay and um
so that's what gnu is gnu is that the organization which created by stolman which gave us all the
tools that run in the shell that replace what we normally would have had to pay proprietary cost
for for unix and that's what brought us gnu slash linux linux being the kernel because herd wasn't
ready at the time herd was the kernel they were trying to do it was using a different architecture
which was harder to deploy they eventually finished herd which is kind of a joke in the
community um but nobody uses it and and torvalds as linux became uh became the standard and now
the term linux has become the standard way to refer to the linux kernel and all of the other
stuff in the ecosystem that go with it um so what is gnu who invented it so that covers that
the basic system of the impact is management all right so it's time to start doing something
with our kernel that that with our with our system that I had to reinstall uh so here we are back
stolman was shocked that MIT stole the rights on lisp when he worked hard on the documentation and
the idea of real software was founded yes this is interesting grep was it was written overnight uh
I thought it was pretty crazy yeah did you see there actually uh kentompson does a whole thing
about grep and where it came from grep for those who don't know is a command for searching through
text files and and stuff uh we will it's one of the commands we will learn um and uh you'll
understand why it's called grep but there's a great video on it so as I'm chugging my beer
let's go ahead and jump in let me got a question here let's answer the question and then we'll
move it to um completing our installation of linux and then we'll start really getting into the
guts of this and I promise you we'll spend at least 60 minutes on this whether or not we're
going to go over time um because I want you to start having something to play with um even if
we don't get I don't I don't know if we're going to get a ssh setup today we might though it's not
too hard so but the problem with getting ssh setup is to do it right I have to talk about
security with you and we have to talk about certificates and all of that stuff and that's
probably a good hour conversation so we'll at least get the command line navigation going today
what are your thoughts about companies refusing to use a personal get a project on an employee
directly because of security reasons um so they asked them to copycode into their own source control
uh it doesn't play this access to continuing development on the code they had to get them um
that is a very interesting question uh I that is that's that's can I kane I'm I don't think that
that directly relates to the stuff that we're covering today um please remember that question
and ask me doing my my my when I go on my IRL walks I please I'm not trying to put you up
but we are doing boost stuff so you know I want to focus on stuff that's gonna this is all going
to YouTube and I want to stay on topic as as as diverse as I am on the topical thing I'm not
trying to put you up but I that is a really fantastic question and I don't want to lose it so
maybe post it in discord or ask me again during IRL time because I have really I actually am
going through that very thing right now and I have a lot of opinions I got to avoid talking about
right now okay so um so let's so we we we can go ahead and reboot it says here so we're going to go
ahead and we're going to reboot and for the next you know 20 40 minutes uh we're going to build out
our first Linux system and now we know what Linux is about where it came from why we're using the
terminal um I told you a little anecdote about um the person that's using the terminal uh and they
wanted to immediately learn that because it was so much easier to move files around uh than to you
know use the graphic user interface uh and we'll we'll we'll I'll show you how to do that using
the mv command today as well so we got our we're doing all of our installation this is what we did
last week um and this is just all the initialization of all the systems and everything
and we're going to stick with our kind of ugly console right now um if we get ssh set up we can
actually go through our terminal cleanup no one need fear that is just ssh host keys that is not
so there's my login all right so we have our login and my login is rtxrob and I'm going to type my
password which is password um and there we go so I got my my command line now it's not pretty right
there's no neo vim or any of that stuff so the first thing you want to do when you get in here
is um uh the first thing you want to do when you log into any new Linux system is sudo so here's a
command sudo means do this as root okay I'm going to put a thing here commands used I'm going to
put commands using a post section here uh because you kind of need to you know have these right so
we're going to do sudo uh uh do it as root uh superuser okay and there's actually a really great
joke about sudo I think it's probably worth bringing up so that you can be in the know
I'd like to teach people the culture of the of the tech industry as well as as the tech of it
I mean a lot of teachers are not going to go into that for you but if you don't know about xkcd xkcd
is is is like the standard source of of uh of coming one of uh the guys that I mentor
made as one of his projects the xkcd um clip uh extractor um and he's still going strong
that guy who does xkcd is still going strong with it uh that's where I don't keep me out of the
exactly I know there's like so many fun things here but there is a specific xkcd about sudo
and I actually have a t-shirt that doesn't fit me anymore I gave it to my son uh that I love um
and I forgot to search here so I'm gonna go find it where's the search thing I can't find it we
didn't have a search oh my god oh my god I'm gonna have to just do a general search
the actually he made a he made a uh a scraper he made a program that scrapes all the xkcd stuff
so that he can search through them I don't I didn't realize there's not an actual search
engine here it's kind of kind of blame did you did you find it oh you all found it okay good
let's just use yours yeah there we go so make me a sandwich what make yourself sudo make me a
sandwich okay so this is not a t-shirt you can get this t-shirt if you want speaking to t-shirts
we're gonna have skill stack IO t-shirts that have on the back um um and I'll zoom in uh yeah I'm
doing product placement oh my god I am such a bad person speaking to t-shirts so I have thousands
of these skillset IO t-shirts left over from skill stack if you want one let me know in the
discord and we'll figure out and get you one on the back it says learn code save the world skill
stack that IO um this is swag I have left over from skill stack I need to get rid of so um I just
why not tell you about that um and so sudo is please yes so what does the binary say at the
binary I'm not going to tell you it's actually part of a it's actually part of an easter egg
it's part of an easter egg which I have yet to finish doing but I'm not going to tell you
my skill stack shirts are the first step in um my van I have to figure out what to do because
my van had another clue on it I had this like really big easter egg treasure hunt setup for
skill stack IO and a lot of those pieces are not there but I plan on putting them all back
and it's an educational easter hunt that has a lot of binary it's like doing mr robot you know
quests and stuff like that so that stuff's all coming I just wanted to mention that um
but the way you like an arg yes all right so um the internal source code doesn't
come from working get a project so you can't work it yes so unix so to answer the question
about unix and linux so unix came from AT&T labs and a bunch of other side things that were like
unix unix like they say bsd was included minix was included and minix uh was what the professor
linus roalds college professor made and linux i'm going to do it better so he made linux which
was an improvement on minix and so then you have linux and yet bsd being invented in kind of different
places in the world uh simultaneously because of the internet and they both continue to be used
and bsd tends to be used for highly secure things so they tend to not want to make a lot of changes
to that uh that and there's still a huge bsd unix following me I told you about apple linux
I'm sorry apple unix uh using it um some of the commands however different linux however won the
server war and became the basis for cloud native computing and now you have red hat and you have
susie and you have open bsd and all the different kinds and I'm not going to go into the weeds on
that you can easily do a search for uh linux pedigree and it will show you um the um sorry that's
not it uh images it will show you there's like many many things that will show you all the
different places about where linux came from and how we ended up getting it so that's that's where we
are and and I'll let you look at that um you know you have the family trees you have slack wear
and it's important that you go through this and this is some kind of hardware uh it's kind of
homework because people will make references to old versions of linux as jokes oh I only use slack
wear you know and you might want to know where that fits and why that joke is funny um some people
say they only use manjaro or arch or linux or what's the difference in mandrake you know where
did cali linux come from you know and you know so that culturally you might want to look up that
stuff but it's not real gen 2 what's the difference between gen 2 and the lts linux from scratch lfs
is a book that tells you how to make your own linux um so that's like a whirlwind tour of all
the linux distros and that's all that i'm going to cover about that we're now going to focus on
the ubuntu server distro which is one of the three main distros that are used by enterprise um and
they are ubuntu server red hat or some derivative of red hat and susie linux those are the only
operating systems that matter to get a job um arch in and all the other flavors are cool and all
but they are not central to getting a job and maintaining a job you have to learn one of those
particularly red hat and ubuntu if you want to consider yourself um a linux professional so
let's go ahead and do the installation so we've got sudo here uh gen 2 is the one here gen 2 is
a linux distro where you have to compile everything and everybody thinks it's really cool until they
started and then they compile everything and like oh my god what did i what have i done and then they
never want to use it again am i wrong all right so so here we go we're going to go ahead and do our
first command uh do we arch get you a job of valve and that's it i'm not saying don't use arch just
don't learn it first don't learn i don't think you know by the way most of the these days and we're
going to get to package management next we're we're going to make it there today most of these
linux distributions these days are distinguished it used to be that linux distributions were
distributed by what they look like their graphic interface but not so much anymore mostly these
days linux distributions are distinguished by their package manager and that's what we're about to use
okay so the most important package manager for every linux person to lose is apt um and i don't
even remember what it stands for but apt is the baseline package manager for debian packages uh
that is debian so ubuntu is debian which is distro and and that has become the basis for all
desktop linux systems that matter now we're not even going to include the arch ecosystem in this
in right now arch has its own package manager which is entirely different and very notably
independent from any kind of vetting or everything so it makes it kind of like the wild wild west and
that's why arch will never be in the enterprise because it's too dangerous it's just too dangerous
but apt advanced persistence right so we're going to use advanced packaging tool uh i don't know red
hat uses apt red hat has its own thing called rpm and i actually wrote several apms uh rpms
but if you're if you want to be a linux administrator these days you need to learn uh red hat and you
need to learn the package manager for red hat and you need to learn ubuntu those are really really
really key and uh there's nothing wrong with you learning arch and all the other crazy crazy side
you know quests you know cali linux which technically is neither uh debian nor red hat it's
its own thing it actually comes from uh backdoor which was um nopix which was originally the first
the linux distribution on a cd um but you know it's it's irrelevant unless you're doing security
cali is like primary for security because it bundles everything in there and frankly if you're
going to do security you might be able to get away with doing arch uh or you know parrot or black arch
or any of these other distros but we are going to focus on ubuntu server for this particular
first boost and then i'm going to leave it as an exercise up to you to learn the other linux
distros after this um if we tried to cover every linux distro um and every variation on it right
now we would be here you know all year we wouldn't even get it to anything um so we're just going to
cover apt uh most of the the enterprise desktop distros that are allowed uh specifically ubuntu
desktop uh are based on apt so the first thing we have to do is a sudo apt update and that will
ask me for my password and this is going to go out and it's going to say uh it's going to get all
the latest lists of that um of that you know this stuff that comes from the internet to tell it like
what servers do i need to look at and then the next thing we need to do is sudo apt upgrade
now this is not something to do lightly i'm going to say it right now um and you can do dash y if
you don't want to do the names but this is actually going to take your linux distro and
take it to the latest level and you want to do that for security reasons and a number of other reasons
um but you don't want to do that lightly because you may actually break your linux distribution
if you're doing this later like after the first one because when you log in every time it's going
to tell you hey you're behind you need to catch up you might want to take a snapshot another
reason to use a virtual machine right you might want to take a snapshot right before that and
then do the command line upgrade and it will add in all the latest stuff and you do want to keep
your system upgraded otherwise you're going to get hacked particularly since you're bridged
that means that your vm is just like any other computer on your wi-fi and if somebody breaks
into your wi-fi they can break into your computer and and they could do whatever and it's actually
really really easy to break into wi-fi wi-fi wi-fi hacking is like trivial it's just super trivial
because it's all flying over the air all the time so you never ever really want to trust your wi-fi
password unfortunately um i mean you can do things to kind of obfuscate it but if a hacker
really wants to find you they will scan you out they'll find you and they'll crack that because
they can they can take your authentication they can save it to a file and they can brute force
that file all night long on their own computer until they find the password and they come back
and walk into your wi-fi so if you truly want a secure network at home we haven't talked about
networking at all but if you truly want a secure setup at home you need to be hardlined and that's
how i am i'm hardline this system that i'm on right now that i stream from is hardlined right
in there's no way you could hack it i mean i'm not it's not a challenge i mean there's probably
many vulnerabilities you could hit fishing or different thing but but it's not directly accessible
with the wi-fi now i have a ton of other devices on this network that are accessible over the wi-fi
that could get hacked that would give you access to to come try to hack this from internal and my
network but if you want a secure network use a hardline that means use ethernet and we haven't
talked about networking yet i'm getting ahead of myself but i wanted to show you that which services
should be restarted i don't really know so i'm going to go ahead and click okay and accept the defaults
here um it's it's trying to do this thing now we have guests are running so hyperbolic human
binaries okay so so that's all so what are the two commands that we did there uh brute force
and wpsk yeah app versus app get we're going to talk about app versus app get um the short answer on
the app versus app get let's actually put a thing here uh about that let's see uh uh when to use
app versus uh app get so the short answer is you should use app get anytime you're writing a script
okay you should use app get if you're writing a script and and actually if you want to know
more about that you can type man apt and and i'm doing this from the terminal but because it's
prettier but you can do this is just as equally well from your uh console you can say man apt get
and it'll tell you it'll say right here app get is the command line for handling packages
and maybe consider for users back end or other tooling um and less blah blah blah all right but
watch this if you do man apt it will show you a different thing it says apt provides a high level
command line interface for the package management system it is intended as an end user interface
and enables some options better suited for this is super important better suited for interactive
usage by default compared to more specialized app tools like apt get and apt cache and here comes a
warning much like apt itself its man page is intended as an end user interface and as such
only mentions the most used commands and options partly not to duplicate information and i there
is a warning down here i thought that was it i guess not um okay here we go down here under
script usage and differences again i how did i get here i did man apt okay man apt so it says
the app should you just continue uh damon using outdated library should i continue
i would do any upgrades that it prompts you to do um it'll be okay for the sake of the boost but
but at the end of the day you probably want to upgrade everything you possibly can um the app
command line is designed for as an end user tool and it may change behavior between versions this is
super important so the question is what's the difference between apt and apt-get and while it
tries to not break backward compatibility this is not guaranteed either if it change seems beneficial
for interactive users in other words all of the features of apt are available in dedicated apt
tools like apt-get and apt-cache apt just changes the default value of some options uh so and here
is the kicker you should prefer using these commands apt-get and apt-cache uh in your scripts
as they are backward compatible as much as possible shorts tldr never use apt in a script
use apt-get in the script and use apt from the command line that is one of the least
understood things out there i misunderstood that for a very long time and that is super
important and there it is in the man page okay so so if you are going to codify something
in a script that's going to be used for uh any amount of time i mean there's nothing stopping you
from putting apt in a script uh if it's just a one-off you know whatever from the command line
you could probably do it but if you want the script to live on you should get in the habit of
using apt-get and apt-cache instead of apt apt is designed for interactive use and it's going to
get changed all the time so if you want your scripts or whatever you make that uses apt-get
you know make sure you do that for for um sustainability long term okay so i'm glad somebody
asked that question that's a really important question um and and now we have it kind of in
our in our boost notes here okay um let's uh apt update and apt upgrade yes you can do that too
it's another cool way to do that uh the reason i didn't do that uh x is because you know they don't
know about the and signed and yet we're going to do that in our bash in our bash time uh in case
somebody was wondering what's up with that the and and says do the next command if the first
command succeeded but we haven't got there yet all right so um really simple and essential
shell commands so our system should be totally up to date now okay and and now we need to learn
the absolute basic commands like the most basic commands some of these are already covered uh
but now is the time when you need to start taking notes and writing things down okay and i'm going
to cover the ones um for dealing with the basics of the file system so command use we use apt uh
uh use uh interactively only uh use uh apt get uh in the scripts okay and then we have um
and actually we did um we did apt update uh and let's see update all the sources uh for packages
we did which one did we do we did apt uh upgrade and that will um upgrade uh all packages uh
two latest versions uh so you know as i said make sure that you take a snapshot before you
this is our first image so we don't really care but later on if you do i i cannot tell you how many
times i have totally borked my system by doing an apt upgrade um and i so one another reason to use a
vm is you can snapshot that and then do it if something goes bad you still have everything
you're not you know stuck in a water dead so we've got that um so sudo um let me go ahead and put
these here so people don't forget sudo what's up with sudo um we're not quite ready to mess around
with sudo yet because we haven't in the urn vi and we're going to try to next week uh we're going to
learn ssh in vi unless we get to ssh tonight um okay so the next commands we need to do
basic commands now some of these commands i covered already i'm going to cover them again
okay so ls is list the files list the files uh in the in the in the current uh directory now if
you don't provide anything else that's what it's going to do um so do ls let me see there's nothing
here if you do ls dash al we did that last week that lists all the files uh actually let me show
you the man page again i i these commands are getting repeated this week but i think it's important
um uh show uh manual information about a command uh about a command there is help and info but we're
not going to cover those yet so um and then we could say uh ls dash al uh list all the files
including uh hidden hidden uh beginning with a dot so that's going to show you all the files
on a bare machine on a on a brown machine apps upgrade is probably fine if you're talking about
on hardware yeah what is that you want to talk about the prompt that's a good thing so yeah let's
do that thank you for that question um uh let's do that this is just how commands uh uh what uh do
the characters in the prompt mean all right let's cover that really quick all right so the characters
in the prompt um now my prompt as you can see and i'm going to show you how to customize your prompts
to get this nice pretty prompt that shows you all this stuff but but it's important you understand
the basic prompt because if you get on any system you might not know what's there okay so let's talk
about that so um the the i can't select it because it's you know it's it's kind of a thing um i wonder
if i could get a root and see if it would do that nope that's not happening um
i'm trying to i'm trying to well okay so the first part of the prompt the rdbx rob is the
current user right and then there's an at sign which and by the way this is where email came from
so email addresses were so you know i'll give you a short story on an email thing
so once upon a time all of these different you know Linux Unix systems existed in tandem
and generally speaking so like in a university you'd have like thousands of people sharing
a same system and that's where the username came from and back in the day there was limited
to eight characters um yeah muds and stuff so you know it's it's probably important for you
to pick a name that's less than uh eight characters and and that's for for for historical reasons
this is why ben is so short this is why user is usr is why password is pas swd because back in
the original day um everything had to be under eight characters everything and that was a long
time ago but that kind of still perpetuates through and so the user names are generally
shorter they don't have to be but they they get me so the first part of the prompt is by default is
usually the user and then it's at and then it's and then it's the name of the host so and you
can actually look up the host with host name uh and if you want to run the command um so let me
put that in here so the name of the host is host name uh display name of host and we'll get into
you know how you can look at that more i mean the host name is actually stored in a file called
etsy host uh no i got that wrong
um host's name there it is so it's in a file you can't just change it but and then it's also
an etsy host and we'll talk about the file system eventually we're not going to talk about right
now we have to wait until we talk about networking until we can talk about all these etsy files right
we are going to go through what do all the different directories mean and what goes in
there and stuff uh but not right now okay so um so we have the first is username and then we have
host and we have the colon so everything after that is the path and um the l means long listing
and the a means everything yeah so the l means the long listing so if you just do an ls like that
doesn't show anything ls-a it shows you the hidden files so that's all the files including hidden
hidden files begin with a dot and if you do ls-l it's long listing but since there's nothing there
so ls-la says show me everything including the hidden files in long form and that shows you a
bunch of data that we're going to go through either today or later i don't i don't want to get
into permissions but you can probably already see the rwx that's where my name comes from
and we're we're going to get there okay so let's stick with a prompt for a bit so the first part
is the username uh the at is what host we're on and then we have the host name and and then you
have the colon and then everything after the colon is the uh path it's the current path to where you
are in the file system and now that's probably a good lead in to well what is a file system and what
is that blah blah blah blah so and then the command we already talked about last week is pwd that stands
for print working directory so a directory is um strictly speaking it's a table that contains
all of the things that are in that directory and then the name is actually an inode uh in
unix so the unix that the name is an inode and that's where the term inode comes from um so i'm
going to go ahead and put a reference to this really quick um uh yeah and the tilde means home
so it's just a shortcut for home so that's that's all that's up with that you don't need to stress
about that um okay so and and we're kind of getting into the file system thing so i think we can cover
that uh with the character from me okay so uh what is an inode so an inode is an entry in the
directory and the reason i have to call it a directory instead of saying well isn't it just a
file so uh why everything is just a file so and you know what if we don't cover anything else but
this today uh i feel like that would be good and we can start with secure shell next time uh the
secure shell we really have to cover well so let's let's cover the file system stuff today we got 14
minutes we can cover that um so when people use unix um the very common thing to hear out there is
everything is just a file and this is a big part of the way unix looks at the world um and it's not
just unix everything that's been based on any kind of even like antique kernels from windows um so
what is an inode an inode is an entry and a table and what is a table a table is like you can imagine
there being a big file and it having like a key name and then something that it points to you know
like a key value pair kind of combo you know just a really simple table you know you can look something
up and um so a directory strictly speaking is a table of inodes and those inodes have names
and there's different types of inodes and one of the inode types is a file a plain old text file
right another inode type is a directory or another table directory itself is an inode and
it's important that you recognize the term inode if anybody's done any formal computer science
you may recognize the term node from and this is where Node.js gets its name from uh the the the
data structure called a rooted node tree and that's what a directory is a directory is a rooted
node tree um and and if you really care about data science i mean i'm sorry data structures
and algorithms pay attention when they talk about a rooted node tree because that's what an inoded
i stands for information and a node means it's just a node and it's just huge huge rooted node tree
and and you can kind of look at that right so what is the root uh and by the way they use the term
root what is the root directory is slash so we'll learn the cd stands for change directory so go to
cd to slash and that will change us into the root directory and if you wanted to you could call that
the root inode in the root you know table um and i you don't have to use those formal terms but
i want you to understand that when people say everything is just a file and that includes
devices if i plug a usb stick in here it'll show up and it'll look like a file it's not a file it's
an inode it's an inode of type block data device you know and so all of these different inodes have
different types and and stuff right and where you are at any moment when you log in if you see the if
you see these just with the space a lot of people don't know this actually for years i was always
typing you know typing the tilde which is kind of how to type and thinking it would take me to home
well what's home home is slash home slash art of x rob that's where i live all my stuff lives there
on the windows system it's equivalent of going into your home directory on windows right um
but and that's that's where you can put all your stuff and you can imagine yourself being on a system
with thousands of users you're not but if you were you would all have different home directories
and you would not be able to see each other's stuff depending on how they set up permissions
which we probably won't be able to cover today but that's that's what's up with that that's what's
up with the permission system so what i want to understand is the directory structure and how
that works right now most of you probably already understand this you've already played around with
directory structures it's just a a textual representation of a path that is the same thing
now i can't show you that here but i can kind of give you a simulation if i if i go to this pc
right i am now in the root of the c drive now this is a same thing as a directory structure just in
windows right so i can click on the c drive and i can see all the stuff that's here so then we
have this is all the stuff that's in the root directory here you know that there's no there's
no home or anything because this is windows but for the sake of you know playing around we could go
to users and then you'll see hey there's my users rob right and this is actually the the equivalent
of tilde on a window system so let me show you if i if i am on a window system it's actually
different in in in mac so if you're on a mac and you go on your terminal in a mac um we we need to
do this terminal installation hopefully you guys will get that installed uh i'll set up for the
iterm to root to uh conversation next week too so anyway i can ssh into windows again
and you can see here that it tells me so here's our prompt this is a windows prompt but it's
again it's the shell it's the interactive command line shell uh in this case i'm running something
called git bash uh which is the same bash shell that linux uses it's just running for windows so that's
familiar to me um it doesn't work in darwin so but see here's how you have your path right now
directory paths and windows use back slashes and so forward slashes which is a pain in the butt
but they do but as you can see users home is my home directory on windows so and and there's a
different location on mac um and all of that by the way can usually be uh seen in the uh home
environment variable which we have not learned yet but but i just wanted you to see that you can
actually get that consistently no matter where you are so now i'm back on linux and i can do it home
and i can see that i have i have my home directory all right um oh totally i use git bash all the
time i i much prefer that over to visual too for reasons i get into uh during an irl stream ask
me why i use git bash instead of nwc2 and i'll be happy to explain it to you um i think i think
wc2 is a disaster i i i've been burned by so bad but i can't tell you um uh a little bit of beer
to wash down the the throat here um no you don't i don't think you have to say at least you don't
want to get bash i think guess bash is the one setting it to be fair uh how do you know you're
using git bash um well you'd have to look for an environment variable it would tell you what
shell you're using yeah let me try uh let's kind of outscope but i'll go ahead and answer that one
so um oh my oh my shell's empty that's interesting i don't know we'll have to go look at that we'll
look at another time that's not kind of relevant here they're asking about stuff related to all
these shell programs these interactive programs and uh i was going back and forth between one on
windows and you know the one that's running on linux we haven't talked about the shell yet but
the program that's running right now and we're going to get really into this when we learn how
to code in bash um the main thing i want you to take away from this is that you are writing code
every time you execute a command i'm gonna say that again every time you execute q to command
you are writing code you're writing one line one statement of code after another one at a time
and if you take when we when we get into bash programming if you take those exact same lines
uh what do we do for daemon's which services should we restart just i just accepted all of them
i just accepted all of them i didn't i just took those defaults so if you take all of those commands
that we're executing from the command line interactively and if you put those exact same
words ls ls dash a pwd if you put those into a file you now have a script so we we're gonna get
the scripting in a couple weeks here where i mean really you're gonna you're already scripting
the point i'm trying to make is when you use bash interactively the way we're doing
you are already coding and so learning how to write scripts is just a matter of taking your
command line stuff and putting it into a file that's it that's scripting that's basic Linux
scripting it's also the reason that i believe very strongly that the first thing you should learn
to code in is bash because you're already doing it and we're going to revisit that point later
but uh and that's why i don't teach python anymore as a first language because
python is an extra language you have to learn you might as well just learn the language you
already have to use every day when you use Linux from the command line because it's a language
okay so so ls and then pwd pwd tells you what directory we're in so let's make sure we have that
in our boost notes um so we have pwd uh print working directory i use that because sometimes
i feel lost you know and when you're using the command line especially if you've been using a
gooey user a lot you might come to find that um the bash is interpreted yes we'll talk about
interpretive versus compiled when we get to bash in a couple weeks you know we'll talk about that
that's actually why we're learning bash and go we're learning one interpreted language
and one compiled language and then it's up to you to learn anything you want to after that
but that's that's why we're doing that so we you get a you get an example of an interpretive
language and why it's met why they're useful and you get an example of a of a compiled language
so technically speaking we're supposed to end at four um but i'm going to finish this conversation
about uh these navigation commands and then we'll we'll go from there all right so the next um step
is we did pwd right and we talked about cd so let's put that in our notes again i'm taking the time
to do what you have to do so you can take time to put it in your notes you can look at my notes
but i strongly encourage you because of active recall to put stuff in your own notes however you
want to do it if you want to make a per a single zelocaster for you want to make a huge markdown
file however it works best for you uh for now and and again stay simple people i did talk
about zelocaster last week but if that turns out to be too much for you it's too much of a hassle
and you can't go look things up just put everything in a file and call it a day now you don't know how
to use vi yet so i imagine right now you are in fact i probably should have done that you're probably
taking notes um some other way in a text file if you're using simple text that's fine uh i suggest
just going to github and using their text editor for now because then you'll have them save for
automatically you can keep going back to it but we're going to learn vi hopefully next week
hopefully next week we'll get to vi and we're just going to cover vi basics so let's take
us about 30 minutes people think vi is a pain in the butt to learn it's actually not um if you're
going to if you're going to do that okay so um uh so so here we go we've got cd that means change
current uh directory all right and keep in mind that you can't put that in a script which we'll
talk about later um let's see if it's between posix and bash we'll talk about that on the posix
and when we do the bash scripting in two weeks okay that's a great great question uh the short
answer is posix is based on at&t standard that existed has existed for years and bash improved
upon that and became the default for linux bash also fixed the number of security holes in the
posix shell so i prefer people use bash but we'll hit that really big in two weeks when we do bash
programming okay um so let's go back here and we did cd what else we got um so if i want to cd uh
let's p let's see ah ls-la we did that to look at everything um as you can see the directories
so let's talk about this for a second um uh what is this programming is the code we have to
make directory in touch we're not going to do any directory creation right now we probably should
but let's let's let's talk about permissions for a second okay um and because we need to do the
longlisting thing so let's let's talk about that um uh what uh what are unix up linux permissions
okay and we're going to revisit this but then let's talk about this so so from the longlisting
the ls-la let's let's actually break this down this is super important that you understand this
okay um and we're probably going to go over about 20 minutes today so if anybody has anything they
need to you know do uh that's because i had to reinstall the os um uh i know all my secrets what
secrets oh my sudo thanks uh okay so the cd space takes takes you back to your home directory yes
if you do cd by itself um i mean let's put that in the list so actually change uh so let's
do change dr right let's do cd foo so change uh into the foo directory okay if you had a foo
directory um if you do cd space uh change back um change back to the home directory
and this is actually shorter um you can either do cd or you can do cd uh the cd tilde um
and that's something i learned uh only within the last couple years is that i could just do
cd and not have to worry about typing the tilde uh right now well we're doing the beginner boost
right now all right so um so next we're going to go to so we've got cd into foo if you want to go
into foo um so we're going to do another couple things so if you want to go into the parent
directory uh change into the parent's directory okay and you can do it with a dot dot or dot dot
slash um you could um you could see i mean you could even do this you could do cd dot dot slash
dot dot you say say uh change into the parent uh of the parent's directory and i'm just going to
write these all out longhand so you guys can kind of get a sense of it um we got to know cwpw
in ls i mean these are commands that you're using constantly mv is probably none of these are just
for navigating the system none of these so far have changed the system in any way and we're going
to cover the ones that change the system as well today all right we're going to make new files and
we're going to do that kind of thing but i want you to understand that these are just for getting
around these are the ways of getting around um uh so um and there's really um you know the dot i
don't know how to say this but um uh let's do this thing what does uh dot and dot dot uh mean
okay so the dot means the current working directory and the dot dot means the parent
relative directory uh okay to the to the um relative parent directory uh yeah relative parent
directory of the parent so this is super important that you understand this um yeah we're going to
boost it we're going to cd yeah we're definitely going to do dash um that's super important so
cd dash you're going to do it all the time and that says change back uh change to uh pre see
change to previous uh directory so let's let's let's watch that one in business it's kind of fun to
watch this i'm going to do this on my own screen because it's a bit easier to read so if i were to
go into the requirements directory cd requirements right and then i cd dash it'll take me back out
so pwd so cd dash cd dash cd dash it goes back and forth you'll use that a lot um there's another
command you can use popd and stuff like that i'm we're not going to get into that if you know about
it i just want you to understand that i'm skipping on a purpose um there's it's it's a way of like
stacking up how many directories in your history you've been in and then unpopping them back and
we're not going to do that because it's more of a scripting thing just cd dash is usually uh relevant
enough for most of the things push d and pop d yeah uh people like push d and pop d um i don't uh i
don't want to talk about push d and pop d right now though um push d and pop d are a way of creating
a stack and i think we need to cover what a stack is before we talk about that and i'd rather not
do that until we get into coding but when we do coding when we do batch coding we'll do push d and
pop d okay is that is that fair um because i i think it's important i just don't think that
they're relevant to the to the absolute beginner yet um uh does that make sense okay so uh and they
are very nice i i think they're they're very particularly if you've got like a very deep
stack that you've gone into and you need to remember where you were um and i think i like
talking about them because they're a good justification of learning what a stack and a queue
are uh in terms of in terms of data sources between we haven't talked about all right so this is just
for the absolute beginners out there this is how you get around uh this is what you know um if you
want to change the root directory um cd slash uh change uh to uh the root uh directory okay
so let's talk about Linux and use permissions and we'll be done for the day we're kind of over our
pomo uh i tell you what i'll give myself 15 minutes for the pomo uh pomo start let's do 20 minutes
so 20 minutes extra after this i'll be taking a break and then i'll be doing some irl streaming
and uh if anybody wants to ask questions during the irl streaming you know you're welcome to do
that um and i'll be chopping this video out and and publishing it of course uh within 24 hours
okay so let's give myself 20 minutes for this and let's talk about permissions now
i mean we can still use this i'm sorry that we we didn't get to terminal stuff
if you've got the terminal installed so let me give you some homework next week get make sure
make absolutely sure that you have the terminal installed uh whether it's iterm2 or or windows
terminal and next week we're going to assume you have those installed and there's not really
any point in me walking you through the installation of those two pieces of software it's kind of
assumed you know how to install software on your windows or mac system um and and we'll assume that
you know it and then i'll give you the configuration uh do we go until five
do we go one till five do we that's fantastic yeah we have another hour oh my god thank you so much
thank you so much i thought we're done thank you for keeping me on track all right let's do this um
that's great we can do all the permissions then so let's do that so how how long is that
so we have another another 50 was it 57 minutes pomo start um 50 4054 minutes that's great okay
yes we are done yeah um yeah i because i i want to go until i i i feel i don't want to
overdo it though i don't want to blow out your time no we're not coming till seven
if you guys didn't take a break let's do it um i already drank my beer and now i have to pee
so let's let's take a let's take a 10 minute break all right and then we'll go through permissions
and we'll do creating files we'll do permissions creating files and maybe maybe open ssh
maybe open ssh just enough to get it so you can use your terminal okay let's let's let's try that
should we try that i'm going to tell what i'm gonna take forever uh here comes the music ready go
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
you
all right i think we can go back at it um we got 53 minutes or so
i'm actually going to reset the promo timer because we get
i don't want to i don't want to waste that time so we get 53 minutes or 38 seconds
of uninterrupted add time of time thanks to the the the message you guys y'all just saw um
yeah the discord server yep there's a discord there's a bunch of stuff here
so if anybody's new all that stuff is in the abouts and everything the rest of the community
can help you find find your way we had it all this week i got to say i i i put a post in the
discord i was very grateful there's a lot of people helping each other out in there and i just
think that's fantastic thank you so much for all that that's you know that's really how learning
happens is when a community gets behind it helps each other out it's not just about you know any
one person all right so um there's a number of things we can still cover here
we need to go back to the sudo stuff i realized that we we haven't covered how to install
software and i think that that is super important um so how do i install software
and when it comes on linux it's unlike anything you may have known in the past so
there's no you know double clickable thing i mean linux one two in particular is trying
really hard popo s they're trying really hard to make it so you can just double click on a thing
and have it work and that's where you might hear about things like snap and and um what is it app
pack and packages there's there's a number of technologies that they're trying to do with
the package so first of all what is a package um a package is a some amount of software
that has been packaged up for install now you know if you're on windows you might download a program
and you get a file that ends in dot msi and that file um we're going to do installation and then
we're going to do file system we'll come back to that so when you install that when you double
click on the msi it runs an interactive gooey thing and it asks you to install it everything
i mean mac you know you download a file and usually mounts a a drive it actually makes
a disk drive on your system a virtual disk drive and you copy the file over by dragging it
those are the gooey ways of installing things but um some of you might actually be familiar
with uh bru on mac which if you're using the command line you probably already know about it
but these are what are called in chocolatey on windows these are called um command line package
managers as with their cold so a command line package manager is a way to install and remove
and update software from the command line and it's way more powerful because it can be scripted
flatpack snap yeah map images those are all versions so you can install um stuff much more
easily and i don't know if you saw we haven't done any software installation yet on our new system
and i want to do that now before we leave that topic i'm kind of was reminded of it during the break
so let's do that let's install um uh something that will give you uh kind of a pretty view of
everything on your computer so this is something called neofetch it's a community tool that shows
you you know it gives you kind of an ascii art version of the logo it's not going to look nearly
as pretty on your console for now and i promise we're going to get to the terminal eventually
um but you know let's go ahead and put it on there you can still use it after you get ascii
installed um and it shows you that same kind of thing so this is the current account here's your
machine name so this is anton it's a different vm that i use for work um and streaming it tells you
what your operating system is it tells you you're running virtual box it tells you what kind of
linux kernel you're using it tells you your uptime that means you've been up to sign that's pretty
impressive this is a windows system and it's been running for eight days without a reboot and i i mean
i've got up to like 30 days on windows without rebooting using a vm and you know people love to
you know say bad things about windows and i'm among them but but to tell you the truth windows
lately uh as long as you don't do anything really crazy with it um is as stable as popo s in fact
when i've been i've been playing overwatch and dota and all the kinds of stuff while the vm is
still running and i have not crashed i've not crashed once i want to popo west i crashed at
least twice three times a week uh in the last version that's why i got off of popo west so um
so this is this is truly what i believe in i i truly believe the best way to get
the best out of your linux experience is to run it in a vm uh for multiple reasons we talked about
those last week but you can save it you can back it up you can you know snapshot it if you're afraid
of the upgrade you can copy that snapshot file to another system entirely in fact you can host it
into aws or in the cloud or someplace that's not stuff that you can do uh on linux now you can
run a virtual box um on linux as a desktop if you want to do that but i would rather have a reliable
dependent uh gaming experience um on windows and then still have all of the great stuff from my true
linux command line which you're not going to get in wsl 2 and other things so just to recap
of why we're doing it this way so we have our uptime here we have the packages this shows me
how many packages they have installed we talk about what a software package is we have seven
snap packages you might be wondering well what's up with the dpkg so um adabian package is the actual
name of the file type that's installed when you use apt and in snap the files are snap files
so you have apt which is the package manager and then you have the package format which is d
package right if you're doing a red hat you'd have you know like rpm uh would be the package type
you know uh and um yum uh or something else would be the package manager so whenever you're
dealing with software this way you're talking you're usually talking about a format for the package
that's a single file which is what makes it so nice um usually this is a tarball um that's been
kind of magically altered and and then that one you know package is the software uh which can be
checked out you know bionarily so that it's whether it's been tampered with and everything
and then that thing gets downloaded and then the package manager is making sure that you got the
latest and it installs it and everything and it just puts that thing into your system and can remove
it nice and cleanly and that's really important that you understand that particularly when we go
into kubernetes land and we start talking about things like helm which claims to be a package
manager that does not do that it doesn't cleanly uninstall and install stuff there's like a bunch
of messy things you have to do uh with the configuration and looking at it and stuff
so a pack a true package manager a true software package manager has a few things in common uh one
of them is that you can download stuff you can query stuff you can compare its its dependencies
to other packages you can install stuff you can remove stuff and by the way when you install a
package if it depends on other packages it'll say fine let's go get those two so it'll like
trickle down and it'll grab all the other packages that are needed and then it'll bring those in
all right so let's actually do some package management let's do our first uh package installation
um i i'm not i strongly uh pose um uh you can use gpa password there is lots of things but we're
gonna talk about that right now uh do bootings out further in my opinion um it's just it's killed
too many people shell uh so there's the remember we talked about the shell right so the interactive
shell program that i'm using is bash we we discussed how the shell is more than just one program
and that word shell gets used in a lot of different ways in this case i'm running bash
what tells me what reason uh resolution is just prefer it tells me what my terminal type is
and i talked about everything's just a file right well here we have a file path to
apparently a file that's named a number right well that is an inode we talked about inodes earlier
today um that is an inode that points to the terminal and um it is it doesn't really exist
the kernel uses that as a way to interface to those and we're going to get when we go through
the device tree and talk about the different organization like where things live on the on
your computer on your Linux computer we'll talk about devices in deep in depth if you're hacking
this is a great thing to understand it's also a great place to hide stuff so the hacker that i
caught and reported set up a root kit in my device tree so that he made it look like they
made it look like it was a device and i was able to catch it because i was running my own version
of tripwire on the system and someday i'll tell you about how to do that not in the boost you have
to watch the other thing but if you want to learn how to make your own security systems to catch any
hacker on planet earth they won't expect it because they won't plan on it i can show you how to do that
uh so cpu intel i7 this is my my cpu and my speed uh yeah people dual boot for for people love
talking about how reliable their dual booting uh history are until uh some beginner like blows
up and then like oh it sucks to be you you must not be doing it right that's not my experience
and i i don't there's no reason to dual boot there's absolutely zero reason to do it today um
uh because you mean everything you could ever use is on both system
so i strongly advise against it um it's gpu uh vmware this is telling you what that it's like
it's an emulated uh gpu um and so and then we have memory uh here uh so okay and that's all
so let's install neo fetch it's a very relatively simple package it should be easy to install
all right so let's do that let's go up to our our plain jane um uh terminal console
i'm going to call this a console from now on because while it's a terminal it's it's a terminal
that is a console in other words it's the same thing as if i had like sat down at the machine and
was typing in it this console actually gets you'll see like random messages i don't know if you saw
right but if you saw um the reason is it what distinguishes a console from a terminal you see
all these random like messages that are on this terminal that i have that's because this terminal
is considered the console which is a very very special terminal it's considered the like you
know master program like interface to the whole system and so when errors and stuff come up they're
broadcast to the console and you have to to refresh you have to push enter uh or something to
to get it to go off um but the point i'm trying to make here is that that's what makes a console
special and sometimes going to the console is useful uh whereas a terminal um a terminal is
just anything that's connected uh into the system um remotely or or from you know a different uh
tty you actually have seven different uh console connections to the computer terminal connections
if you want them based on f keys which we won't get into today but it's you'll see that this is on
tty one um but i just wanted to say that's what's different between the console and the terminal
so let's go back to our boost console if i can remember how to get there here we go all right
so we're gonna do this on install we're gonna do sudo um sudo let's let's first of all see
what we know that it's called neofetch so let's first of all see if we can find it apt query
uh neo which is anything that's got the word neo in it and it's i don't even know if i need sudo
for this uh but it's not going to hurt i probably don't
about operation query oh it's sorry it's search it's search that's right oh my gosh there's too
much stuff all right so i'm glad we're doing this because now i can like add more notes to
stuff than we need to do all right so we did um sudo apt search uh neo search excuse me for all
packages with neo in name okay um and this is a good opportunity to talk about the pager
so i'm i'm trying this is kind of very organic um you don't need to do for search yeah i don't
think you need it but we can go ahead and do that all right so um as you can see there's a lot of
stuff that have the word neo in them and at least it says it does um this doesn't look like why does
it have neo i don't see it i don't see having neo in there i think it's lying to me how does the
system know it's possible package does it always download a list yes every time yeah actually if
you want to update so if you want to get an updated list of packages you should use sudo apt
update and what that will do is it will go get the latest lists from everything so that's what sudo
apt update does so sudo apt update goes gets the latest in the lists and those lists don't change
very often so unless you've added a new repository which we're not going to do today uh or you've
done you know you really of thinking you know like a newer lease just came out you don't really
need to do that uh that's what update does um upgrade is a different thing upgrade says take
every package on the entire system and give us the latest version which is sometimes dangerous
so use apt update if you just want to get the latest you're going to do it a lot actually um
particularly when you're working with docker and stuff i don't know why it's giving me so
bad if so many hits back on neo here um i don't see i don't understand why it's giving me so many
there we go so um the repository for packages
app search oh yeah yeah yeah let's try that that's a good that's a good idea that's a good idea
yeah so we're going to use our first regular expression we're not going to we're going to
kind of incrementally go in i want to throw you all in at once but the carrot in a regular
expression says lock down this expression to the beginning of the string and we're going to put
anything that starts with neo okay so that gives me everything that starts with neo let's put that
in our notes uh again you know the the the Linux journey is largely filled with writing lots and
lots of notes um so i don't i don't feel bad having you do that i just wish my thing would come
better okay so um app search um search for all packages uh starting with neo
all right and you know we're going to progressively add on to your knowledge with regard to regular
expressions uh i know it now is not the time to learn regular expressions we're going to learn
regular expressions when we do batch programming and then like two or three weeks okay but well
let's let's give you you know kind of there's lots of ways to learn regular expressions
i strongly urge you to avoid going down the regular expression learning path
right now until we have a conversation about it we need to talk about all the different types
there are which ones are the most important for you to learn why you need to learn them
when you need to learn them where you need to learn them when you should use them and when
you shouldn't use them that there so we have to have like about an hour long conversation about
regular expressions and i'm not going to have that until what till batch time because a part of
batch is regular expression matching um so for now this is kind of a hint as to what a regular
expression is um and and we can we can go from that um the malicious is there any check into
packs that's a great question so um uh how do i know uh that uh apt packages are safe
and this is a really good question i'm going to take time to answer this right now
um uh okay so the thing it's really important to understand about where these packages come from
and i'm thankful for that question it's a very important question um is these things this is
this is what distinguishes arch primarily from every other distro um and this is also why the
enterprises of the world only trust red hat and ubuntu for this stuff and they will never trust
arch what i'm about to describe to you is the reason that arch will never i mark my words
across my art of the day will never ever be used in the enterprise because of the arch user
repository and so these this distinction this contrast i'm about to make is super important
that you understand this okay so the apt process the packages that are stored and listed in apt
are vetted for security and they're approved by the distro team for debian the debian team the
debian and ubuntu teams approve every single thing that gets listed in the root apt things they go
through them and they check it out they make sure that it's relatively safe there's like a really
extensive process that they go through to make sure that the stuff is particularly red hat because
red hat their package you know distribution system which you have to pay extra money for actually to
use it is because they're proprietary it's weird but they go to great lengths to ensure that the
software that's in there that's in their package repositories is vetted that it has checksums applied
to it so that you know it makes sure that something didn't sneak in while it was getting downloaded
and that it is good software now there's a downside to that the downside to it is that
stuff from these vetted repositories is old it can be really old in fact that is the
primary complaint about the arch users have is they want the most the latest and greatest thing
they don't care if it's been vetted they don't care if it's got a thing they and so what you have is
you have this middle ground where and if you go to a debian system which is even older than ubuntu
you know the process of making sure the packages are there are safe and stable and
have been vetted reasonably well takes a long time and that that delay makes you a lot safer
so the the difference is that and by the way manjaro which by the way fails to do this completely
this is what they're attempt to do they attempt to meet the middle ground between those two and
they're actually if you know about manjaro linux that organization which is a company
is very very uh all open sources vetted no it's not this that's my false friends they told me so
so the there the manjaro arch distro specifically it fails to do this but it is trying to convince
enterprises that it has its own repository which has been vetted like ubuntu or red hat or any of
this or susie and they do vet all of that just as just as faithfully and diligently they don't
they do not and i can have overwhelming objective evidence of that they don't do it what they do is
they green light stuff from the arch user repository the reason that arch is so popular
particularly with hackers and other people is because the arch user repository in order to
create an arch user repository all you have to do is make a github account that's it or something
to host it there is no vetting that takes place at all and if somebody wants to take me to task
on this i'd be welcome to talk about this but an arch the arch user repository is decentralized
that's why people like it there's no central ownership of it there's no there's no group of
people you have to bow down to to get them to include your repo right now canonical has created
an extra thing um where you know you can go publish your stuff there as well and then anybody
who wants to use that has to specifically add your repository to your list of repositories which is
out of scope for the boost but you can do that you can say no i approve of this repo we're not
going to cover those apt commands but that is a process of it and you have to explicitly say no
i'm okay with this repo the arch user repository is not like that the arch user repository anything
that anybody publishes anywhere pops into the arch user repository and it is filled with bad
malicious software and it has got some of the crap there's at least just to give you an example of
this if you're using arch just search for minecraft and you can see all the trojan versions of
minecraft that are out there they're they don't care they have put out so many decentralized
unvetted wild repos out there that they say well you know buyer beware it's up to you
and so the question that was originally asked how do i know the apt packages are safe the answer to
that is unfortunately centralized vetting that comes from whoever you know the ubuntu team
decides is and they largely depend on the debian team um for that or whoever red hat decides is
good and the the people that are you know phosphorous they they don't like that the arch people
that like no i don't want you to get my control i'm i can take care of myself thank you very much
i'm not an idiot i'll download the software that i want and you know but that puts arch users at
great risk because even though they're getting the latest and greatest in their thing they're
they have to personally inspect every single repo that they download to make sure that it that they
personally vet it and arch users tend to be the kind of people that want to do that themselves
anyway the danger is in a in a distro like monjaro where monjaro comes along and to the
beginners says oh we've got a nice safe version of arch view right here we promise all you have
to do is just disallow any of the aor stuff just check that box off and the rest of the stuff we
vetted we promise it's really good and yeah they probably do it but most of my experience most of
it is they just give a wink and a nod and they accept certain aor repos without vetting them at
all and and that's extremely dangerous and not only that but it's so easy for that end user to say
what do you mean my my program that i want isn't in the standard monjaro things i'm going to turn
it on so they they turn it on and then they go download the one and then the trojan and you
know linux is a very secure operating system but on arch it's not at all arch is extremely insecure
and because of that nobody will ever authorize i swear to god nobody at the cto level will
ever authorize arch in use for an enterprise except valve now valve isn't even technically using
arch as a distro specifically they are they they built their uh valve built their steam deck or
stream deck or whatever it is on i forget the name of it they built it on the arch distro
and and but they've got you know they've got like you know high-end linux professionals that are
making sure that all that stuff goes in there that that is not a a vote of confidence for the
average user out there or the average enterprise to say let's let all our desktop users use enlightenment
or or or you know monjaro or something like that so i think it's really important we talk
about that i'm glad you asked because as i said the distros these days are distinguished by their
package manager and their package management policies so if they're if you like what what's the
difference between red hat and susie susie has yet another package manager right yes or something i
can't remember um they most of the distros these days are distinguished primarily by their package
manager and their approach and the apt package management has become by far the most mainstream
both in desktop linux use and in server and cloud linux use and then rpm is a very close
second and maybe even above that in enterprise use rpm is a very trusted thing and there's a lot
of companies that pay a lot of money to red hat to subscribe to their even higher tiered vetted
stuff that they will only allow in their enterprise just to ensure that they meet
you know government regulatory standards and stuff and this is why arch will never be in there
arch doesn't even come close to meeting government regulatory standards for investment banks insurance
companies and and health care and all of this stuff that is required by law to be in place
and red hat meets those needs canonical meets those needs and you might not like it but when
we're talking about you know enterprise distros for linux that's the requirement and that's why
arch will never be there those requirements of course don't apply to steam and valve and things
like that all right so um yeah uh yum enjoyers are living right now steam os yeah sorry about that
i got that wrong no no confidence cto is it steam deck thank you um to arch because of the holes in
it yeah uh so that's that's hopefully a good summary of that i like a bit that that it's tied to the
apt thing because it's about the package managers and and the security related to those um i don't
want people to misunderstand i i i've used arch i think arch is a great distro for building a
hacker distro for yourself um i personally started building my own hacker distro using arch because
it's easier than gen 2 because you don't have to compile all your own stuff um you know the boost
does not cover any of that stuff but i don't want people to think that i'm an arch hater i actually
like the aor a lot um and as long as you know what you're doing i that's fine it's just not for
beginners in my opinion um because they don't understand the issues we just talked about and
so they end up walking into you know a hornet's nest of problems um and particularly with manjaro
which you know sells itself as this nice easy distro for beginners and they get in big big
trouble that happened the manjaro bricked my entire computer lab and i'll tell you that story
some other day but um i i was somebody recommended i use manjaro one day and uh the most secure
distro red hat and a bunch of server by far a bunch of server and red hat are by far the most
secure distros i can back that up with all kinds of cto's chiming in on that and yeah um the successor
for red hat for sento s so sentos is still around uh rocky linux the creator of sentos is using
rocky linux and then there's almo linux and then there's of course fedora which is you know red
hats version of it if you want to get into that stuff we're we're doing the reason we're doing
ubuntu is because it's you're more likely to find an ubuntu desktop and some of you're going to want
to your next step after this is you're going to want to have a linux desktop and those of you
want to linux desktop are probably going to be best served by ubuntu or mint or or any of these
and they're all debian based which means they're going to use apt so they're going to be using the
apt package manager so let's get back to that um and so uh popo s is a is a disaster right now i
wouldn't stay away from it big time i uninstalled popo s i went to windows because it was such a
disaster i would stay far far away from popo s and if it's not ltt also talks about it i it's
it's a huge disaster um it was good for a while and then it it really went downhill um i my favorite
linux desktop business right now is linux mint yeah and greg greg greg is a very discerning person
uses mint straggler it was a very very reputable uh streamer uses mint as well i i was using mint
for like 10 years before i tried popo s and it was actually a viable clown member recommended
that i tried popo s because it's nice for beginners and i used um i used popo s successfully for all
of 2020 um and most of 2021 and at the end of 2021 they started messing with it and it started
they did something with the drivers and something and it i couldn't stream anymore it was crashing
it was black screening i mean it was more unreliable than any windows system i've ever used
and that was my experience uh you might have a different experience but that was my experience
i didn't change anything i just like doing the updates uh and monjaro monjaro i i put my whole
computer lab i had 10 computers and i rerun monjaro on all of them one day i came in ready to get
ready for another class about an hour and a half before that and i booted up all my computers and
i clicked on the upgrade thing which i do tend to do and i clicked on the graphic upgrade tool
which i've been telling all my students including 10 9 11 year olds to do and they've been doing
these things on their laptops at home they came in and tears some of them because they broke their
computer by clicking on the graphic upgrade icon and then the monjaro team officially their official
response was well you're stupid if you clicked on the graphic upgrade button you should have done
that all from the tty and i'm like i'm not telling a 10 year old about it the reason i picked monjaro
is because it was you're billing it for beginners and then they and then they doubled down on how
stupid everybody else was who had you know bricked their machines by clicking on the thing because
it did it it was a there was a graphic user interface update and after and i kid you not i
it bricked all of my computers i had to reinstall i had to reinstall them all and and if you don't
believe me go chrysanis the stick had the same situation and and you know i got i got kind of
upset because when i went to the help forums and the twitter i was like you know guys this and
they started making fun of me for not using the tty the update like only as only an idiot would
not use the tty the man i'm like listen to me i was compiling linux kernels before you were in
diapers you you know and and i know how to deal with linux but you you know pumped up monjaro
as this super easy click here you know do this kind of distro and you just failed that entire
community and i got kids you're crying literally because they just broke their linux laptops
and since that experience i will never use monjaro again the way they managed it the
monjaro was also caught trying to sneak proprietary software into their distro because
they're trying to get they're trying to take over the place from from canonical they're trying to
win the enterprise world and they didn't have anything to say about that when they that big
thing they started flooding their twitter feed with positive things to counter all the negative
stuff that was going down and i was like i don't want anything to do with this organization ever
again after that i was so done i was like i you cannot pay me enough and i know a lot of friends
who love monjaro they've had great experiences with it but they're not the kind of people that i
want to work with so if you're going to use arch use arch i mean like make a you know treat it
like uh you know like linux the way you would you know an arch user would do it don't treat it like
papa was monjaro is not papa was and papa was these days isn't even papa was anymore either so
linux meant is hands down the most reliable linux distro if you're going to go that route
but we're not doing that so let's go back to installing neo fetch and we got 21 minutes left
um and uh uh yeah so let's go back so so we found that we we tried to search for everything
that starts with neo right there's neo mutt by the way which is also really great there's neo
vm which we're not going to talk about right now so there's lots of neo stuff here there's not the
neo command which is unfortunate neo is the thing i was running to give me that kind of matrixy thing
so let's do that let's do let's install uh neo fetch so sudo we have to do sudo
let's actually try it without the sudo shall we so let's do apt install um neo fetch
and as you can see it's going to like oh you must not be rude um uh sorry i would yeah but
but this boost okay so let me just remind everybody we were talking a lot about linux
distros recently and um i want everybody to understand that the scope of the beginner boost
which is what we're doing right now is just virtual machines which is a skill you need to do anyway
so let's say you really really want to add a separate machine and run linux on it that is
fantastic and i'm happy to help you and anybody here is happy to help you but you still need to
know how to use a virtual machine because you may be forced to use a windows or a mac at work
you might want to just use it to emulate a network environment there's there's a million
reasons that you need to maybe not a million to know virtual machines so stick with me on the boost
here let's let's i mean you're happy to ask questions but let's focus on the virtual machine
and then we'll i mean cloud is all based on virtual machines so another reason you need to
know it and and then and then we can beyond that we can go into installing stuff on your
own desktop that just this that we can spend an entire month on all the different ways to get it
running on a different devices if you if you have questions about your specific devices please
ask in the discord and i'm happy to help you during you know any irl stream or something like that
right so i need to put sudo in front of it so this is our first experience with the history
right so let's talk about what the command line history is um what is history
uh what is uh shell history okay so um a shell history so i'm gonna there's gonna be a lot of
opinions here we're gonna use the default shell history which strictly speaking is the emacs history
and we're gonna push it up arrow so by pushing up arrow we can go reuse the same and push the
left arrows all right and i can add the sudo there okay now we're gonna come back to we're
gonna revisit this after we learn vi and i'm gonna show you a lot of ways to do this uh yes
we could do that but i don't want to do that because they don't i don't personally i don't
like the double bang i think there's a million reasons to not use it so right now we have absolute
beginners who don't know how to get through the history you might want to push the up and down
arrows just to practice with the history okay you got all that stuff and that's all saved there
we're gonna later on we're going to come back to the history topic we're going to talk about
how to force it to save the history between logins uh how to add more to it how to be careful
not to truncate the history how to navigate the history using vi and all kinds of stuff
so i'm just going to use the arrow keys for now i'm going to go to the beginning of it just like
you would and i'm going to i need to add sudo right so sudo make me a sandwich um sudo um sudo
apt install neofetch so let's try it now okay it wants my password which is password
and hit enter and there we go whoa i was like all this stuff is going to install right
and i mean don't just glaze over this you know you should probably at least look at what you're
doing uh it's going to install a bunch of other packages in order to do it right and you might
want to ask yourself well is it really necessary to add all that stuff to this tiny little linux
distro um and it is if you don't want to have to do the y you know for sure you want to do it you
can just do dash y but we're going to go ahead and hit enter on that and then i'll start downloading
all those packages and it stores them um it tells you where it's getting the package from it tells you
jammy main that's the um that's the uh the version that's the the the friendly name jammy is the
friendly name for uh the distro that we're on of ubuntu um and we see all the different dependencies
coming down it's unpacking everything and it's installing it um and when we're going to do a
lot of this one especially when we come back to docker uh docker is largely about building a
linux distro and then managing all this stuff which services should be restarted um i don't
know if we need to restart any services here i don't think we need any so we're going to hit um tab
and go to okay uh well w3m and links we're going to do those later on they're going to get their own
day yeah we're going to get an entire day on letting links browsing for sure um and so so what
do we got here so can we run it let's try neofetch so there's our neofetch yay did everybody get that
to work as you can see we have different stats here right we have color but we have already
made sure all the boosts we have a one two twenty twenty one first of box one point two
this it's only been up for an hour it was really crazy is if you save the state of this
virtual machine you can make it like go in perpetuity you can just keep restarting it
even though it's not running it's just been kind of put to sleep um we see the resolution is 800 by
600 uh to get yours to work and so now you can see all the information about yours you can see how
much your color palette is and things like that so that's i mean now that's that's the first piece
of software so you've installed your own software now let's try to remove that piece of software
okay so what if i wanted to get rid of it so for some reason i didn't want to use it anymore
right so then it's sudo i think it's apt if i remember right i think it's rm i could hear
that wrong is it is it is it delete i don't do it very much i might put stuff on my system
i think it's remove it's purge is it remover purge i have to look at it every time
is there a move okay there's purge too which is a different one yeah so let's do remove there we go
so this says a purge is a flag okay so uh this says we're going to remove all this stuff
now um you see how it says sudo apt auto remove so i want you to see this this is important
when you remove software it just removes the package you're asking for it doesn't remove
all of the things that were used by that so let's push enter here and we're going to go
ahead and remove it and you can see that there's a bunch of other stuff that has not been removed
that is no longer being used um so let's do that let's do sudo and even tells you what to do there
sudo apt auto remove sudo apt auto remove and this will automatically remove anything taking
up to space that is not being used by the thing you just installed so what i'm trying to get to
is that it doesn't automatically remove the dependencies you have to tell it to do that
later on because something else may come along and need one of those dependencies you might not know
and if you don't know that like the next time you go to install something like you might actually
get a warning uh you know that um that says hey you got all these things you need to clean up
and we don't have that anymore because we got rid of it all right so let's go ahead and put it back
on there we practiced installing we'll do the you know let's do apt install i'm using the history
again install neofetch and yes we want to do that and we're going to pull those all down again
this is something you should probably practice um uh over time there's another one called c matrix
um i don't know if i would use a d package directly and we're definitely going to talk
about that right now so the d package is for specifically dealing like surgically with a
specific package and i don't even know if it grabs all of the dependencies uh except the packages are
removed and purged and the configuration files are deleted yeah and you know i'm not going to go into
that but if you want to read more about that um do man apt okay so you know you can go through
and read about all those commands um and know what they do we're not going to get into there's
there's lots of like deep water stuff that we can do there with packages but right now we're
just doing the basics of beginners better stuff how would you how would you install it so sudo apt
install neofetch right install neofetch and dependencies and um so that's how you do that
if we wanted to get rid of it we would do sudo apt remove um now remove neofetch and then we would
do um sudo apt auto update i said auto update or auto remove um let's see so uh automatically
remove unused packages so that's that's pretty much it for the sudo stuff um
it's mic cutting i i hope the mic's not cutting if it is i might be clipping a little bit i hope i'm not
um running apt updates every once a day i i don't know most of the time when you log in to this system
it'll tell you how many let me let me show you so like if i um i'm trying to give an example of this
when you when you log into something um it will tell you uh yeah there's a there's a number of
variations on this so i'll let you kind of invent your own variations on it um but these are the
basic commands these are the basic commands we're able to do during the boost the thing about the
boost is it's generally meant to be you know give you that boost and push you on your way so you can
ride your bike on your own there there's no way we could cover everything that you can do with apt
install and and even the ls command there's just so many variations on it so you're going to be
constantly looking up those new angles on things and seeing if they have relevance to your workflow
um and there's been a lot of great suggestions here um so uh it doesn't know to delete new
fetch dependencies auto remove just removes anything that does not no longer has a dependency
so so you might remove like two different packages and all of the now sort of orphan
dependencies that are not being used by anything uh that's what auto remove gets rid of um yeah it
doesn't it does not just associate it with new fetch i think that's really important that i say that
so that's why i changed the name here to say automatically remove unused packages um and you
i mean you you'd be totally fine just leaving it there it's not it's not going to hurt you it's
just going to take disk space right um so there's no such thing i don't know how it does i honestly
don't know uh deleting orphans i mean if or if it might be the wrong word it just it's just not
being used there's just it keeps track this is why you want to use a package manager first of all
okay it's also why you don't want to play around with dpk g command directly because it does not
know uh as far as i remember uh the dpk g stuff doesn't have as much knowledge about the
interdependencies between all the stuff as apt does so apt is the thing that's keeping track
that's why i call it a package manager um it's not just for you know dpk g is for creating the package
and that kind of thing which we're not going to do any of that um and you know surgically
deleting a specific package um uh you can find unused packages yes i think it is too and that's
actually one of the advantages of using a package manager now um like that just to have purpose
on my box yeah i i tend to use purge uh more than that's more than remove and i think i think purge
actually let's try it actually let's try purge if i remember right purge will also delete the
unused dependencies at the same time and delete all the all the configuration files um let's give
that a try and make sure i haven't done in a long time i tend to use purge instead of remove and
honestly i don't even remember why i do that i just have been doing that forever so let's do this
let's go ahead and install this one i'll purge this one this time all right so that one is on
so it's this proof we have it here neofetch so we got our neofetch right so let's try it so sudo apt
purge um neofetch and my you know my memory yeah there we go see it it's gonna it's gonna get rid
of neofetch oh no it doesn't it doesn't remove them and are no longer required i think there's
actually a it does remove the config files for sure yeah and i can try anything with no fear i know
that's why we're doing a virtual machine and if you really want no fear you can take a snapshot
before you do it except that the packages are removed but i don't see it doing that and let's try
um i mean how would i how would i look for them again i don't even know
usually it happens when you're just doing another command it'll tell you hey you got stuff you
need to auto clean or whatever and and i'm not seeing that so i don't know are you seeing it
god damn it um
i know it's not showing me that anymore did anybody know what's the command that shows
you all the unused files i think it deleted them out automatically i really do i'm i can't prove that
actually let's try let's try that whole thing again this time i'm going to install it but i'm
going to install it and and then i'm going to auto remove it and i'm going to try to do some other
thing there's a number of config files that get created uh that might want to get deleted so yeah
perjamuse depths not configs yeah i don't know we're going to figure that out so all right so
so there we go we got neofetch on her again and we're in a vm so we're all good right again if
you're on a piece of hardware you wouldn't want to be screwing around with this right um
only removes the packages apt auto remove dash dash purge removes packages and the configs
interesting so it is dash dash purge interesting made a page that says that the purge will
delete small modified user configuration files except those stored in home directory yeah i don't
know i mean i normally i i don't i guess i don't first of all i don't ever remove packages
i don't know why but but just that in general i'm always just adding things to my system i almost
never delete anything from my system i mean they're adding or updating you might find this
is true like you know and then at some point you get so filled with stuff orphans are safe
that you know you get uh you tend to install and not remove it so i was just gonna say yeah
because you just make a new vm you just make a new vm and then install the stuff on top of that
right it's very rare to remove something uh back it's from the apt on all the vm's and carry
absolutely yes you absolutely can uh keyboard massage you that yes that's the point we're
going to do a little of that but when we started getting into the cloud uh the cloud based images
which i don't know if we're going to cover that in the boost at all but you can actually put all
of the images that you want when we do docker we're going to do the same thing too so docker
creates a linux distro you know builds on a top of a distro and it puts all that software that you
want there on there so then you can just get all of that and that's another way to get all the
stuff you want really quickly cloud vm images will pull down the image they'll do all their thing
and then they'll run a script and you can install all those dependencies and software that you want
on top of that as well it's another way to get what you want quickly and and those are all skills
that are going to layer on top of understanding apt you're going to be doing a lot of apt and
docker that's why i wanted to spend some time talking about it uh deb orphan which will
find out your dependencies really uh white dvm and wsl and instead of this all yeah most people
do that and i think that's probably why i don't know the remove command very well you can tell
the ones i use and the ones i don't because so i'm gonna leave fetch off there we'll just use
uh remove neo fetch um and that i mean i think we were kind of coming to the end here i am we um
i mean i know i know i've been kind of wordy in all of this but i i i'm going to take one from
leon i know leon has kind of a slower pace and i i love that about leon's stuff um and i don't
want to overwhelm people with too much so uh you know we got plenty of time to cover this i think
we have a ton of stuff for you to experiment with so let me give you um a challenge for this week
so so for this week um you know the actor recall and your your practice um oh you got some videos
about apd nice let me go find a link on that um so what i would suggest is that you re oh god
that you research um oh anthony anthony did some stuff on this i love anthony yeah anthony's really
great anthony's great too he's done a lot of great stuff i mean we got there's a lot of there's a
lot of us out there that are trying to help people and i i love that you know that they're out there
so um so if you want to you want to go look at that one go look at that um so so yeah
so so this is what i would suggest to do this week um where our files installed as well as can fix
we're that's that we haven't covered file system stuff yet at all and um we need to spend about
an hour on that more than three minutes but if you want you can go look right now so i'll give you
i'll give you the kind of a preview what we're going to do next week next thing we're going to go
through all of the file system stuff all right so i'm going to actually put this in a week of three
notes so that i can remember that that's what we need to cover i did i put zero zero three i did
all right so so for this week we're going to cover um we're going to cover like uh
where are all my files and what and and what and and why are they there we're going to go through
where every linux file lives and why it's there and what it's for and we're going to understand
that whole file system thing we're also going to say uh how do i remove add and rename files right
how do i remove add and rename files uh and rename files and directories
and so this is going to be the focus we're going to go through we're going to start with the file
system and the reason we have to have that before we do ssh is because the first thing we have to
do for ssh is make a new file and you don't know how to do that yet so we need to add that um
and so that's going to be what we'll do next week and then we'll do um uh you know secure
shell setup which i i had in the end this weekend i'm going to have to take get rid of it um
you know let me let me go get i need to move that i we need to take off the secure shell stuff
because we didn't get there you know i kind of felt like it was a risk to try to put all that
stuff in there the reason the secure shell stuff i want to spend a good amount of time on is because
we have to talk about encryption and a lot of people have no idea what encryption is why it's
used how it's used what's the difference between a secure shell and gpg why they both matter you
know that that's a huge conversation it's at least an hour long conversation just about encryption
and since this this boost is to prepare security professionals i feel like we need to do uh
encryption in a pretty big way i don't think we can rush through out a setup ssh like we need to
talk about what is ed25519 versus rsa why do you like the security algorithm better than the other
one and you don't have to understand all the distills of cryptography but you need to be able
to intelligent putty right you need to be able to talk about what putty is how at what what it is how
it is uh what's the difference between secure shell command line client um you know what are the
security implications where the where the secure shell keys go um and you know in the past when
i've done this with particularly young people i just set up ssh for them you know what i mean i i
set up ssh for them um and and that is you know until they're ready to go through it it's actually
one of the biggest hurdles uh to getting people up and going on github because they have to configure
ssh and um if you use a vs code it'll do all that for you kind of behind the scenes and it's um
it's kind of unfortunate because you don't really understand what secure shell is doing
and since secure shell is the primary industry method for securely connected to a remote machine
and it's going to be the basis of the keg net uh the knowledge exchange grid uh it's super important
that people understand what it is and why it is and and and i don't want to i mean you know an hour
or two i think we're going to be spending a lot of time we probably will spend a good a good day
setting up uh gpg and ssh next week and another reason for that too is if people want to um secure
their own payloads uh they need to know how to encrypt you know files and stuff so so i have a
feeling that next week is going to be a lot about the file system how to create files how to manipulate
those files and how to secure those files um and if we have time it'll be editing the files um
that's you know four five hours so maybe that'll be enough time for us to cover uh the the vi basics
um you can cover you can learn vi in 30 minutes it's not that hard and people over state how
difficult it is and we'll we'll do that we'll definitely do that because vi is one of the
way to create a file so we'll cover that next week let me put that in the notes and um
uh how do i edit uh files uh and we'll cover that and so we're going to cover vi and in two in two
parts just to kind of give you a preview we're going to be covering the basics of vi and and then
we're going to cover the more exhaustively all the other stuff that goes and we're going to give a
whirlwind tour of how to make your own vmrc file but unlike last year last year's boost we went
exhaustively through the vmrc file and it took us like two weeks to do it so i'm not going to do
that this time uh this time i'm going to do what i did when i got started i copied somebody else's
vmrc file and i used it until i understood what it was and that's kind of the nature of how unix
goes is you you you take somebody else's configuration that you trust and you use it until you understand
enough to tweak it and then you start to tweak it over time i mean it's a pretty long-standing
unix tradition to do that um and and that's what we're going to do so i will give you my vmrc you
might choose to take a vmrc from a friend um and i'm going to explain very briefly in high level
what the different sections are doing without going into detail on teaching you vm script
and then and then uh you will be able to get going and you'll get all the pretty colors and
everything that you want and then you can go in there and then it's you know you can have something
to start with you can start manipulating it everybody does the same thing when i learned
teamux i had no idea how to do teamux and i found a couple people who use teamux the way i do
and and they did that and they modified it we will spend probably the week after that will be
teamux and bash um and we'll do that okay so and we're talking about aliases and shortcuts and all
that when we get into scripting um and and how they differ from actual files blah blah blah
we're going to go through the bash rc file we haven't done that yet as either so we got we got
we got stuff to do but you know we're getting there we're getting there slowly but surely
um i don't see any secure shell here did i have it in or delete it i think i did
okay and we'll get more into shell history when we when we talk about um how to configure your
history uh when we do bash rc file and we are going to pretty exhaustively go through that
yeah everybody's got their own um i don't necessarily agree um with the stuff in those links but um
you know these are not bad i mean i don't know i don't know i have to go get it first i'm happy
to have people look at it but i i haven't looked through it yet so i need to i need to vet some
stuff here make sure just make sure we're good um yeah this is bash that's vim script yeah that's a
good one that's a good vim script resource yeah those are good you'll remember those and bring
those uh bring us up join next time we we go through vim script uh and particularly the bash
one we're gonna we're gonna be doing both of this remember to bring those up again when we
actually cover those topics uh so maybe you're gonna want to race ahead and that's fine you do
whatever you want you're in charge of your own learning but my suggestion for this week
is to focus on installing and uninstalling packages of software and um yeah vim tutor is okay
we'll talk about them um so so uh ip said yeah that's good so um and it too much i have a completely
different use i have too much with okay so we're getting ahead of ourselves i know you want to
get stuff faster but i trust me the foundational knowledge that's behind these things like the
terminal and stuff that you might not think you understand you need to know will come up later
and one specific example is that your tty can be sniffed if you're a security expert and you
don't want to do that and now you know why so those are reasons that i wanted to cover those things
um i think um i think this is enough so if you want to go out and read some of these you
know play around with the terminal software uh see if you can use it maybe install git bash if you
want to uh i should probably put git bash in here um git scm dot org um so you can install that
it'll give you a bash command line on on windows um if you're on a mac you might want to start
playing around with the command line on mac and see how it's different because it's bsd it's not
linux um and see all those differences you might but the most important thing is that number one
you get the terminal software installed this week and number two that you know how to run a vm you
can start and stop a vm you can delete a vm you can create a new one you can snapshot a vm and you
can add and remove software from that vm like without a problem and i would probably do it like
five or ten times like i did i would go through i throw everything out then i would put it back
in there and i would purchase things out so you want to get good with with installing software
because we're going to be depending on that going forward and we're going to assume you know that
okay um and that's it that's it for today um i'm going to go ahead and put some of the music back on
and um again i'll be chopping up this video and posting it to youtube um we're not going to be
doing anything with git clones and repos for a while here's why because git depends on ssh and gpg
and all of that depends on being able to edit files and manipulate files and understand encryption
so everything is in order you know um so that's that's why we're doing it that way um i i'm really
i'm not trying to stall you out here but um i can't really get into git git is a big topic
that we cannot especially with when you combine it with github that we can't cover until we've
covered ssh and because i'm assuming a higher level of skill here you know 12 and up uh we're
actually going to get into the weeds on ssh and gpg unlike i would normally would do with somebody
young um because uh i sense we have a lot of security professionals and i mean let's face it
security is a really big concern across the board these days so so i think we're i'm going to allow
myself to dive a little bit deeper into ssh and gpg next week and and and we'll go with that we'll
go from that well we'll talk about soft links and hard links and file systems and all of that and
we'll cover ln we'll cover mv we'll cover uh touch we'll cover you know all of those things okay so
stay tuned for next week and uh thank you for all the feedback and um i'm just going to go back
and put the music on for a bit um but you're you're welcome to hang um i i'm going to be doing an
irel stream almost immediately after this and um thank you for that um so i'm going to do myself
my pomo here pomo stop just stop us from annoying us um yes and again you know the discord is there
for those who want to do the thing um help each other out there uh you can read my about for any
other thing you want to do and um i'm actually kind of raring to go because i i had that that
drink i kind of want to go for a walk again so i'm almost immediately going to be irel streaming
and i'm going to go on the same walk i just went on except for i'm going to go down the other path
the other the other side of the path if you remember where i was last time so if you want to
stay tuned um for that that'll be coming and um and we'll be doing that and then i'll be chopping up
this video into your youtube the youtube is not going to pop up until tomorrow or the next day
so so you can know about that uh but while we have daylight left i think i'm going to go
go out and wonder if anybody has any questions about me personally or or you know why i do this
all those things we covered on the orientation day you know the irel streams are the time to
give me to ask me about that but i'm i'm kind of excited to get outside so i'm going to go out
there right now uh maybe i'll go for a walk too and and let me know so talk to you soon bye
