All right, here I am. I am here. I am not f-ing. I'm actually here. I'm updating
the calendar and some stuff. In fact, let me show you really quick. So, oh my gosh,
Rob, be quiet. So, a couple changes here. Not just updates to Steam. I'm still
going to try to do 630-7, but I just wanted you to know we're just going to
lump all of these together. We're going to keep them on the weekend, the week
days, and we're going to try to make it 630-7. And the questions can be
about anything. So, if you have a question, just go ahead and put that in the
Discord in advance or just do the live questions and we'll just go with it from
that. So, we can skip past this. It's been, we've tended to take on one topic at a
time just based on the questions, but we've done like two maybe a couple days.
So, there you go. My wife is making dinner and she's using the chopping board.
I'm super happy that she's doing it. She's very nice. So, let's jump right in.
Let's just jump right in and see if anybody has any questions. We had actually a
couple questions that came in while I was playing Dota after work, which I
probably will be doing again after this. I am really tired today and I can't figure
out why. I don't know if it's because I didn't drink as much coffee today. We were
talking about sleep and drugs and caffeine and that kind of thing in this
last question session and I've truly been on my mind. So, I started to
cut back on the caffeine. I didn't have any coffee this morning and I was
dragging all day and I hear that that's what happens with caffeine addiction,
but I don't know. So, I've been fighting that and one of the ways that I fight
being tired, especially at the end of the day, is to play a game or go for a
walk or something like that. So, I was playing some Dota. We've had a couple of
people asking questions earlier in random things like, what's my favorite
candy and ice cream and things like that. And then we had somebody ask if it's
okay to tech talk while I'm gaming. Obviously, it is. I don't care. Let's
see. And here we go. Just started a new job as a go Devon and American company
turns out my manager likes Dota. That's awesome. Are you good at advanced
math? No, I'm not. I'm not good at advanced math. I wish I was. I'm not. I'm
not. I did, you know, I got A's in 300 level calculus in college, but I didn't
do well after that. What else do we have here? I'm just reading through the
questions. Let me go back to close-up mode. Again, if you have a question, go
ahead and just type it in. If you want it to be seen, put Q in front of it. You
can also put it in on the stage. In fact, let me go ahead and post that
we're doing questions and advice to Discord. If you want to join in
Discord, you can do that as well. Let me go to the stage in Discord. Start the
stage, paste, start stage. So we can get some people in there if they want.
Race hand list has moved. Interesting. No. Oh, okay. I'll request for everyone. Oh,
that's really cool. Okay. Let's go ahead and put a Twitter notification out. And
we'll just go until we're out of questions. Probably 45 minutes or so.
Rxrob.tv, livestream, coding, FAC, AMA, Twitch. Get a couple people in here. And if
not, we'll just go. One of the reasons I want to do this is I want to just start
covering the questions that have been entered over the years in Discord that
I haven't answered because I'm busy doing other things. So here's another question.
So I spent a chunk of my time on NeoVim from VimScript to Lua. But in the end, I
had to drop it because it just wants, it just wasn't efficient compared to VS
Code. And I see that you use regular Vim without any plugins. So I'm wondering
what your opinion is. Oh, that's a great question. I'm going to copy that question
out. I've answered this question a lot, but I'm going to go ahead and
answer it again because it's so common. Let me see if I can get to my question
session here. I have a Zed for this. I want to remember the questions so that I
can put them in the description. So let's do that. Let's do ZedEdit. Is it Q&A? I
don't remember. I made a Zed'll cast in on that entry. No, that's not it.
You know what? Let's just make like an ongoing dev server about this. Do we
have a Git repo for this already? Do we have one? I think we might already have
one. I think we might already have a Git repo. I don't remember what's the name,
though. I'm going to go look and see. If you don't know what a Git repo is, it's a
place to put source code. I'm going to go look and see if I have a recent one that
I've added that I'm not aware they don't remember. Then I'm going to keep a
central Git repo for all the questions and answers and try to keep it to be
the same. It looks like I don't have any recent... God, look at this. This is me
doing code. This is the bonsai and then this is summer. It's funny, isn't it?
All right, so wait a second. Here we go. Repositories.
I guess I'll just have to have a little...
What should we call it? Question and Conversation. Let me just do this live.
See the GitHub.com. Let's see if we have anything awesome go. Boost, Boost VM.
Cb.FnFonts.JavaLab. Workspace, blah, blah, blah, Zed. What should we call it? Let's call it
Questions, Advice, and Conversations. So ghrepocreate from scratch. Yes, we'll call it
Questions, Advice, Conversations. That's a big old long repo name, but I don't care.
And we'll just call it... We'll put a phone. Let's put a phone in there. So again, on Discord,
if you want to raise your hand and actually talk, you can. If you prefer to express yourself in
voice, not everybody wants to do that. But if you do, you can. That's one of the reasons we're
doing this. This also goes on YouTube. Questions, Advice, and Conversations.
And this is different than a Zed. A Zed is something that I'm just going to do.
I don't want to get ignored. Would I like a license? Yes. Let's do Creative Commons open
so everybody can cite it. Do I want to create it? Yes, I want to create one.
Colonial repo locally, yes. And Questions, I'll never forget where that is from no one.
So let's do vireadme.md. The cool thing about this is I can actually do it by date.
So htitle. Wait, not htitle. Ah, I can do hnell. How about that? There's hnell.
Why does it say 1045UTC? I need to fix that. All right, I'll fix that later.
So here's one of the questions. And then what I'll do is I'll link to the video in here. How about
that? And you can just go watch all the videos at once. How about that? Let's do that. And then
I'll quote the questions. That sound good? It seems to be working so far. So here is the answer,
and I'll put the answer in the video. Okay. And then I'll just put the questions so I
know what questions we have. So let's put the same thing here. Phone. And we'll put
questions, advice, and conversations. All right. Yeah. And that's it. I think we'll put the most
recent ones at the top so people can just go to the top and see that and they can kind of log,
maybe kind of a reverse log. And again, these people are going to ask these questions like,
you know, the same question all the time. That's fine. If you want to add the same question,
that's totally fine. So let me just mark this really quick. I wish I could actually mark it.
I'm going back to the most recent messages. So let's talk about this. So again, the whole
NeoVim thing. Now, I've answered the NeoVim question in one of my commands, but I did it rather
meanly. So there's a swear word in here, and I'm going to put it, I'm going to show it right now.
And then I'm going to explain myself in a nicer way. Okay. So one of the things to understand is that
NeoVim causes me an extreme amount of stress because two years ago, I went through and did an
evaluation of NeoVim and created a rather extensive like breakdown of it, thinking I was going to like
it. And, and I didn't. So I have to say about that. And I'm actually trying to find, let me see if I
can find where it is in my RWXGG stuff. I think it's, I think it's in, is it Vim? No, it's not Vim.
It's, I can't remember where I put it. Lang, VA magic is, all right, so let's start with VA magic.
Okay. So if you know how to use VI and there's an entire boost, every year has been an entire boost,
you know, day pretty much dedicated to VI and why to use it and, and all of that.
Unfortunately, those who don't understand the powerful shell integration builds stupid things
like NeoVim. And in the past, I've been really mean. First of all, before I get into this,
I want you to understand this is not a personal attack. If, if you like NeoVim and you use NeoVim,
that's good. I don't dislike you. I strongly disagree with your choices, but there are people
that are some of my best friends in the world who love NeoVim and they use it all the time. And I
love those people. I literally love them. Now, like hang out with them and everything. And they're
not, so I can strongly disagree with your choice of editor and think it's a stupid decision without
thinking you're stupid. Making one stupid decision doesn't make you stupid. Making a lot of them,
I don't know, you know, so I don't want anybody to feel personally attacked by this answer. I get
this all the time. In fact, this is the discussion about NeoVim is the thing that led to the drama
that I don't want to go into with other Twitch streamers, some of whom I strongly respect and
others whom I've lost all respect whatsoever for based on their behavior. But it doesn't matter
what matters most is why I came to dislike NeoVim. So unlike a lot of people who will just hate on
a thing and start with a conclusion and put that in Twitter and pick a fight, I went into this wanting
to like NeoVim and slowly and but surely I came to hate it, like really detest it, and to detest
the community as well. The community of NeoVim has the gall to create a VimConf that has nothing to
do with NeoVim that's completely against what Brahms would have even wanted to do. And they try
to say that Brahms supports it, he doesn't. And so, you know, it just kept aching on me. But so here
is the link. This is the short answer to it. I'm going to let you, it's not new and shiny, it's old
and busted, but you can't tell that it's NeoVim is my imagination of what a bunch of Roblox
programmers decided to make when they found out that Vim wasn't to their liking and they couldn't
use plugins and didn't understand Unix. That's my interpretation of what happened and how NeoVim
came to be. And you know, Brahms been so so in case you don't know the history of NeoVim,
all right, the history of NeoVim is Vim used to not be multi-threaded in seven and it had some
other problems with it. And it's always been under really, really strongly gate-kept by, you know,
Brahms, the guy who made it. And they get the name right, I hope. And so that's been the ongoing
problem. And so a bunch of, well, we're going to take our ball and go make our own editor people
decided to make an entire editor in Lua, as far as I know. And so they just set out to make this
editor the way they wanted to. And they ended up making basically a terminal version of VS code
that looks and feels like Vim, but it's not Vim at all. I mean, in many ways, it's not even compatible
with Vim. And some of the stuff that they took out is just really bad. So the fact that they took
out better configuration, instead of like using VI as the extension, people who thought this was
better configuration didn't have any concept of what Ed even was or its power. They just decided
to throw it all out because it was some old boomer shit. And they didn't seek to understand
before they rebuilt this. And that's totally their prerogative, but it's not what I agree with.
So I'm going to, you can go through all these point by points and I'll give them to you,
but the single number one reason not to use NeoVim is because it will make you irrelevant
as an operations hacker systems backend person. And if you don't believe me,
there's an engineer on my team right now who constantly struggles because he can't get NeoVim
and all my Z shell on our production jump login boxes. And so there's no NeoVim in any form
on any certification exam. There's also no Emacs. But there is VI and Vim on every container
engine ever made, every container OS made like Busy Box and Alpine. And there is VI at every,
you know, every login system. And it's a default. It's a default editor on all systems. I mean,
they made nano the default editor for a while. And that was a dubious decision as well.
You really don't need it, by the way. I mean, if you use VI, if you use
go to VI, survive, survive. This will, if you let yourself use the arrow keys,
which nano does, then you can use this and it's actually easier than nano to start with VI.
I'm not even kidding. It's easier to start with VI than it is to start with nano. If you allow
yourself to use arrow keys just to get started. Okay, I've seen this. I've done this with nine
year olds. In fact, I have a $500 bounty that went unclaimed to my, my group at skill stacks for five
years for five to actually five years to 2016 on saying if anybody can find any organization on
planet earth that's teaching VI to nine year olds, I'll pay them the money and it never came through.
Because I challenged myself to be able to get people started really early. And I'm not even
kidding. I've had people using VI, the VI editor, as young as nine, nine and 10 years old, barely
could type and they were able to use it. It was great. So I don't want to hear your crap about
VI being hard or nobody can learn it or I can't exit. Oh, that's such a funny joke. No, it's not.
It's lame. It just shows that you don't actually know it. No, or they've even tried. You're just
following along with the rest of the sheep hating on VI. The worst are the people who are old and
call it a boomer tech and they'd have no clue what they're talking about. They have no clue.
And they've never been to UNIX filter. They don't even know what UNIX is. They can't tell you the
difference between UNIX and Linux. They, they, they have no historical background, but they love
throwing shit. All right. If you can tell, I'm a little sensitive about this because just by
saying I don't like NeoVim makes me like public enemy number one in a lot of circles. So, so
this is the reason I like it. It doesn't have better configuration. It has incompatible configuration.
In fact, one of the worst things about it is that you can't take your single configuration
Vim RC file and just send it with SCP over to another machine and be completely up and running.
You just can't do that, right? It, Vim does have plugin support, which we're going to cover
in two weeks on the boost on Sundays, but it, you know, try that with your Lua.
It just makes me laugh because it's so naive. It's just so naive. So anyway, did I, did I
spell it wrong? Yeah, there's probably tons of spelling mistakes here. I have to make a decision,
put data, put stuff out that's got spelling mistakes or not put anything else out. So
you're going to find a lot of low quality things like that. Thank you for letting me know though.
Better defaults. The second thing I need to compare is 42 different defaults. This is so
bad. I can't even tell you to change, to change a default from VI behavior is really, really bad
because you want to be able to know you can use the default when you get on the system.
Now there are cases where that does make sense. I mean, this is one of the few things where you
can copy your RC with you and be okay with it. With Tmux, I totally throw, you know,
disagree with that approach. And I always customize Tmux to behave like screen because
screen is a different thing. And we will cover that again in two weeks. And the boost when we
go through all the configuration files, multiple API and plugin support. This is actually a reason
not to use it. You don't want a lot of APIs and plugin support. It's a text editor. It's not an IDE.
NeoVim people try to make NeoVim into an IDE. It's not. It's not an IDE. Right? It's just not.
Change features. Every single feature that changes is ridiculous. Things like JSON,
decoder, salient when commands like jq exist. Again, just more evidence that it doesn't have
a clue what even exists out there. Missing legacy features. They dropped the if pearl,
which is really stupid. They removed the x support, the x command, they removed the view
command, vim diff and shell then removed like standard things that have been in VI since 1970
for no 76 for like no reason. 7880. Well, it's probably 82 actually. Again, incredible
decisions for people who never actually learned to use them. They don't know how they even took
out smile for no reason, which is just so dumb. It's like whatever. More accessible team. No,
their team is not more accessible there. The team is full of woke lords who if you disagree with
them will cancel your ass and do whatever the hell they want. They are worse than bra. Bra
the gate keeps, but at least he'll hear you out and then he's maintained a gatekeeping thing.
No, they're not. They're not. It's not a more accessible team. This is absolute bullshit.
External plugins in separate process, which is having a plugin at all is a bad idea.
So if you don't know why you don't understand Unix, better support for Lackardy. No, it doesn't
need more support for Lackardy. We already have other terminals and Lackardy is full of bugs.
So many bugs. I had to abandon it after I use it a year. Give them a healthy competition.
Giving them competition. They certainly cannot hurt. This is true. They did get
them to add, you know, multi threaded supports and some of the things like that.
And they got them to look at, you know, vim nine and thing, but I don't even use them nine because
why I'm not going to get it on any system I'm ever logged into until it becomes
the standard default on Ubuntu and Red Hat. I don't, I'm not interested in it.
It has pains. Yeah. If you're using pains in your VIM, you are really failing because you
could be using Tmux pains instead and use copy and paste across everything on your terminal
session instead of using having to boot up VI to do this. I see people use pains on VIM all the
time and it just is so sad because they have to use I three or something else to open up an
entirely separate terminal just to cup copy and paste from that terminal over into their VI
session because they use VI pains to manage their windows instead of Tmux. If they had used Tmux
from the very get go and they'd learned how to copy and paste, which by the way is 100%
compatible with screen, which dates back to the eighties. Now you have, now you have terminal
base copy and paste and your fingers know what to do on any system that's got screen or Tmux on it
and you don't have to depend on VI pains at all. That's an IDE thing. It's not a text editor thing.
So it has no business being there. I see people do it all the time. I just laugh and just laugh
because they don't know better. I was like, fine, do what you want. That's fine. It does. It has
tons of bugs and stuff. I don't even want to talk about it. It does have a prettier command line,
but people don't know that they can customize their VIM command line, you know, thing to look
like they want to as I have done. I don't know if you can see this, but mine has been completely
customized. I do not, I detest line numbers. They take up too much line space. They're distracting
and I would rather look down here for my line number when I need a line number. I don't do the
offsets or any of those things. Those are just personal preferences. I don't fault anybody for
doing something different than that. But why am I so harsh on you of them? They restart out more
objective. The reason is because they just really didn't even try and then they love to
throw stuff at the people and then they love to, they love to push their marketing on everybody
as being like the best newest thing and instead they're actually really, really hurting beginners.
Neil Vim is objectively bad for beginners. People who learn Neil Vim first constantly
complain to me afterwards when they realized they didn't need to do any of that and they could have
and they, they're compatible. You know, once they get an actual job doing something,
then they get in the business arena and they're like, oh my God, I had to like
learn Vim instead of Neil Vim and they start, you're right. And I'm just so tired of hearing it
because the people that push Neil Vim don't care about the people that they're helping.
They just want them to use their thing to make it popular and push it up. It's not even,
1.0 Neil Vim hasn't even been released. It's still beta software. No kidding. Go look at it.
Neil Vim, Neil Vim is not even production code yet. The latest version is, let's go see, maybe this
has changed. Let's go see if this has changed. It's like, the current stable release version is 0.7.
So, you know, and yeah, you can pay Bitcoin too because we think Bitcoin is a good idea.
Terraform has wide adoption before 1.02. All right, fine. I don't like Terraform either,
not the way other people do. We just blindly. I mean, Terraform is a tool just like anything,
right? And a lot of that stuff doesn't need to be done. But anyway, we don't want to talk about
Terraform right now. If you want to use Neil Vim, fine. I think you're a fool for choosing it,
especially if you're a beginner. Okay. Yeah. So, Neil Vim is an editor, right?
And, you know, I just look, I would just rather a nice looking website. That's the one thing
Neil Vim did right. That's what the creator of Vim had to say about Neil Vim. All right.
Loafer plugins and config is so good. I love it. This is somebody who knows who does not do
any kind of operations work. The only people that I would recommend even considering Neil Vim,
let me suggest this, okay? If you want to use Neil Vim, fine. But the people who need to be
considering Neil Vim are one of the people who know how to use Vim already, all right?
If you already know how to use Vim already and it doesn't meet your needs, too,
you're an extensive plugins user, which means that you don't care about being portable to
multiple systems. That means you're doing, you're doing like web development on one system and
you're never working on anything else. And most of the Twitch people who use Neil Vim, that explains
them. In fact, most of the people that use Neil Vim code in TypeScript, almost all of them. It's
almost like this like deal between TypeScript programmers and Neil Vim. They're like almost
always go hand in hand. And, you know, I don't get it. They also use all my ZShell. And they do
a lot of it from their Macs or they use i3 on a single machine. And they don't use multiple systems.
So if you're going to be, if you don't mind being locked down to a single computer where you can
download all your completely useless plugins, then fine. Go ahead and use it. But if there's
some extra thing that's there that you don't feel like you can do with a Unix filter script,
or, you know, just one of the basic Neil, basic Vim plugs using the plug utility, which is far
more portable, by the way. The plug utility actually uses get to manage plugins. It's just
more organized and across the board and it's not in Lua. If you're obsessed with Lua, then maybe,
yeah, maybe you want to have Neil Vim be on your local system. But otherwise, I think it's a huge
mistake. And I would rather use VS Code before I would use Neil Vim because that's an IDE that has
far more adoption. It's it can do way more things locally. It might take five minutes to boot up with,
you know, 10 plugins loaded. But I, you know, if I'm going to boot up an ID and leave it running
all the time, then I would go with VS Code or JetBrains or any number of things that are
way, way, way better than Neil Vim for doing, you know, management of 10,000, you know, lines
of code, code bases and stuff like that where Vim starts to fall on its face. Vim wasn't made for
that, right? It's just a text editor. But, but if you really, really, really like the Vim experience
and you want, for some reason, you want the monolithic, you know, advantages of a big thing
with lots of plugins, then maybe Neil Vim is the thing. And the thing I find funny, though, is we
just had in the chat just now today, we had somebody complain about the speed of Neil Vim
after they got a certain number of plugins in there. So, I mean, at that point, you know,
why are you doing it? If it takes like 60 seconds or 30 seconds to even just start your editor,
man, you've really shot yourself from your foot in my world. People, people tell me all the time,
why are you like, are we done? Alright, okay. People tell me all the time, like, why are you
booting up and then booting down? Why are you going out in and out of your editor all the time?
I'm like, because I can't, right? You can't, that's what VIA is supposed to be. It's supposed to be
a wicked fast editor that you can pull up any time and close out and then blow up something else,
try to do that in Neil Vim or Emacs, forget it, right? And that's why when you pull up Emacs,
you got to have like everything loaded, you got to like fuzzy find some other file and all this
stuff. It's because it's completely designed for a different type of work interface. So, this is
not my preference, specifically for beginners. That was a long block of text. Yes. And that's
all I have to say about that. So, let's move to a different topic. Maybe we can find one that I
won't rant about so hardly. But, you know, I feel like we've talked about this one. I kind of,
you know, kind of over talked about it. All right. So, let's go to my messy room again. I don't
even care. I just stream with my messy room now. What's a Unix filter? Somebody was asking what
a new Unix filter is. Okay. So, let's talk about Unix filter. What's a Unix filter?
And I'm going to give you the short version of this. This is all covered in the boost,
but people ask these questions. So, I'm going to cover it really quickly.
Kind of the TLDR. That was not a TLDR, but when somebody asked me why I hate something, I feel
sort of irresponsible just saying because it sucks and letting it go. So, you're going to get a
longer answer for me when I don't like something and I'm possibly going to be offending people
because I want you to see where I'm coming from as opposed to just saying, well, he's just a hater.
Right? I'm not. I really wish. In fact, when I found out that it wasn't using Vim script and it
wasn't, you know, a good faith extension of a fork of Vim, I started getting sad because I kind of
wanted it to be that because they have a point about Vim being locked down and non-community
driven and stuff. They have a real solid point on that. But the rest of it is just trash.
So, I was like really frustrated because I was hoping it was going to be more than that.
All right. So, what's a UNIX filter and why should I care?
I've answered this question so many times, but I'm going to try to get fast at answering a UNIX
filter. All right. A UNIX filter is based on the UNIX philosophy in general. So, I mean,
you can go search the internet and it'll get a faster answer, right? What is a UNIX filter?
All right. So, and it's covered in the boost, I think on like the third week, I want to say.
Let's go see what we have. Pipes and filters. In this chapter, what makes UNIX filter a powerful
concept for processing data? What have you done with UNIX filters? How can you tune UNIX
filter into a network server? Pipes and filters and UNIX and UNIX. So, Pipes and filters are the
thing that they're like the implementation or the manifestation of the UNIX philosophy that
makes it really, really powerful. And what it allows you to do is chain things together. And
speaking of which, even though there's not any UNIX filters, I am going to plug something that
someone brought to my attention called the command challenge. So, this is cmdchallenge.com. I think
it was Five Shot who showed me this. This is ridiculously addicting. And if you want to learn
about the power, you want to practice the powerful combination of different UNIX filters,
or UNIX commands, or command filters, whatever you want to call them, into pipelines, you can come
here and try this. I was ridiculously surprised to discover that this thing is actually sending
code straight to a UNIX system on the back end and has completion and everything in it so that
when you run it, you get this solid output. It's really, really great. And I don't know who showed
us this, but I am super happy with it. So, this is a more of a script. I tend to make my command
lines more into the bash scripts than pipelines with Setanock. I really detest Setanock.
Ock is particular. I really hate it. I would rather do it with Perl or just bash or whatever.
So, because I don't like all the sub-processes with that, but that's a complicated question. So,
this is one of our answers. You can go back in the history. I learned about the factor command,
which just takes a bunch of random numbers. I want you to see these because this is a sample
of a pipe. So, you have something piping into something else. So, in this case, I'm using
this site. Normally, I use my terminal, but I want you to see, oh, we're not on the right one. We
have to go. We have to go. So, here's the first one. Your challenge is to print Hello World to
the terminal in a single command. I'm using this because I really want you to use this. I think
this is a great tool. So, obviously, installing a terminal is great as well, but if you don't have
that in a school or something, this is really great. So, how would you do that? Echo Hello World.
So, that's the Unix command, right? Access. Let's see. Wait. What's this one?
For the current working directory, list all of the names, one for file. All right. So,
but at a certain level, you start getting to the point where you need to combine things together,
and that is when you start using a pipeline. Okay. So, and I covered this in the boost. Let
me see. So, strictly speaking, a Unix filter is any executable script or compiled program
that takes as standard input lines or any data, but usually lines, and does something to those lines
and then produces output, right? And if you know about map filter reduce,
it's that's what it is. In fact, the Unix command line is very functional.
Maybe because, you know, it's not always a Unix filter. Sometimes it might be a Unix map, right?
It's going to take a line. It's going to modify that line and do something with it on the output
and send it on its way. That's a very functional approach. So, that's what a Unix filter is.
And if it has an argument, a Unix filter often will do something to the file or it will take
something from its input and go. The simplest one, of course, is cat. So, if you were to do
cat build, it just dumps out the build command one line at a time, as you can see, right?
So, if I wanted to do that, I could cat build. This is a bad idea because most of these,
using cat at the beginning of a pipeline is usually a bad idea because you can usually
send a file to it. But you could do that. You could pass that to LC.
What is the line number one? I forget. I never use it. It's not LN. It's...
What is it? What is the one that shows the line numbers? You guys remember? I don't use that much.
Line numbers on Unix terminal. NL? I thought it was NL. Maybe I don't have it.
It is NL. Okay. So, number line. Okay. So, there we go. So, NL is a good example of a
command that is a filter. So, if we just do cat build, it takes the file and doesn't do anything to
it. It just spits it out. And we pipe that into the input of NL. And NL does one transformation.
It puts the line number at the beginning of the line. That's it, right? And you can continue to
go on to this. You can say, I want to grep out the lines that begin with the one, for example.
Oops. There are none, apparently. Well, actually, no, because it would be space one.
Right? Let me see. What would it be? It would be one, two, three, four, one. I'm just being dumb
here. Okay. So, here's all the lines that have a one in the second place. There we go. There's
all the lines that begin with one. And we can pipe that into more. And then we have only the line
numbers that begin with one. I mean, for some dumb reason. Now, why do you care? So, this is an
example of pipelining or connecting together Unix filter commands that take, that usually sit
around, like, if you just use cat by itself or any standard filter, it'll wait around for you to
type something in. You can say, like, okay, something. And then you see another thing, right?
Until you say control D and then stop, right? So, a Unix filter takes as its input standard input,
but if there's nothing sent to its standard input, it will do something, it will either
sit around and wait for standard input, or it will take a file or the name of a file to do
something with, right? And you can send stuff to these programs. So, we can do, like, I could do
nl build, and that will give me my whole script. Let's zoom in, by the way. So, I can do nl build,
and we get everything, right? Or, if I wanted to send build as standard input, I could do it like
that. If I wanted to send, you know, just a string into it, I could send some, I don't think we can
do, I don't think we can do this, but let's try. I think, I think I don't think it observes,
yeah, it only does it as one line. So, there's just, so this idea of chaining together Unix
filter commands is very powerful. So, your next question is, well, what the hell does that have
to do with NeoVim, right? Or any of those kind of things. And for that, I'm going to refer you to
vi magic, rwx.gg slash vi magic. And when you go here, you'll see what I mean. Now, I always
demonstrate, I've demonstrated this so many times, that it's getting kind of old, right?
Well, let's say, let's say, I don't know, let's say we're editing, what was the repo we just made?
Questions, there we go. So, let's say we're in here, and I want to add another date, all right?
So, I've created a program, hnow, I've created a very, very, very, very simple
Unix filter with using shell, not even a bash shell. And, yeah. And so, here we have, we're
echoing it. So, and it says, all it does is echo the current thing. You're like, well, why would I
do that, right? Because I could have just typed it in here. I can type echo, pound, pound, space,
now, which is another command. This is why we, this is the Unix way, build up a bunch of commands
that operate together. And now, I can run this whole thing, right? I can bang, bang, and then
send that to bash, and we get that. Well, let's say I want to do it all the time, right? Now,
I just have to put it into a script, and I type hnow, and I get it. If I type now, I get the input
of now, it replaces the current line with the now time stamp, which is off because my VM's off
at the time. But, oh well, we should have bash script. Well, yeah, I mean, they're similar, right?
So, but the point is, is that you build up a collection of things that don't just work in
VI. They work everywhere, right? And you can combine them together. So, the now here is here,
right? Now, it is doing the time zone thing, which is, which is fine. I see that it's,
it's doing the, the base, I got to change my base time zone, but so you see what it's doing. It's
also using POSIX shell instead of bash. But the point is, the dollar sign, yeah, it's just,
it's just reading it all in there. So, so let's give you another example of that. I mean, if you
want, I can try. I don't know if this is the one. Okay, here we go. Load. Yes. All right. So,
we could also do this. We could say I want to count from one to 10 for I in, you know, this is not
a UNIX filter, but I could put it in a UNIX filter, right? What if I wanted to make, I'm inside of
EI and let's say I wanted to make these things, let's say I want to number those, right? I can do
bang, bang, NL and I can automatically number them. You see what I just did? So, exclamation point,
right curly bracket, and then pass that, and then pass that entire thing to NL, which reads from
the standard input. And, and I can do that and it will put the things there. I can also do, so all
of these are UNIX filters. Every single one is a UNIX filter. I can use BC, which is a calculator,
to do complicated math for me. I can say scale equals two, and I can say two thirds,
and I can do bang, bang, BC, and we get 166.66, right? I can have a series of,
of, you know, different things. If I wanted to see the factorial of a whole bunch of numbers here,
right? If I want to see which ones have factorials, I can pass that entire thing to the factor command,
and now I get the factorials of all of those lines immediately in my Vim without leaving it. Why?
There's no plugins involved at all. Nothing I did has any plugin in it at all. And this is what I
mean by UNIX filters, and this is why you should care. Because not only does it inform and make you
a powerful VI user, but on any system, by the way, since 1976, or whatever, I can't remember when
Epic was, but it also makes it so that you can string those and combine those together
in your scripts directory, or your monolith if you want. Like I do with Z, you know, my ZPOMO.
ZPOMO, I have a monolith that's got all of my commands in it that will run on any operating
system, including Windows, that I can take it over there if I want to get unique timestamps,
right? I can do unique ISONAN, I want to get an ISOSEC timestamp, and I can use that,
and now I can use that on any system, and I can use the same UNIX philosophy on PowerShell,
if I want, and it doesn't matter, because I can go here and go Z, unique ISOSEC,
bang bang, oops, sorry, bang bang bash, and because Z is a UNIX filter, as are all those
commands, I can replace it with the current UNIX filter. So this, that's what I'm talking about
with that kind of thing. How are we on time? So we have about, we have another 10 minutes
for questions. Let me go scroll down and see if we missed any good ones that were related to this.
So we have stuff about Dota 3 coming out, that's interesting. I want to talk about that maybe
later. I'm playing Dota, let's talk about Dota 3. We talked about the boost, and we did VI survive.
Thank you for the spelling mistake correction. VI, Vim, Neil Vim, and our text editors in Linux,
please correct me if I'm wrong. Yes, they are. That's what they are. Oh, I know what Vim is,
but none of the other things. They're, yeah, well, they're all VI Vim, yeah.
Gip range, if you have a lot of Vim, you're just a spare. What is the Vim version in widespread use?
Eight. Eight is the most widespread of use, but they barely upgraded from seven to eight, and
I actually had to change my VMRC, and in either this week or next week, next Sunday,
either this Sunday or next Sunday, we're going to go through Vim configuration.
And my Vim configuration, the standard thing to do when you're a beginner is to steal somebody
else's Vim config and modify it to your own liking, because nobody's going to learn all that in one
sitting. There's a lot of Vim script in there, which I've never really fully learned, but I know
enough to be dangerous when they're, and that's really all you need. And then, but I did have to
change my, my Vim script to conditionally ask, do I have support for this? Because I had to
downgrade it, my VMRC to work with version seven instead of eight, because it was required by my
environment. And, you know, considering the fact that my VIM eight VMRC was too new for our enterprise
login jump systems, and I had to kindly ask that they maybe put VIM eight on there to which they
finally said, okay, you know, considering that, just for a second, compare that to what the kind
of cluster, you know, that you would have if you had to deal with getting Neo Vim to work over there
with Lua. The system administrators that I work with would literally laugh in your face if you
asked for Neo Vim support on the system. They would laugh in you, they would laugh at you,
like straight up, they'd be like, what do you mean you need Neo Vim on our jump boxes? No.
So, you know, that might not be the kind of company you want to work for. And maybe you want to
work for a company that has Neo Vim and all the things, and that's fine. But if you want to be
successful in any enterprise, including the Fortune 500, none of which is probably going to allow you
to use Neo Vim on their host systems, then, you know, you might want to reconsider that choice.
I just installed my Linux and for the life of me, I can't get Korean to work.
It shows up as whatever I installed KOL. I don't know, I don't have any ideas for the Korean thing.
I don't have any ideas at all for you. It's probably, it could be anything, it could be,
it could be Vim, it could be Tmux, it could be your terminal software. I mean, there's a number
of things it could be, but I don't know. I'm actually able to do Russian without a problem.
So, I don't, I don't know.
Okay, what are you? It's actually you.
Wait, where is it?
I don't know how to do Krakow. Oh, there it is.
That's not it though. That's got to have an accent on it. I don't know what to do. Anyway,
so I can tell you this, Windows Preview Terminal plus Tmux plus Vim
works for international stuff. Yeah, and I don't have to do any internationalization at all. It
just works. That did not work, by the way, when I was doing Linux desktop. Yeah, when I was using
the Linux desktop, none of that worked. So, we talked about Bonsai a little bit. I love the
command challenge. Yes, we talked about that. Problem with writing these show in liners is
always the escaping. Yo, hell yeah. That's why I don't like set an awk. I'm glad you brought that up.
I'm glad you brought that up because that is why I hate them. The escaping is a disaster
when it comes to these things. It really is, and that's why I don't like it. I agree. I'm glad
you said that. I'm glad you said that. I'm glad you said that because it's so annoying. Yeah,
you have to do the weird stuff. If you're going to do that, just use Bash, which doesn't do the
escaping as badly. Oh, I see what you did there, Ruru, with the something. That's cool,
because it puts the literals in there. That's cool. All right. The dollar sign, yep,
and we have the dollar sign on Tim. How do you renumber the list? If you add a new item in
the middle of the list, how do you renumber the list? You just renumber it. Yeah, actually,
if you're going to do that, you should probably use Markdown. This is a short one I can answer
real quick. You can do this. If you actually want to do line numbering, I actually don't suggest
that you use NL because you can't rely number. You'd have to online number, which I don't know
if you can do that. If you want to do that kind of thing, I would stick with a Markdown solution,
and I would do this. So capital I, one dot, and that's Markdown. And then you can do this.
If you want to render it, I have a Pandoc renderer. It's called TXT, and that does the thing.
And if I put this one up here and put that down there, I select the whole thing, do TXT,
and it re-does the line numbers because it re-renders the Markdown.
And if you want to see the content of my TXT filter, that's all. That's all it is.
Pandoc dash T plane, wrap none. The end. That's it. This is why, my friends, this is why
learning the Unix filter approach is so powerful. Make sure you do exec there, by the way,
is so powerful. It's so powerful because you don't have, if I had, can you imagine the kind
of Lua plugin I would have to make to make Pandoc integration even work in Neil Vim?
And then I have to make sure that the plugin is managed in the right place and everything.
You can put it in a pre-commit hook. Absolutely. This is because you're, the really great thing
about using the Unix philosophy is once you get it down and you start using it everywhere,
you start fixing problems you didn't even know you had. And so things like get pre-commit
start to work. And this over here, imagine if you locked away all of this and all of this amazing
filter-ness inside of a Lua plugin that only works from Vim. Could you use it as a get-pre-commit hook?
No. You'd have to make some other filter. You'd have to make it descriptive by that time. You're
like, well, why didn't I just do that in the first place? And by the way, these filters can be written
in Lua. Okay. So if you're a Lua fan and you know you're going to have Lua on your system,
write your Unix filters in Lua. Write them in Lua. Who cares? I think it's an overkill to do that,
but you certainly can't. It doesn't matter. I'm doing a lot of my filters and go because I want
to put them all in one executable that I can put on any target system. This one is going to be
ported eventually. All my little Unix filters are all going to get ported over into my monolith
because I want to take it on any system anytime and I don't want to have to deal with it.
All the individual files. But it's nice having those individual files to kind of flesh out
what is your building and then you can put them all in there and you're good to go.
By the way, this goes for anything, right? So you could say some thing. If you want to do some
like dynamic HTML, right? You could say a title here, right? And so we just did a conversation
about what those are. So watch, I'm going to send the entire, this entire part down here.
Let's say you want to do live HTML development, right? So you go bang, G, capital G, send that
entire thing to, I have it set to text right now, but if I wanted to, I could do Pandoc.
I could just send it to Pandoc and Pandoc by default renders it as HTML. So now I get HTML.
Do you want me to do that again? Why does that work? Because Pandoc is a Unix filter,
just like everything else, because it's just buying for Unix. So I can send, in fact, I can send
this entire document to HTML because they bang capital G and send it to Pandoc and it will convert
the whole thing out. Let me tell you a case where that is really useful. So let's say,
let's say you're doing, I mean, tables, nobody wants to do tables in HTML. They suck, right?
So, you know, actually, this is such a thing, I almost want to keep
like an extra markdown version of it. I mean, you can write, I did this, there's a video about
making a static site generator in 10 lines of bash with Pandoc. There's a video out there about that.
Let me send that to you. Viz static site generator, I think, and that'll help you find it.
Anyway, and it will show you this kind of thing because, I mean, nobody wants to do a table,
right? So we could say day, we could say name or something, right? And you would say Wednesday,
Rob, and then we need, I don't remember my table stuff very much, but, you know, I mean,
it's a pain, right? So Tuesday, Torus will say it's days to do dishes or something. So we have
this table. Now I want to make it into an HTML table. Pandoc. Boom. There's my HTML table completely
rendered. Now try that in VS Code, by the way. Can't do it. You cannot do Unix filters in VS Code.
This is the single biggest reason I don't use VS Code. VS Code has a nice terminal in it. It has
those nice previewers and stuff, but you cannot send the content, the number of lines from a file
to the command line and replace those lines with the output of the command,
which means that VS Code is fundamentally, you know, against the Unix idea of doing this kind
of thing. And who wants to do that? I mean, I just want to do this and have it just work.
You know, but some people want that, and I guess if you want more live previews, whatever. So, you
know, and that might be actually an argument to use NeoVim because NeoVim is way better at VS Code
for using Unix filters because it's VI. It's VIM at the end of the day, even though it makes a lot of
dubious decisions about how to extend VIM. That's going to be it for today. They will allow
they will allow Emacs and yes. Yeah, eventually they'll put Emacs out there probably. I want to
see it like to be English. Don't know about that one. Play the Dota theme on an electric
file and you might like it. I ought to try that. I need a Russian keyboard. I don't have a Russian
keyboard. There's a really great Russian American keyboard, which is way better. It actually takes
combinations like Y and A and that turns into Yaw and stuff. So, let's see. This is the font.
That might be it. I'm playing a pre-kick commit hook. Yes. Minerva is showing us what a filter is.
Let's see. Quick question about... Wait, where is it? Let's see if I... Quick question by VI
commands. When I go to the end of a file, the cursor never goes beyond the last letter. So,
when I push to input text, I have to type between the last letter and delete it later. Any solution
to this? I just... Oh, let me see if I understand your question. This is... This should be a fast
question. So, we'll end with this one, but this is a good question. Eight month subscriber. Thank you
for that. I think for that hypno slimy toad, what a great name that is.
All right. So, is it A for append or O to append a line? When I get to the end of a line, the
cursor never goes beyond the last letter. So, when I push to input... Yeah, you go here and you push
I and it does before. Yeah, you want A here. I actually use capital A. My favorite is capital A
because I can be anywhere in the line and do capital A and it will start putting stuff at the end.
I don't use A very much because I'm never at the end of the file,
ever. And capital A would work there, too. If you're at the end, capital A would also work.
I am extremely lazy VI user. So, for example, all the extra navigation things... No, I do...
I do this for everything. If I want to delete to beyond, I'll do D slash beyond and it'll
delete everything. I search for everything. The most common thing that I use in VI is
slash for searching for things and dot for repeating by far. It's by far the most frequent.
That and deleting paragraphs with DAP or yanking paragraphs with YAP. Those are probably my most
undo, of course. So, yeah, I use capital A for everything. I use capital A for all that stuff.
If you want to... I thought you were stuck here and want to add something to line after that.
People are like, what do I do? I can't get to that after the line and that's O.
So, that's O. Another one I never use is big O because big O adds a line right above,
which is kind of useful, but I don't ever use that. So, hopefully that'll give you some things
to look at and more efficient. Well, lazy and efficient are kind of synonyms in the Linux world.
We use them affectionately. We say lazy kind of affectionately in this world.
Lazy programmers are the best programmers. It's like a long time thing.
What do I think about GPG? I had to use it today with my new job. It's not for user-friendly. Oh,
my God, no. In fact, let's do GPG, Frank. Let's do that question again.
How do I make line comments so quickly? These line comments?
That's when I keep getting sucked into answering more questions. I can't answer GPG right now,
my friend. It's just too much to answer. We're going to do a whole day on GPG in the booth,
so stay tuned on that one. What does you mean line comments? Do you mean like...
But with a GUI so you don't have to memorize commands, that would defeat the purpose of them.
That would not work. That wouldn't be them if you did that. There is a certain...
If we're going to do that, just use the mouse, period, then use something else. We're still going.
We're almost done. No, leave it out. I'm about done. I'm getting yelled at, guys.
I got... She had tone in that comment, which means she's annoyed. So I got to go.
So, Ping, ask me that question tomorrow. I got to go.
How does it add them? Well, Vim automatically adds a comment when it wraps.
Oh, how do I do that? It's just a CMT. It's another filter.
All right. Let's comment this, right?
Whatever, CMT. That's a comment. It's another filter. This is it. That's it.
It reads from the line. We did this, by the way, and it just echoes
with a comment line. And if you want to use a different thing in the front, it does that.
So that's how you do that. Okay. And you can undo it. I actually cheat with this all the time,
and I use it to add extra spaces sometimes when I want to do cheating. I just do indentation.
People tell me to use visual mode. I'm like, screw that because I have exact control over it.
I don't have to do any selection. I don't know why people use visual mode in VI at all.
It makes me so tired watching them. I'm like, really? Because I could have just done that.
And I couldn't do this. What's the go comment I could do?
Whoopsie. CMT. I mean, you want to put tabs there. By the way, I also do that because I'm used to
doing these filter commands. Obviously, I could do that using the long-winded S space,
space, space, space, g, error. No, that's like way too annoying. CMT, done. Right? I also have a
PPP and a YYY for making my own buffers, so I don't have to use the buffers in Vim because I hate
them. So call me lazy, but that's what I do. Invisibill, I like our server. Yeah, I hate visual
mode. I've always hated it. It's not in VI even, by the way. It's not supported in VI at all.
So you need to learn those other methods as well, or you're dead. So yeah. Anyway, that's it for this
video. Thank you so much for tuning in and saying hi to us and putting up with my little rants.
Hopefully, I didn't make anybody too angry. As usual, I'm open to new information and change
my opinions all the time based on what other people bring to the table, and I think that people
here could probably tell you that that's true. I do want to go catch the sunset tonight, so I'm
going to be woofing down some food, and I may make it to the sunset in time. We might not make it
tonight, but well, I'm going to go out there anyway, and we'll be doing an IRL stream relatively
soon after this. So within the next half an hour or so, if you want to come back for that. I am
going to go ahead though, and cancel to stop the video now, and then
