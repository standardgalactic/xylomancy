I assume that everyone in the room knows something about BFO.
What I'm going to do now is provide a basic introduction to the contents of BFO, a basic
introduction to how it's being used and by whom and why, a basic introduction to what's
happening in Washington DC as we speak almost, to make BFO what we hope will be something
like the government ontology or rather the top level of the government ontology and by
that I do not mean that the only government is the one that's in Washington DC.
BFO is used by many groups and when people start building an ontology for a specific
purpose they very often examine different top level ontologies.
BFO is just one of a small number and some of them then say that they reject using BFO
because it does X and if you check you will find that usually it doesn't do X.
In other words they misunderstood something in BFO and thought they had a reason for not
using it.
Now one reason that people give for not using BFO is that BFO is a realist ontology and
I'm going to explain what that means and why some people think that that's a bad thing
and they're not mistaken and there are reasons why a realist ontology might be a bad thing.
Then I'll go over why people think they need ontologies and specifically top level ontologies.
I'll give some examples of successes and failures and I'll try and give a sufficient survey
that you will all go away feeling that you've learned something.
Alright so what does it mean that an ontology is a realist ontology?
So I need to start by saying that when we say BFO is a top level ontology what that
means is that it can be applied to any domain whatsoever.
Now in creating the ISO standard we had to specify what that might mean can be applied
to any domain whatsoever.
If we have time today you will see that there are domains which BFO cannot be applied to
and just I'll give you a clue it begins with the letter Q and it's part of physics.
We have three seconds to work out that.
So BFO is not entirely the main neutral.
I think now I would say that it's the main neutral for all areas of common sense and
all areas of classical physics and all areas where we collect empirical data and we'll
leave Q to one side for the moment.
Now secondly we need to mention the requirement that BFO is realist in the sense that BFO requires
that all the classes in BFO have instances.
So we have the class object and I am an instance of the class object and I exist in space and
time.
Now I will explain why some people might think that we do not want to insist that all classes
have instances.
Now so BFO as all the classes have instances we're not now talking about classes like protein
or person or planet we're talking about classes like generically dependent continuum which
we'll come back to later on.
All BFO classes have instances.
Now people use BFO as a domain neutral ontology because it provides a good starting point
we think for making domain specific ontologies.
So if we take the cell ontology the cell ontology is all about cells and all cells are objects
in the BFO sense of object.
And so all cells in the entire universe and in the entire history of the entire universe
are instances of the BFO class object.
Now a realist ontology is only interested in classes which have instances and when I
say have I might mean or have and I'm not going to say anything about the future.
We can worry about that later.
All right now we have evidence that cells exist.
We have evidence that instances of the class cell exist and therefore we have evidence
that instances of the BFO class object exist.
They all exist in space and time and we know this because that's what established science
says and we want BFO ontologies to be consistent with established science.
Some people I'm not in France now and so I won't mention French philosophers but some
people think that it's actually not a good criterion or something that it should be
conformant to established science.
I did say I wouldn't mention French philosophers so I won't.
Now but there are for different reasons the BFO conformant domain ontologies which do
not satisfy the principle that all classes have to be instantiated by instances in space
and time.
For instance you might be building an ontology for military planning which is all about the
future and future things might never exist.
So some plans are realized that entities inscribed by those plans and by the corresponding
plan ontologies then exist but many plans are not realized and you want a planning ontology
to work independently of whether the plans that you use the ontology to describe or represent
or define are actually realized.
So planning is a good example where the realist ontology approach in the narrow sense does
not work.
Another example and so some people like to build ontologies of fiction or myth.
I don't want to talk about those frequently.
But there are chemists who try to synthesize molecules which never get synthesized and
so a good chemistry ontology probably would have to include classes which have no instances
either in the past or in the present or in the future because there are quite conceivably
molecule diagrams which are chemically legal but which are never actually synthesized because
they're not synthesizable.
But in fact this fact is not a problem for BFO.
So BFO encourages people to build BFO conformant domain ontologies which satisfy the instantiation
principle but people can build other ontologies and they would still be conformant with BFO.
Realism is a kind of metaphysical slogan.
I think it's a very useful slogan when you're building ontologies.
You don't want to build ontologies which are not about the real world but if you have to
build ontologies for unsynthesized molecules you can still use BFO and it works perfectly
well.
And in fact we have now methods which we've developed to help people who are working
in areas where for instance plans are not legalized.
Just for those people who want to follow up on this this goes under the heading of the
modal relation ontology.
The modal relation ontology is an extension of BFO which works while working with things
like plans and other kinds of application domains where instantiation is not universal.
Alright this is BFO it's quite small.
I'm not going to go through every single piece of it.
What we have here is what we call the backbone taxonomy of BFO in other words it is a hierarchy.
Now there are other relations in BFO which are lateral so these are vertical relations
they go from the bottom to the top.
So every Fiat surface is a continual Fiat boundary.
I'll explain some of what that means in a minute.
That is our relation takes you from the bottom of BFO all the way to the very top because
everything every class in BFO is a subclass of the class entity.
Now but there are relations such as is part of which does not go from bottom to top it
goes from one side to the other and there are other lateral relations like that and
an ontology in our view is a backbone taxonomy plus lateral relations so the taxonomy is
ISA and then you have maybe many lateral relations sometimes called object properties which connect
the classes together in different ways.
So I just give you examples immaterial entity in BFO is a subclass of independent continuant
a continuant is something which exists through time and independent continuant is something
which does not require a bearer in which it inheres.
Qualities for instance require bearers so the redness of your cheek can only exist if
you exist you are an independent continuant the redness is a dependent continuant the
redness of your cheek is an instance of the kind of redness which is an instant which
is a subkind of the BFO kind quality.
All right so immaterial entities for BFO include boundaries are not made in matter spatial
regions that are also not made of matter and sites and for the sake of saving time I would
just say that holes with an H are the principal examples of sites so the interior of my mouth
the interior of this room are both examples of sites and I will take one more example
realizable entity a quality is not realizable if you have a red cheek you just have a red
cheek and that's it but a potential a disposition or a function are realizable.
So if the function of my iPhone is to send and receive telephone messages that function
is realized occasionally but it's not always realized and so for some of the time it's
just a realizable and I'll be talking more about realisables in the course of the rest
of this presentation and then I'll say something about the object pass so my arm is a part
of me but it's not an object it's a fiat part because the line between the plane between
my arm and the rest of me is a matter of our fiat in other words our decision.
So fiat parts are parts which reflect decisions that that's somewhat simplified but you can
illustrate it by saying that everything to the left of this boundary here is the smoking
zone and then on the right of this line is the non-smoking zone so that's a fiat boundary
now the boundary between Poland and Germany is also a fiat boundary.
All right so now ontology was used by philosophers so they tell me for a long time starting in
about 1652 in Germany as a latin translation of or a latin word to correspond to the Greek
word metaphysics in around 1970 it started to be used by AI and robotics scientists primarily
in Stanford and basically they thought that the way to train a robot to behave like a
human being would be to describe human common sense using first order logic and then feed
the first order logic description of human common sense into the robot and then the robot
would be able to mimic human behavior and the behavior that they used as their prime example
was buying sorry not buying salad oh yeah buying salad from a salad bar this was the era of salad
bars and so the robot would have to know how to pick up tomatoes using plastic it implements without
squashing the tomato too much and it would have to learn that you can you can knock into a chair
and you don't need to apologize to the chair but if you knock into a human being you do need to
apologize those were the things that the robot had to learn the formal the first order logic
formal representation of human common sense was called an ontology sometimes it was called a folk
ontology and that the word ontology they almost certainly took over from quine so those of you
who know some philosophy who are in the room will know that quine had a very special approach to
ontology which was it led to the coinage of this word folk ontology and then the next step
was the fact that you have different groups building ontologies and they needed to be able to
compare them and so they invented something called knowledge interchange format and by a
long long set of stages the knowledge interchange format eventually became what we now call owl
all right now a famous man in all of this another Stanford man from this group who is
still alive and still selling his thing um it was Doug Doug Leonard who created a big database
called psych which is short for encyclopedia he now sometimes calls psych an ontology
and it's full of folk knowledge such as um Albany is the capital of New York state
and other such pieces of knowledge and as I say he now calls it an ontology and it's
sometimes regarded as being a successful very large ontology it's bfo is a very small ontology
we don't try and describe everything he is basically trying to describe everything
including the virgin birth there are facts not sure there are facts but the virgin birth is
an object which is described at some length in the axioms of psych one big problem with psych
is that the axioms are not consistent and Doug Leonard says that's exactly if it should be because
common sense is not consistent all right come back to that later so the the the first really
interesting contribution to all of this was by Patrick Hayes in his naive physics manifesto
which described the methodology of robotics that I just hinted at but he described it in a
formal theoretical way and I believe that it was Patrick Hayes's naive physics manifesto
and accompanied by a paper called ontology of liquid liquids which is the true
origin of modern-day ontology and and they're still really interesting pieces and then we get
knowledge interchange format Tom Gruber was an important person in the knowledge interchange
format world and he he it was the baguette of Siri so you all have Siri is an ontology app
so you all have ontologies in your pockets like it or not and this is what an ontology in
Siri might look like so you have universal for things like real event or movie event and then
you have instances of things like cities where you might see movies or eat meals and this is this
is what I was talking about when I said that all classes in BFO have instances the ancient instances
are the particulars the cities particulars it codes and so on the classes are the universals which are
in the top of the diagram here all right now the knowledge information format is is being
made more and more mature and Tim Berners-Lee and his colleagues in 1994
introduced the idea of the semantic web the idea was that now that we have
a somewhat coherent version of owl the web ontology language which is a kind of formalized
version of HTML it's a long long gap between HTML and owl but by 1994 we have something
which can serve as the basis for a new kind of web a semantic web and it's semantic because
it's described using a formal language with a semantics in the classical modern model
theoretic sense and it would be nice if we had a semantic web wouldn't it said the people in the
paper in Scientific American in 1994 and I agree it would be nice but we don't have anything like
we have a lot of things going on under the heading of semantic web too many things going on under the
heading of semantic web and some of it is good and then we have the resource description framework
then we have protege and then we have the first real version of owl in 2004 and and then we have
the whoosh of linked open data and nowadays we have knowledge graphs some of which is really good
all right now but they all failed all of those ontologies are built including psych if you look
at it they all failed so most semantic web ontologies fail and it's hard to think of
ones that succeed and there are lots of reasons why they fail one reason it's easy to build the
damn things and so everybody wants to build one and so everybody has their own ontologies
and then people say oh ontology no they have they're brittle they you use them once and then
you drop them because they're obviously useless and so there are many reasons why they fail
there were bad languages out there I mean really bad language
and and they didn't understand what definitions were and people today don't understand what
definitions are and the ontologies were a poor quality no one there was no documentation
the all the links are broken the dolce uh it is not bad I'm not including dolce under this
heading it's bad under other headings but then so is bfo um so they're all bad and this was ontology
winter and I know I know that we are now and thanks to this gentleman here we're in ontology high
summer and but there will be another winter he won't live forever um all right now so now I come
into the picture sort of you know is he my throat it's got almost better um in the 1990s we had the
human genome project now the human genome project was many projects and there were many institutions
across the planet who were collecting genomic and proteomic and toxicogenomics and so on data
and they were creating registries of these data and there were there was panic
because every country had its own collection of registries and even within a single country
the registries would not be collected and described in a consistent way and this was
that this was going to correct all the goals of the human genome project because it meant that we
really didn't have a consistent representation of all the different human and fly and so on genomes
and all the proteomes and so on and um and so a group of four biologists all of them
high up in the gene uh genome project world uh one of them was a a fly person one of them was
a mouse person one of them was a fish person and the other was a person person and and this was in
I believe it was in Montreal it's either in Montreal or in Melbourne I forget um they're in a pub
the fly person Michael Ashburner who is my hero um in every possible way and he's still alive but
he's very sick Michael Ashburner was basically the head of the fly genome and he wrote down on the
back of a of a cigarette packet with a heavy smoker um which is relevant still because he is
still alive but only just uh he wrote down a list of gene functions for instance cell division might
be on the list um and he said this list is going to serve as the basis for for creating order in
all of these registers they're all going to use these words to describe gene function now there are
I don't know 13 000 items on the list of gene functions or molecular functions they're called
and then there are other items on two other lists for biological processes and for
cellular constituents so that that that list on the back of that cigarette packet
became the gene ontology and the gene ontology has gone from strength to strength ever since
upwards of three billion dollars have been spent on the gene ontology not on building the ontology
but on using it to regiment all the data all the data in biology practically speaking gets touched
somehow by the gene ontology all right so this was the first success in the ontology world
in um and then round because of this success and because of well no the proposition actually was not
causing problems to this day they had their own language for building ontologies which was a simple
database language and I've forgotten what it's called and anyone remind me
anyway they have their own language they use owl now
um so they were building ontology so we have the gene ontology it's really good now we need
an anatomy ontology we need a fly anatomy ontology and we need a protein ontology we need a gene
sequence ontology and they were right we did need all of those things so they started to build them
but now they started to slip back into the old oh I downloaded protein now I can build an
ontology and then they built crap in 2002 I received a prize from the German government
a lot of money to found an institute for medical ontology I did not know anything about medicine
I did not know anything about biology somebody approached me very early on in my
institute I had an institute in Leipzig and they said what do you think is the gene ontology
and I didn't I'd never heard of the gene ontology and I looked at it and within 15 seconds I realized
three things not all of which turned out to be true first thing was within five seconds
I realized that I would spend the rest of my life working on the gene ontology but that
isn't true but that's came into my head immediately the second thing which came into my head was the
gene ontology is exactly what we need this is what my new institute should be based on
and that came true and then the third thing that I realized is that it's crap
and it's crap because it's full of logical mistakes and I could talk for an hour two hours
just listing the logical mistakes that they were making and so I had money I invited the
leadership of the gene ontology to Leipzig they already knew about me
I published I think I published a short paper on problems with the gene ontology
and they wanted to come and see what I what I was doing so they came and we had a workshop
which was historically interesting for reasons having to do with 2001 and
and I presented a talk at this meeting so the gene ontology is called the go
G O and so my talk was called stop which is short for smart terminology through
ontological principles and I just went through all the mistakes in the logic of the gene ontology
and after this this talk Michael Ashburner went to leave behind the curtain and he said Barry
I will do a deal with you I will put you in charge of the logic of the gene ontology
and in return you will promise never to criticize the gene ontology
in public and I did the deal I sold my soul and you have just decided to follow
so I think that the gene ontology community will admit that I did clean up the gene ontology
from a logical point of view and that that was useful but in cleaning up the gene ontology
I ended up cleaning up also some of the other ontologies to make them fit the gene ontology
in a proper logical way and that is the oboe foundry the open biological and biomedical
ontologies foundry it's a collection of ontologies which have been cleaned up logically so that they
fit together and Michael wanted to call it the oboe smithy
but I put my foot down on that and so we came to the idea of calling it the oboe foundry the
idea is that to build these foundries is really hard work and it's hard work in the sense that you
have to find things and people with hammers and things all right so how do we do it how do we
link them all together the answer is bfo so this is the original picture of the foundry
the gene ontology is the yellow part and at the very top we have the core of bfo we have
independent continuance such as molecules and cells and organism dependent continuance such as
qualities and function and occurrence processes which corresponds exactly to the three parts so
the gene ontology biological processes molecular functions and cellular development bfo is a
reverse engineering of the gene ontology to apply to everything or apart from things beginning with
q and um and so bfo grew in the course of creating the oboe foundry and that there are now it's gone
it's probably about 490 ontologies which are using bfo and you can find there's a list of
users of bfo which we update periodically and not all of these ontologies are any good I wouldn't
say that most of them are not very good but some of them are very good and the fact that they use
bfo helps even if they don't always use it correctly because at least they're trying to do
something which would be interoperable with other ontologies using bfo and they're also drawing on
the talent of people who have experienced building ontologies using bfo now in the beginning
which is to say until about four or five years ago that all of these ontologies practically
were biology or biomedicine or something like that um so
now we have more foundry and they're not all of them have anything to do with biology
and I'm going to be talking about the the foundry at the bottom the diode foundry
uh towards the end of this presentation so now we have more ontologies built using the bfo
principle principles and following the idea that you have to build ontologies so that they work
logically together in at least all of these areas in fact there are some more which I will also talk
about now one of them is called the common core ontologies which you can think of as a
separate mid-level ontologies for things like artifacts events relations units of measure
and then we have many many domain ontologies many of which have been funded by one or other
military project which have been defined within the framework of the common core mid-level ontology
for various sorts of military applications and intelligence community applications
and now my view of what bfo is doing in all of this gets more I hope more sophisticated as time
goes by now I like to compare bfo to the core to keyboard it's a standard lots of people like
to use the standard they become skilled at using this standard and so you can't change it very easily
because you get very bad reactions from existing users it's not necessarily the best ontology or
the best top-level ontology but it's certainly the most often used top-level ontology and I think
that it's it's a good idea to think of ontology as being in part not an attempt to describe
what is but an attempt to legislate about how we will describe what is
and I'm not sure whether that's helpful just stated in in this form but I know from my own
experience that very often when I'm arguing with people in the course of building ontologies
collectively that I repeatedly reached the point where I say here we just legislate it's like
driving on the left it's obviously it's not obviously the right side of the road to drive
but you need to make a choice and that choice is a matter of legislation and that kind of choice is
very often necessary when building ontology all right so the ISO standard will exist pretty soon
in four parts part one and part two already exist as you can see down there you spend 118 francs
you can get a PDF copy that's about 18 pages long but if you click on the link in the blue box here
you can get it for free and that's because ISO gives away ISO standards free if they are used
to create other standards and this particular ISO standard both parts one and two and I assume
this will apply to parts three and four also are used to build other standards that's what they're
there for and so they're free so this describes the requirements for being a top-level ontology
part two describes BFO and shows that BFO also meets those requirements and this this part two
you can also get free by pressing on the yellow the blue button and now
this is a part of a list of ontologies today which is to say within the two years of the
appearance of the ISO standard which are outside biology and medicine so in other words where BFO
was initially used primarily in the medical and biological sphere it's now used in many other
spheres not all of these are post ISO but many of them are and the the more important ones are
because people in different domains not just in biology and medicine but also in other domains
and I military I keep repeating they need ontology too and they have discovered that if you are if
you need ontology then you need ontologies which are organized in some kind of suite and then you
need a top level in order to give logical coherence to this week all right so let's I was going to
have a slide which would be my only french slide which said question but I forgot so any question
I have a very ontological question your example about the arm is kind of independent continuance
even being attached to the body because it is I mean has a concept is full of personality
yes the issue is exclusively the nature of the boundary if you if you tear off the arm you have
an object and it's all the criteria is the connection yeah I have some for the discussion
all right we can go back to that think of the no smoking zone no that that's the boys okay
is the most well it's the same side of the role and arm belonging and they're not arm belonging
zone and yet the arm belonging zone is out here and the line between them is here all right so
now let's go back to the to bfo at the very top we have continuance and occurrence so
continuance exists through time occurrence occur in time and the test is whether something has
temporal paths your life has temporal paths your youth is a temporal part of your life
it's not a it's not a part of you it's a part of your life you do not have any temporal paths you
have physical paths or three-dimensional paths or spatial path your arm points but your youth is
not a part of you it's a part of your life so the life is an occurrence you are a continuum
and we now distinguish between independent continuance independent continuance now
same object and so on words which can be used to describe independent continuance
and people use words like attribute or property and so forth to describe dependent continuance
we will we will talk about the different kinds of dependent continuance
in a minute and then occurrence are things like processes events happenings things we go on
sometimes processes in which nothing goes on so the process of these of these lights being switched
on is an occurrence in bfo term because it has temporal paths namely the morning
lights being switched on and the afternoon lights being switched on this is called a state or a
stasis in some people's dialect and now qualities and roles are the two big groups of attributes
and the qualities would be something like your temperature your height your weight
and every every quality every attribute depends demands a bearer so there is no height or weight
or temperature unless it is the height or weight or temperature of some object so the
the dependent continuance depends on some bearer
and then we have occurrence and the occurrence also depend
every event depends on some passive participant there are no events no processes no incidents no
happenings which take place unless there is some independent continuance in which or between which
they happen and all of these are axioms in the bfo axiom set and now we have instances which do not
belong to bfo bfo is above the line and then all the instances all the cells all the molecules
all the planets all the galaxies are instances of the bfo kind of object and so above the line we
have what we sometimes call classes i think i use the word kind already types universals that really
those words all mean the same thing they are what is general and then the instances are what is
particular and qualities have instances your weight is an instance of the kind weight and my
weight is an instantly the kind weight and and now databases typically are about instances
where ontologies again typically are about types or classes of categories or universals or generals
and then we use the ontologies to tag the instance data so this is a very very crude
dichotomy we put the two together we get knowledge from
and now Ryan Rikuchi again i should change this slide
is an instance of the kind human being so that is actually him it's not the photo
actually can see it he is an instance of the kind human being which is a sub kind of the
kind object which is a sub kind of the kind independent continuum and then there are lots
of occurrences which are instances of process and now we have more complicated examples the
Hoover Dam and the resilience of the Hoover Dam those are those are instances and the decline in
resilience of the Hoover Dam over time is an instance of the kind process so now we have a
process which is a change in an attribute of an object rather than a process which is an
which is an example of an instantiation of change in an object change in attributes
means it gets less and that's resilient change in object means that it loses stones
gradually becomes smaller so on the left we have what is and on the right we have what happens
and Ryan's here again so Ryan's temperature is an instance of the kind temperature which is a
subclass or sub kind of the kind quality and Ryan's life is an instance of the kind life
and we can put all of those together with information so information entities are about
all of these other things and they come in different varieties such as name address telephone
number and they have instances too namely Ryan's name Ryan's telephone number and then there are
seven Ryan Rikuchi's known to man I'm assuming there are at least seven but there's only one
name of this Ryan Rikuchi it looks exactly the same as the other six names of the other Ryan Rikuchi's
but there are in fact seven names of the seven Ryan Rikuchi and so and that's a picture of Ryan
it's not him that's a picture of him all right and then we've done this we've done oh yeah
realisables I mentioned realisable earlier and I'll say something about them again so dispositions
are the most interesting example of realisable so dispositions are potentials tendencies I have
a disposition to lose hair bananas have a disposition to get ripe and so on so their
tendencies potentials that we don't really know much about dispositions there are many of them
there's lots of junk dispositions everywhere we don't have names for many of them science is about
them diseases are dispositions which snow med doesn't quite get but now some dispositions are
really special and that there are fewer of these and these are the dispositions which crudely speaking
we want to have they want there to be dispositions like this and we call them capabilities so your
car can play music I'm assuming you have a stereo in your car but that's not the function of your
car it's just a capability and so on so people do the washing up but that's not the function of people
and you can use a screwdriver as a weapon but that's not the function of the screwdriver so
capabilities are disposition dispositions which are like functions it's good to have them but
they're not functions they are side effects if you like and we're still trying to work out a good
definition of capability we don't capability is not yet a term in bfo disposition is in bfo and
function is in bfo capability it might take 10 years before we are really happy with the constitution
and that's so that means that bfo develops slowly the people who know a lot about bfo have been
trained to be really evil when it comes to finding arguments against decisions and so that means
decisions are made very slowly and carefully we like to think all right now functions are a bit
easier a function is the reason for the existence of its bearer so the function of a screwdriver is
to screw screws that's why we have screwed right the function of cars is to transport passengers
function of eyes is to see function of your digestive system is to digest
functions are easy capabilities are like functions but they're difficult
and one definition of biological capability is that they are dispositions which contribute
to the realization of biological functions so you can go away and think about them
all right so we get the same kind of picture so we realize the function of your of john's eye
in john's seeing which is a process and now only certain kinds of entities have functions
and i don't know of any any kind of entities other than the ones on this list so or perhaps
worker beings have functions and queen bees and worker ants and so-called carpenter ants
i don't know but organisms in general do not have function it is not my function to do on top
i i'm sure about that even though it's that sometimes seems not to be the kick
all right now maybe companies organizations have functions but they're a bit like colonial
organisms in this space maybe so there are many more capabilities than there are functions
and this is how it might look the future BFO might look like this
so we have dispositions of the broad class capabilities are a subclass and then functions
are a subclass of that subclass but now there are two kinds of realizable entities in addition to
dispositions we we also have roles now dispositions are defined on the basis of the physics of the
bearer so the reason why i have a disposition to go of all is because of the physics of my
heads metabolism i don't know um roles are defined externally by decisions
by demarcations by stymings of contracts and social and so roles are the products of
social organization basically being employed is a role being fired is a role and you can be employed
because your contract that you signed four days ago comes into effect at midnight in a week
you do not change physically at all at midnight in a week at all in a way which is relevant to
being an employee but you have the role at that point in time because that's what the contract is
so roles are not a matter of physics they're a matter of a certain entity being in a certain
social institutional circumstances um and in virtue of being in that that set of circumstances such as
being the the object described in an employment contract you acquire or lose a certain role
and this just repeats what i just said now interestingly there are roles which form systems
these are examples of two sided mutual dependence among roles which are rather simple ones and
and then there are more complicated ones now bfo has been used in many areas one area where we still
do not have anything like usable ontology content is the law we're working a little bit on economics
but we don't have a good ontology of law this may be one way of starting the ontology of law
but in terms of role and there is an ontology called the act document act ontology which is
following something like this line that may be where we start but it's not it's not established
itself in the way that it should establish itself as the ontology of law which is what we want
and well this is the authority ontology or an authority ontology which again might serve as
a start and come all right so this is another picture of bfo i left out all the space and time
and location i just have the the things that we've talked about so far like qualities roles and so
forth and and that this gives us another opportunity to have question
yes so ryan rikuchi's name is not just a string of letters it's
it's in in so many ways it's not just a string of letters it it came into existence at a certain
time in history for instance and the string of letters existed prior to that there are almost
only older ryan rikuchi somewhere out there i'm not sure about the ryan part there is certainly
oh other rikuchi um but i'll give you a puzzle uh john's credit card number is token for token
identical with frank's social security number they're not the same number they're not the same
entity but regardless strings they are by definition the same string so this is social objects get
complicated very quickly or yes yes so every child has at least two parents i guess that would be a
first guess um but it doesn't go in the opposite direction not every adult male human has a child
and not every adult female human has a child not every pair of adult males and females have a child
so here you have one sided dependence the example i gave on on the screen were two sides of the
thing oh no yes you're right not all of these dependence relations are going to be roles
now when you adopt though if you adopt a child that would be a role yeah yeah so having a child
is biology which is physics in the end adoption is partly biology and partly physics but the core
of it is a role kind of phenomenon and there might be other similar role phenomena having
to do with parents and children so um well i i i don't want to think too hard about it
kidnapping all right any more so we've seen this picture already but now we have green at the top
and i just mentioned that we have a granularity
axis so molecules are small cells and cellular components are larger than organs and organisms
are larger and then we have populations which are not on this chart but we've been adding to the
elbow foundry over the years this is still the 2005 version even then this is something of an
idealization even then first of all we added the environment ontology which covers all
granularities because there are molecular environments there are cellular environments
or environments of organisms organisms there are environments all populations tribe
and so forth and um there are then there is the ontology for biomedical investigations
obi which is one of the best of all the over foundry ontology when it comes to the quality
of the engineering of the ontology and this is about experimental processes so it goes on the
current side um so what happened was that the the biologists in the world of the genome project
knew that they needed ontologies of biological entities processes cells and so forth but then
they discovered at a certain point in time and i was at the meetings where this discovery was made
it wasn't my idea they discovered that um they needed ontologies to describe the experiments
and they needed ontologies to describe the ontologies to describe the data coming from
those experiments because how you interpret a biological argument or a biological hypothesis
or a biological conclusion in a biological paper depends on the methods which were used to reach
that conclusion and so you needed to have an ontology of experimental methods and that's what
obi is it's an ontology not just the methods but also equipment hypotheses um parameters
inputs outputs uh data um data processing processes material processing processes so sometimes in
biology you do experiments by looking at data and processing and you have an output you had input
is data output is data sometimes you do experiments by taking material as input and then you have data
as output data about that material then they realized that they needed an ontology of the
evidence that would be generated by an experiment so there is something called the evidence ontology
which distinguishes for instance between conclusions which were drawn by by direct
observation conclusions drawn from computational computation and then i think one of them is
something like inference drawn from paper so that it's not a very not all of the codes in
the evidence code ontology describe strong evidence the idea is that if you have multiple
kinds of evidence for a given biological conclusion then you should be able to document that in
something like an ontology all right so then we so we have the ontology for biomedical investigation
and we realized and here i was involved directly in the decision making we realized that we needed
terms for things like footnotes or sentences or vowels or
instructions or papers or grants i grant submission documents and so forth and and so they were
happily using protege to add all of these terms into obi but then i said footnotes are not biological
they don't belong in a biology ontology so it's not only biological investigations with
biomedical investigations which use footnotes or vowels and so we we started building an
information artifact ontology and here too i'm not sure this is a good thing but here too i played
a a role as this decision i i named the ontology for biomedical investigations incidentally
originally it was a joke name um fuf fuf fumo or something functional genomics
something fuf fuf fuf fugo something um and i said no it's not only about functional
genomics it's about all biomedical investigations and so we should call it the ontology for
biomedical investigations in fact we should have called it the ontology for investigation
because it can be applied to physics maybe we should have called it the ontology for data
and material processing activities because it can be applied to manufacturing and in fact here
you have inputs which are material and outputs which are material and that that kind of input
output chain falls under obi too but anyway we can't have everything but we could have now what
would we call it the information what ontology if we call it the information ontology we
commit what i argue for legislative purposes not because it's true although it is true i
argue that you should never use mass nouns when building an ontology so if you if you think of
sugar sugar can mean the chemical substance which is a kind of abstract universal or it can mean
two lumps of sugar or it can mean all the all the sugar in on the planet or it can mean all the
sugar ever in the history of the universe and it's completely ambiguous what sugar means but if you
say lump of sugar which is not a mass noun it's a count noun then you have something with the
meaning of which you you know and if you look at snowmen not today but in the early days of snowmen
you find that they made mistakes because they used mass noun by blood and they didn't because they
were using a mass now they made certain characteristic errors which people make when they use mass
noun so i say never use mass now information is a mass now and indeed if you use the mass
noun information you make mistakes so people who say that the genome is information are making a
mistake a sequence which is created by a sequencer and a computer and printed out or printed on the
screen or just stored in a database that is a piece of information but the molecular structures
which that piece of information in somebody's hard drive picture or represents is not information
it's biology it's molecules in patterns so many people maybe fewer now than then but in that
era the idea that genomics was a branch of computer science or information science was very popular
and that we we wanted to work against that and so we coined the term for the ontology
information artifact ontology so that we made it clear that we're dealing with artifacts
which is to say things made by human beings streams databases footnotes grant submissions
addresses names telephone numbers and so on these are all information artifacts
and that's what the information artifact ontology is all about and it's all about
i mean the information artifact ontology terms are representing instances which are about
instances of disease processes and all of the other things that biologists care about
so that arrow there in the middle means about so bonus and that's the key term in the information
artifact ontology and information artifact ontology is roughly speaking a copyable entity
which is about something we have modular suites of ontologies likely over foundry
what do they bring us well first of all we have a division of labor i will do proteins and you
will do RNA and we won't that we will thereby have a clear boundary between what you do and what i do
this also means that anyone who needs a protein ontology knows where to find it because it's
called the protein ontology that's another rule that people often break so instead of calling
their ontology the spider affordance ontology or well let's say the spider activity ontology in
honor of the building that we're in instead of calling the spider activity ontology they call
it the Santa Barbara something ontology and nobody knows what it is and so nobody uses it outside
Santa Barbara all right then it because people are working on modular suites of ontologies they're
using bfo over and over again they become experts at using bfo over and over again
because somebody is in charge of the protein ontology and is known to be in charge of the
protein ontology that somebody has a special reason to be devoting a great deal of scientific
expertise and effort to make sure that protein ontology is done properly also users will be
motivated to use the ontology and to find errors in and report those errors because
if they're using the ontology they want the ontology to be good if it's if it's going to be
good and you find an error you have to tell all the ontology editors about the error that makes it
better which means gives you an even better motive for using it yourself in a kind of
virtuous circle and I won't go through this so there have been four versions of bfo
version number one was released in 2001 and it nothing changed for six years but then we added
the information artifact ontology and once we did that we realized that we needed a term in bfo
which would be the parent of information artifact and we didn't have one and so we created one
and I'll talk about that in a minute in 2015 owl 2 came out and so we we did a an overhaul
of bfo 1.1 to make it conformant with bfo 2 and then in 2020 in 2020 we released bfo 2020 which
was released to take account of the fact that in the ISO standard data that so there is data
associated with the ISO standard about the first ontologic formalization of bfo and also about the
consistency proof which is part of the accompanying data to the ISO standard and so that is the core
for the changes which we made in 2020 bfo itself the picture that you saw has changed hardly at all
the definitions are a bit tidier the most important changes that we now have a first ontologic
formalization all right so that's the picture again and now i'm going to talk about how we dealt
with information artifacts and so we've already seen this there are two kinds of specifically
dependent continuance there are qualities which include patterns pattern of a chessboard for
instance would be a pattern and a pattern in the bfo sense which is a continuum and then there are
realisables like functions and roles and now notice that we say that these are specifically
dependent continuance in the middle ages the philosophers who dealt with these questions
had various axioms one axiom was accidents do not migrate so they had substances and they
had accidents and one famous Italian metaphysician concluded from this was in the time of the plague
concluded from this axiom that the plague does not exist because accidents do not migrate they
couldn't see the bacteria or the virus i don't know which one and so they didn't know that they
were there they just saw the accidents presumably the symptoms and so forth in the people since
accidents don't migrate there can be no plague and they this argument was seriously put forward
and it's the motto for a an italian novel of some repute called you promise those both me
anyway i recommend the novel and the motto is about this why the plague does not exist now the
plague doesn't but does exist because viruses can move around and bacteria can move around
but specifically dependent continuance cannot migrate i cannot have your head end i cannot have
your height i cannot have your name i cannot have your um capabilities even if my capabilities are
qualitatively identical to your capability my capabilities are mine and your capabilities are
yours they are specifically dependent on their barrier but there are some dependent continuance
which can migrate and they are generically dependent on their barriers and an example would be
well the pdf file on my laptop i have a certain pdf file i send it to ryan and now the very same
pdf file is in two places it's copyable that and if if i now destroy the pdf file on my laptop
the pdf file still exists because it's on his laptop and that's what we mean by generically
dependent continuance we mean continuance which are dependent upon some independent
continuant bearer such as a hard drive but which are not specifically dependent on any bearer
all you need is one but it could move around typically there will be many copies so a novel
is a specifically dependent is a generically dependent continuance because the novel exists
in many copies emails that you send are generically dependent continuance because they exist both on
the sender and on the receiver side and dna sequences are generically dependent continuance
two both in both senses both the sense of the sequence in the sequence database
and the sense of sequence as meaning a molecular pattern which is copied as we all know trillions
of times in every human being for instance all right so that's where we get information artifacts
into bfo they're all children of the new kind new type new universal that we introduced in
bfo 2.0 namely generically dependent continuance now we did not introduce the new kind information
artifact because generically dependent continuance are entities which can which are domain neutral
you can in principle find generically dependent continuance in any domain but information artifacts
are restricted to domains where there are people like people sorry where there are entities like
people who make copies of things like email and so we added the term generically dependent
continuance because it was of the appropriate level to go into a top level ontology and
and now i don't think i'll go into this well maybe so in we now realize that we needed to add a new
relation so let's suppose you make a plan you maybe write it down and it's in your head
and you're going to reel and you have a team of people ready to follow the specification
that you dictate then the plan is concretized in patterns of ink on your printed document
where you've been writing out of written document in other words it's made concrete it's turned
into something which is more like a specifically dependent continuance patterns of ink different
piles of ink raised levels of ink which we call letters of the alphabet and also when you read
the plan specification in your head and there's something like a concretization of the plan
in your head and that's what you will realize that will be the starting point for your realizing
plan when you say you read it and you say to yourself i like this plan let's realize this
plan and then you tell all your underlings to go forth and realize and so we added the relation
of concretization to bfo and the whole story looks like this so we have generically dependent
continuance then there are information entities there are things like gene sequences on the other
side the biological side and these are all examples of information artifacts so a symphony by that we
mean the that which is concretized in the score and and sort of in the performance too the performance
is not so important it's a squalagement and and poems are the same
and and then we have information bearing entities which are material entities they have patterns
according to what has been written onto them the pattern on your hard drive is an information
quality entity which is a kind of quality which is a kind of specifically dependent continuance
and then the information content so the information artifact is concretized by
the information quality entity which depends upon the information bearing entity
all right and that's the definition so an artifact is something created deliberately
and an information artifact is an artifact that can be the bearer of information
all right now we have more time for kiss you know anybody
so my question is regarding the you mentioned that bfo is a realist
yeah but what would ring like which isn't do you think it's the presentism
quoting book universe what would ring maybe you can affect all the parts that go there
so I hate four-dimensionalists and so there are some people who develop
four-dimensionalist ontologies and we could talk for an hour about this
and the oil industry actually is the principal hunting ground of these people I was a for a
timer hero of our oil engineers in Norway because they were being forced to use a four-dimensional
ontology and it made their life much more difficult than it needed to be made I don't
like four-dimensionalist ontologies and I think that they are incoherent and it's
interesting that of all the ontologies which have been which have some sort of a track record
namely psych dolce bfo gfo ufo sumo they're all three plus one dimensional in other words
three spatial and one temporal ontology none of them are four dimensional four dimensional ontology
says that everything is a process so you are a process of what's your name Eric you're a process
of continual eric king continual eric king going on over over in that corner and that's silly and
it's really silly if you if you want to apply it to oil industry plant because the plant is
is not the process also maybe like you have a present system that you just have a present
and growing book that you have a present and a past yeah so I I guess I'd lean a little way
towards the block version but I left open the issue of reality in the future
and I also left open the big q question which if we got time we will actually address
that on the one hand we have some very simple examples of patterns which are universal
and maybe the chessboard pattern could be regarded as a universal it's it's simple
but if you take the pattern which is the fields of Norway that's too complicated
to be a university it has to be thrown together by accidents you know we know it but it was by
accidents of glaciation and so forth over many millennia I guess now Tolstoy war and peace
was more like the fields of Norway and even a relatively short poem is more like fields of
Norway and even the president of Italy the president the office is more like the fields
of Norway now what where is the line between fields of Norway type things on the one hand
and universal like square or triangle or vowel or I don't know DNA well DNA I think is on the
Norway side of things so that DNA molecule is a universal but this DNA molecule for which we
need 36 000 lines of code or something in order to capture that is not the universe
even though it's repeated many times more in pieces repeated many times but that doesn't mean
it's the universe war and peace is an incident it's an instance of the type novel a copy of war
and peace is an instance it's an instance of the type copy of war and peace but copy of war and
peace is not going to count as a real university it's going to be a defining class going to be a
convenience class okay so now I'm going to talk about foundry so this is a hub and spokes picture
that I like the idea is that when we build a foundry with networking ontology so the networking
arises in a number of different ways so first of all you start with the hub which in in many
cases is bfo and then you define domain ontology terms by using the hub so you use the word object
as a starting point for defining a cell and then you create all the different kinds of cells
and you package the whole thing as the cell ontology and you do that for many other things
and it is being done for many other things but now in each case when you introduce a new term
and thereby a new class in your ontology you define that term and very often you will use
terms from other ontologies in your network and all of these terms both the terms as defined
and the terms as they appear in definitions will be associated with iri so they will be
networked together within the internet but also they will be networked together because the same
term might be used in 17 different definitions from 14 different ontologies and so there are
networking effects across ontologies through terms and through internet connections and
the hub of foundry now has reached the point where it can maintain the ontologies as a whole
where you make one change in one term then that means that you when that change is made
it may have impacts on the 14 other places where that term is used and they can control
how these impacts are spread through the entire network in a very impressive way
all right now how do we go about building a top-level ontology so I was in
a meeting in somewhere in
I can't remember where it was in Europe not long ago there was a poster session and in the
poster session there were seven young ontologists all of whom were working on slightly different
aspects of I don't know lasers or something and they all had sort of interesting results and
interesting bits of a laser process ontology but they were all working independently of each other
and I said what it's clear that you are all working on the same arena of topics you should
get together and build some kind of a foundry or you should find other people who have already
built a relevant foundry so you want to build a foundry you've decided that you don't want to
continue to build small snippet the bits of ontology for yourself you want to do things
which will contribute to science in the public sense and so you choose your top level which
should be small and well documented and so forth so BFO might be chosen and your top level
should have understandable definitions we're working on that but we think we do pretty well
given the complexity of some of our needs it should be well formalized well we think we're
doing pretty well on that front it should be and this is the crucial thing it should be easily
extendable by domain ontology so you need to know what a laser is well a laser is an object in
BFO terms what is laser light what is what is the operation of a laser well you can find BFO terms
for those things too and you can define them in such a way that you link the terms in your laser
ontologies together through BFO and then because you're using BFO you'll have people like me who
can look at what you're doing and tell you that you're doing it wrong all right even where if
you have your own secret methodology then probably no one will ever tell you that you're doing it
right and BFO also changes only slowly which means you can trust it to have a half life of five years
and even then the change would be quite small and it BFO is aggressively quality controlled
and there are various principles that we impose upon the ontologies in the foundry so you have
to have a top level there are some foundries which have been developed which didn't have top levels
but they had relatively short half lives you want to create ontology modules which are consistently
developed which means that each group of developers of ontology A will be comparing notes with the
developers of ontologies B, C and D because they are in neighboring, neighboring domains to ensure
consistency but you will also be communicating with the BCD people to make sure that there are no
overlaps and the reason for that is that you want everybody to know where you find the ontology
for proteins and if there are protein ontology terms in the RNA ontology or in the cell ontology
then that will mean that people will be disappointed when they find that they've been using the protein
ontology for seven years and no one told them about those proteins which for forgotten reasons were
dealt with in cell ontology so non-overlapping ontology modules which are developed in such a
way as to be consistent and then what you need is users who will find gaps and errors and who
will help you create useful documentation and I talked already about the virtuous cycle which
arises when you have many users who point out mistakes in your ontology or gaps in your ontology
and for that and this is also an important principle you need an effective feedback loop
so I don't know how it is today but in the olden days the gene ontology
had a commitment to its users that they would have a response to feedback within 48 hours
guaranteed now the response was not always an answer to the question it would be but it would
be at least an answer of the form we are now exploring the question you raised but very often
they give that they gave answers to questions directly the most common answer would be the term
you are looking for is already there it's just four lines lower down three lines across so effective
feedback loops between the users and the developers and that too creates a virtuous cycle all right
so there are many foundries this is the digital construction ontology's foundry which goes on
in Finland and they have all of these ontologies which are about bin which is building information
management modeling anyway they have a lot of data and they have these ontologies which are
developed in just the way that I am recommending as modules in a BFO framework and you can see the
BFO here is a pancake shaped or amoeba shaped grouping in blue at the top and then all the
building terms descend from there so asset role descends from role for instance legal person role
descends from role that we have a disaster response ontologies foundry which has been
developed in France for the French disaster relief agencies and and now most importantly we have the
dialogue foundry I say most importantly partly for purely
chronological reasons so we've been working for 12 years to get the dialogue foundry ontologies
recognition on the part of the so dialogue means the Department of Defense and the intelligence
community they had so the work was ignored or forgotten the working group was very active
and then it died and then it became active again finally in June of this year this is
said just a few days ago we got definitive approval from high level officers not just of the
intelligence community but also from the Department of Defense digital and artificial
intelligence office formally recognizing the foundry projects or the foundry project plus
a number of sub projects put forward by various DoD and IC agencies with a bit of help from
ontology people on the academic side like me that they were going to be accepted as the
standard across the DoD and the IC now next comes NATO that's next week actually no yes next week
there is a NATO meeting at which this idea will be presented we only get 15 minutes in a three-day
meeting but it's the beginning and who knows what comes after NATO well this is what it might look
like so there is some this is the daiko verse like universe but daiko is the defense intelligence
core ontology this is a group of ontologies not some of which don't exist yet but there are
teams of people who are building them or planning to build them some of which are already in use
the green ones are already in use and the idea is that the one of the ideas is that if you have a
foundry like this and this is a small version in different colors of the same foundry then this
will create not just interoperability among data but also cross organizational knowledge
so people working in the process activity ontology world will know to some degree what's going on
in the geographic features domain because they're both building ontologies which use the same top
level and they form part of the same foundry which means that they communicate with each other
at regular meetings so I I think I'd better say something about time
so as you can hear from my throat I won't be able to do this forever
I'm not planning on any changes but there might be changes in the future and so we have a kind
of succession plan for BFO so the replacement king of ontology or king of BFO more precisely
you will hear from him in a few minutes he's going to give a short talk about current developments
in the BFO world his name is John Beverly and he was just hired in our department in Buffalo
before that he worked for the applied physics lab which is a very large physics faculty
which runs on government money they built they do physics for the government for the DOD
but they have an ontology group which is populated primarily by former students of mine
and he is one of them but he's coming back to Buffalo and because he believes in this succession
plan but there is another member of the BFO succession which he will not be talking today
but his name is Alan Rottenberg now Alan Rottenberg is a pain in the neck but he's also brilliant
and so John Beverly is brilliant he's not a pain in the neck
Alan is a pain in the neck because he wants to get everything right
owl has a problem it's very hard to get time right in owl and BFO is not a four-dimensionalist
ontology it's a three plus T dimensional ontology another three special plus one central damage
we want to get time right one solution is not to use owl but to use first order logic it's easy
to get time right using first order logic it's very hard to get time right in owl because owl
will only allow two plates relations so you can say John loves Mary you can say Mary loves John
but you can't say Mary loves John yesterday or tomorrow in owl because then you have a three
place relation now Alan has us Alan first of all understands owl probably better than anybody else
so he plays three-dimensional chess with owl where the chess games extend into five years into the
future so he knows what problems lurk behind the scenes and he knows that the current treatment of
time in BFO actually and in any other ontology based on owl is problematic and for that reason
we released a version it wasn't an official release it was a version released for public
debate which just deleted all the temporal relations which are affected by these out problems from
the ontology so the classes were there there is a hierarchy with all the time relations involving
processes were there but all the time relations involving occurrence were deleted and people
hated that and they said oh BFO it's become chaotic in fact we were trying to be very very careful
and avoiding logical problems which we knew uh lay down the road and if i had more time i could
i could describe those logical problems now we have found a way which keeps everybody happy
so we're going to have a release version and John Beverly will talk a little bit about that when
he joins us in half an hour or so but let me just describe Alan's solution Alan's solution to these
problems is indeed a solution it no one will like it very much because it's more complicated
than what they like to see but the solution goes like this you can't say um John does marry at
time t because that's a three place relation but if you define a new relation called loves at
sometime and another universe another new relation called loves at all time then you
can say John loves Mary at all times and that's a two place relation loves at all times is a
two place relation John and Mary are the two places fillers and John loves Mary at sometimes
is also a two place relation where John and Mary fill the two places in
in loves at all times now you can generalize that you can generalize it to include John
loves Mary at all times when the lights are switched on or when the grandmother is away
of you can generalize it but it gets more complicated and so no one likes it and so
Alan is working with John Beverly and with other people uh on finding a solution to this
temporalized relation problem um that everyone will be happy with now the old version before
we deleted some of the relations in this uh inspection version worked so it had logical
small logical time bombs small time balls built in but it worked no one noticed no one had
examples where these time bombs made any difference very hard to find examples where these time bombs
make a difference and they're usually quite artificial so it's not a big problem in the
practical sense it's only a problem in the logical sense if we want to get the logic right we have to
address temporalized relations so I'm not going to say anything more about that I'm just filling
you in on what goes on behind the scenes the release that John Beverly will talk about in a
few minutes is logically in good shape and it's also practically in good shape in the sense that
you can understand it quite quickly and it seems natural all right so now uh summary on BFO I seem
to remember that I have 200 slides here so I'm not going to finish um so buffo is very small it
evolves slowly it has an active user forum it has a really large user user base and there are lots
of people who know how to use it and that we've seen the examples of sweets we've seen the common
core ontologies we've seen the principles talked about this already I don't want to do all of this
again but this is more about the the dates when these decisions were made I keep repeating this I
must like it and this is a one more piece that the office of the director of national intelligence has
approved recommending BFO as the standard and they're going so the problem is if you if you
work with the intelligence community you can't always know what they're doing and they can't
always know what they're doing but he's created a space where ontologies can be developed in with
all the classification rules um in in place and maintained by people who know what they're doing
and now the final piece in this puzzle is that Ryan Rikuchi over here put your hand up Ryan
Ryan Rikuchi is in charge of a working group in the Department of Homeland Security to do
for the Department of Homeland Security which is I don't know 32 agencies or
something like that what the DOD IC ontology working group is doing for the Department of
Defense and the intelligence community and um and he knows what he's talking about and he's very
effective and he too is going to be using BFO and it's going to be covering areas like infrastructure
cyber security and so forth do you want to add anything you might as well
well I'll say that we have two successful test events we're working prototype for
surveillance and able pattern recognition for sensors to be able to detect and reason
autonomously about things in the air and take out human loop tasks and then automate
analysts queries for the routine things we don't want to ask again and again
that we can use computers to do instead of people because people are going to air
and so on and the second thing that we have going we have five different ontology lines of
effort that are not just um thinking about or talking about or off the whiteboard into
practical application and the second thing is working on person-centric ontology so we can
reason about the different types of people that come into our care to automate determining what
they're entitled for resources and how we consume resources to then inform a classic
optimization problem or what to do with people in the walk order with the transportation logistics
and self-capacities and medical care to treat people as uh expeditiously safely mainly as possible
so those are the type of problems that we're working on time now with practical applications
that we want to extend and then across the agency we're thinking about how to go about
an x-paking sensor you know this big conglomeration of agencies that all have overlapping missions
but very unique roles and work we share work and leverage the virtual cycle development
and he will be here till the end of the of these two weeks
so he's already given I was going to say take away two of my students by giving them jobs
one way of viewing an ontology is that it's it's a computable lexicon
so a lot of what I've been talking about is getting people in different groups
to use terms consistently which means to use terms with have definitions which people share
and the terms are almost I know I was in very many cases ordinary terms that ordinary people
understand in biology you have you very quickly move into very technical terms but even there
they are terms which ordinary biologists understand and this is one big difference
between ontology and databases so if ontology is a regulation of the lexicon and if the lexicon
changes rather slowly then that means that you have you can find in ontology a kind of
infrastructure which will last for many years as long as people who use those terms in that way
databases on the other hand move very quickly but database technology database hardware
and database software changes very quickly and you can make up database codes and new database
structures also rather easily which means that it doesn't provide this kind of foundation over
long periods of time which we find if we look at the ordinary lexicon so ontology tries to have
the best of both worlds wants to have the kind of logical coherence that you find in database
structures but conjoined with the kind of stability that you get from the lexicon
all right and then and then that is how ontologies get to be used in large enterprises including
the Department of Defense in large enterprises currently where data models dominate of one
sort or another the data models that people understand in one corner of the enterprise
will be completely unintelligible to data models used by people in such so the users of data model
from other parts of the enterprise and every large enterprise data manager realizes these
problems the Department of Defense realizes them and that's one of the reasons for the
tiny enthusiasm that they've begun to show about introducing ontology i mean in the
Department of Homeland Security there is a lot of enthusiasm but in the Department of Defense
it's taken 12 years to get where we are all right now so we solve the failures of interoperability
across large organizations by introducing terminological consistency so common terms
used consistently with common definitions both in natural language not dictionary definitions
but form but semi-formal natural language definitions and then logical definitions
in logical languages like owl and first order logic for instance and so i've said something
about this now let's look at definitions which is the important part now if you look at definitions
and this is true in many many highly reputable organizations they are really impressingly bad
and they don't really know what a definition is commonly so they're worse than dictionary
definition but look at many of the w3c publications and see what they how they define basic words
so rdf army's resource look at what look at the definition of resource in the official rbs
specification it's not it doesn't tell you anything maybe because the word resource
it's not meant to tell you all right so
we want formal definitions for computer reasoning and we want natural language definitions
for human use and in both cases we want real definitions now what is a real definition
well it i'm talking now about definitions for the terms in the ontology not for the relations in
other words not for the object just for the terms in the is a hierarchy definitions should be
each definition should be a statement of individually necessary and jointly sufficient
conditions now what does that mean well look at the definition for a triangle at the bottom here
a triangle is a closed figure it has exactly three sides each of these sizes straight and
it lies in a plane it may be that we have too much here but we can simplify it a little bit
but all of these are necessary in other words every triangle is a closed figure it is necessary
of a triangle that it is a closed figure and all of them together are jointly sufficient
that is to say anything which satisfies everything on the right hand side is a triangle
now this is what a definition should look like how to build definitions like this is coming next
so this is a slightly simplified version of what we had before and now here we have a certain form
x is a triangle means x is a closed figure which and now we can assume that a closed figure is going
to be the parent of triangle in the backbone taxonomy of geometrical figures along with square
and the other ones rectangle circle they're all closed figures now that's the key to a
good definition a good definition is a definition which specifies
of its parent term what are the necessary features that an instance of that parent term
has to have if it's going to be an instance of the term on the left so I'll repeat that
no I won't I will repeat it in a minute so in in the philosophical tradition the
which clause is called the specific difference the term that you're defining is called the
species and the parent term is called the genus an example would be human being is defined as
an animal that's the parent term which is rational that's what Aristotle said
every definition should be an Aristotelian definition in just that sense when it's the
definition of a term except and now we come to the the following issue namely there are some terms
which are just so basic that you can't specify a parent term that would give you any additional
meaning in the way in which human is a rational animal gives you additional meaning to the term
animal or triangle is a closed figure which has exactly three sides gives you additional
meaning to closed figure you can't do that with object I can't explain what an object is by telling
you that it's a thing which is objective or thing which is connected or an entity which
just one object is too basic and so every ontology is going to have primitive terms which cannot be
different and they will come at the very top of the relevant or near the very top of the relevant
ontology tree the backbone taxonomy and we it's not that we are completely dumb or dumb founded
when it comes to primitive terms we but we can only provide what we call elucidations
they're not definitions they are just necessary conditions plus maybe some examples of how the
term is to be used all right now these this is the recipe for a good definition you have a parent
term you have the term you want to define which is b in this case and you have the specific
difference which is c and then you define b as an a which sees and this is it's such a simple
approach but 99 percent of the definitions in in otherwise highly reputable ontologies
do not use this recipe and the recipe has the neat consequence that writing definitions is a good
check on the quality of your taxonomy but also the taxonomy that you're building is a good
step towards creating good definitions for the terms it contains so you in principle you get the best
of both worlds all right and now it doesn't work that's the problem it doesn't work in every case
but this too is not necessarily a bad thing so this is the Aristotle example this is what we want
we want our trees to look like this every term or every class in the is a taxonomy has exactly one
parent except for the very highest classes which don't have any time as long as every class has
exactly one parent we can use the Aristotelian rule for definitions without any problems
but some some people build ontologies and they have diamonds in them and by that I do not mean
diamonds in the rough I mean diamonds which cause the rough and and the department of home
insecurity has ontologies which are full of diamonds and no actually which are suspiciously
many diamonds and so a dam is a water asset but it's also an electric power asset now that's not
quite true not every dam is an electric power asset and so we we can easily chop away this one
and just have a water asset every dam is a water asset and that's another general rule in good
ontology building is that always means every so if you say a is a b you mean every a is a b
if you say a is part of b it's slightly different if you say a is part of b you mean every a is
part of some b and if you say a has part b you mean every a is such that there is some b which
is a part of it and then the sum goes before a hidden instance of so a is part of b means
every instance of a has some it is part of some instance of b this is called the all some rule
so if there is a it's just all every for other relations for lateral relations it's all some
every a is part of some b every a is adjacent to some b and so on all right now
i think i'll just give you pictures of knowledge graphs oh there's ryan again
and more knowledge graphs and so knowledge graphs give you some of the benefits of ontology
together with some of the benefits of databases now one of the reasons why the the military in
america and the ai part of the military in america are so interested in ontologies is because they
think that on knowledge graphs are the way forward in collecting useful data and to have well
behaved knowledge graphs it's very good to have coherently structured ontologies
and this is the physics part i think i so should i finish with the physics part of the
ai part i guess i'll do the physics part so although i can't do physics in 13 minutes
um so since the beginning of bfo and actually you were doing something very similar with
your snowman question i would receive requests from people that they needed a bfo conformant
ontology of mathematics and my response was you don't need an ontology mathematics you just go
to the supermarket you can get your math it's already there it's all been done there are no
problems it's all set theories of course and um but now we need at least an ontology of
units of measure and if we're going to understand quantum physics i use the q word then we're going
to have to understand the mathematics of quantum physics because there isn't really much that you
can understand outside mathematics when you're trying to do quantum physics um
i think that at the moment maybe things will get better so we wrote this paper and i i just
mentioned that i co-authored with this man Job's Landgrave a book which came out last year basically
the book about the ontology of systems both simple systems such as the solar system and a laptop
and complex systems such as your digestive system or the government of Ukraine you can't
predict the behaviors of complex systems for complex reasons which we document in the book
and therefore you can't build a turing machine which can emulate the behaviors of complex systems
and therefore artificial general intelligence that is to say artificial intelligence which
would be equal in power or superior in power to human intelligence is impossible that's the
argument of the book all right so in order to build a quantum physics ontology we need to
build a mathematics ontology and mathematics is basically set theory but understanding set
theory ontologically is is not trivial and we didn't want everything to be set so we wanted
there to be some things which are part of the object domain of mathematics which are not sets
because there has to be a starting point for building the set theoretic structures which are
the the various uh kinds of structures which mathematicians like to deal with and we call
these things monads and we give examples of monad zero on a constant a variable and a geometric
point it we're not very happy with this selection but we are confident that there has to be something
like monads we're going to build coherent ontology of mathematics everything else is set theory or
everything else is what you need to get set theory off the ground for instance the set constructor
which takes a mathematical predicate and turns it into a set this is the structure corner so
this here is a function that's an every mathematical function has this structure every
mathematical operator has this structure that's the field of real numbers and there are other
fields of natural numbers and so forth none of these things fit into bfo what we're doing and we
have to do something like this we have bfo we we don't create math o as a child ontology of bfo
we create it as a sibling and we have physics which will be a sibling of math but there are some
areas of overlap so when it comes to physics we have experiments and we have experimental results
they fall under bfo experiments are processes in the bfo sim so there are connections even
with the quantum world there are connections all right so these are functionals and operators
and now we already have some ontology to deal with some physics these are just four i'm sure
that there are others ob is already a bfo conformant ontology the open energy ontology is bfo
conformant the physics based simulation ontology is very small but it is also bfo conformant
and the ontology of physics for biology it wants to be bfo conformant so we may use some of some
of the content here in due course but for the moment we're working on the fundamental and this
is where systems come in so systems form the heart of the ai book simple systems and complex systems
and we think that there are three important kinds of physics entity in other important in the sense
that we believe that if we get these three kinds of entity right then we will have dealt with all
of the important kinds of entities in the realm of physics system entities are of three kinds
are a system elements when it says weight here it does not mean the measurement weight it means
that an actual lump of metal used with the weight and so we have elements such as weights or people
planets planets are parts of systems then we have interactions between these elements such as
electromagnetic interaction or gravity and then we have the system itself which is in in the case
we had in mind in the paper is a weight on a spring so the harmonic oscillator you have a spring
and you have a weight and the the weight goes up and down harmonically and the harmonic oscillator
is a very important physical system which is found also in biology and chemistry everywhere
and which we document in the paper ontologically as our example of classical physics
and then we have magnitudes this was always a very hard problem and we still haven't
corrected completely for bfo how to understand things like velocity or acceleration because
for complex reasons bfo only allows continuance to have quality it doesn't allow qualities of
processing and velocity sound like the quality of a process and so we just introduced the idea of a
process we don't call it a process quality we call it a process factoristic that that is a term
which is already was already being used by the oboe foundry and acceleration would be an example
of a process category and i think what we're doing here is pretty coherent it's not rocket science
but it's at least coherent and and then finally we have models and this this brings it back to the
oscillator so if you if you have a spring and you have a weight at the end of spring you pull
it the weight it will vibrate for a while and then because of friction it will come to rest
that's a real thing a real process but physics doesn't describe real processes physics describes
idealized even mathematicized counterparts of those real processes so a force oscillator with
dampening is never realized in the real world just as the mathematical closed figure called a
circle is never realized in the real world there are no certain meaning there are no perfect
circles in the mathematical sense and similarly there are no force oscillators what we mean by
force oscillator the idealized case described by the equations of physics so models are important
because they describe the idealization and now we do experiments in order to work out whether
these idealizations in fact capture reality and if they do we get our little green badge and we're
a physicist and if they don't we go back to work to do more experiment so models on this view are
essential features of physics because physics deals not with reality but with models yeah all
right and so well we've seen all of that these these are some examples of systems so systems
simple systems like these are such that the system behavior can be predicted using classical physics
and so the behavior of simple systems may be church during computable in other words it may be
that we can have computers can emulate the simple system but complex systems are not going to be
emulated by a machine and these are the these are some examples of complex systems
and the new york stock exchange and this is the book again and then now we're back to physics
so magnitudes in classical physics are described here and i don't have time to go through this
this is our ontology of magnitudes oh sorry this is that what we had before just with examples that
you can read now and this is more on models what models are how we build them the models are built
by people and that's all classical physics roughly pre 1906 modern physics is generativity theory plus
quantum physics and this sent the heart of quantum physics anyways the idea of a Hilbert space
which we can already fit into our original mathematics ontology so a Hilbert space is a
subkind of the kind metric space which is subkind of the kind vector space which is a subkind of
the kind algebraic structure which is a subkind of the kind structure all of that is in the
mathematics ontology and you can't do quantum physics without physics and well this is more
you can't do quantum physics without the idea of inner product and without the idea of operators
and projectors and so on and i so Feynman said if you think you understand quantum mechanics you
don't understand quantum mechanics they say in fact i think what he really said was this
that we can safely say that nobody understands quantum mechanics now what did he mean
so what are the domains which we can understand now i think we can understand the domain of
mathematicians understand mathematics there's no mystery about that they build it and they understand
what else can we understand apart from mathematics answer is the domain of everything which falls
under bfo that's it and so that's why we can't understand quantum mechanics because it doesn't
fall under bfo and so some mathematics common sense so what is the common sense domain
now that we're not we didn't make this up there is a certain amount of theory on common sense
it goes under the name primary theory primary and this actually gets deep into the heart of
iso icy to want to create that too
robin horton was an anthropologist who lived in africa i think he was born now and he worked on
the worldviews of different cultures both western and non-western and he decided that there were two
kinds of worldview which you can formulate as theory one is primary theory and that is
a theory which is about at the common sense world the boats and and and snowballs and
leaves and and food and drinks and so on the things that you need in order to survive and
behave in an in an everyday world and then secondary theory are theories which you only
find in one culture or another which are not shared by every culture and examples of secondary
theory would be quantum mechanics uh catholicism um plus pythagorean pythagoreans which is the
view that everything is made of nungles panpsychism which is the view that everything in the universe
is conscious and solipsism which is the view that only i exist all of these are secondary
theories and now primary theory common sense is is definable it's that which all cultures share
and that is roughly speaking what you find would be a vogue
little bits of mathematics but not much that there are some cultures which are varying
it's small amounts nothing and uh and so it goes like this you can study this what while we can
we see if we can contact john it's about he should find our beings oh i'm here so that's john no fine
yeah this is hi i'm john well let me find the slides here we go hi everybody john Beverly
that's me at the top and also on your screen i'm going to be talking today about implementations of
bfo um because there's sometimes some confusion about the difference between bfo is used as a
broad data model and uh bfo and its actual you know everyday owl and so i'm here to
shed some light and illuminate that um as you see john Beverly professor at university buffalo
colleague of barry's uh speaking here in capacity uh vp for the national center of ontological
research and representative of the bfo community so here's what we'll do i'm going to talk about
bfo ontology repo updates repo a github repo uh because we have a lot of our we have our artifacts
on a github repo i also talk about clarification around some implementations of bfo what it means
to implement bfo i'll do this real quick i know you guys probably want to go eat some pizza i saw
the schedules pizza day i won't i won't keep you from it i'll talk about a core bfo file
and then temporal extensions and this is where it's going to get interesting so if you know
anything about bfo um uh you can probably already tell why it's going to be interesting and if you
don't um well hold on to your horses okay here we go clarifications so there has been some confusion
concerning which bfo file and the repo folks should use uh and that that makes sense if you go to
the github repo i have a screenshot of what it used to look like over there right here on the right
it's a little confusing you got the 21838-2 definitely iso that's good reference to iso
but you also see file or directories like common logic model and a bunch of the files in different
formats named bfo it's a little hard to parse sometimes not the best documentation this is
not knocking out and i love alan alan did amazing work but you know documentation is important so
we're clarifying cleaning this up so here's here's the new structure and i'll walk through it real
quick the development team uh myself included work to clear this up so that it's easier to
understand it's on a fork right now uh i'm going to merge it shortly but here's the structure
over on the right it should be clear and if it's not hold on um so we know that bfo is described
in the standard and described in this building ontology is a basic formal ontology book describes
a theory that outstrips the the the expressivity of owl right which is what we typically use when
we we're dealing with bfo or any ontologies really so there there are lots of different
implementations of bfo some of which more accurately accurately represent or reflect that
broader model that is described in that the iso standard in the text right common logic
there's one implementation of it it's a formal language it's a fan it's i think it's actually
cliff but it's uh represented in if and one of among a family of four first-order logics
that's used in computational reasoning first-order logic this is uh rather uh a rather
clearer i would say if i had to have to measure a clear representation of first-order logic in
this syntax common logic's a little tough to parse um usually used for documentation
uh lda ladr this is a less known syntax the library for automated deduction research this
is used in model checking um in particular with mace for improver nine which which alan
ruttenberg had used to generate the consistency proof for the the broader theory uh just just
pointing at these you probably don't care that much unless you're nerd about logic like i am but
what you're probably more interested in is this owl file here so so this is what folks typically
mean or when they're talking about bfo in the wild they want to they want to focus on this specific
file so here here's the updates guys okay okay calm down i see you're too excited let's relax okay
here's the update so over here the bfo implementation in owl we're switching the name
it's the core file now bfo core owl and it it's switched from the previous file name which was
not wasn't the wasn't the full full gamut of temporal and and space and time and all that
but it was called the bfo 2020 without some all times dot owl file and this was basically
all the classes all the relations etc but without the all and sometimes um object properties
okay so this you see here this again all the bfo classes in the 218 or 21 a38-2
and all the binary relations that do not require a third index for time that's the important part
okay why to remain computationally tractable owl doesn't permit representing relations that hold
between more than two things i assume you know that but if not blowing your mind right john is
next to sally fine and owl john has armnet on tuesday not fine and owl we can't represent that so
representing time with only binary relations has been a persistent challenge for the ontology
community in general we have been working on this on attempts to to represent this information
one of those attempts was allen's temporalized relations strategy there are others there's
for instance the common core ontology suite and their team has developed a an approach to this
this model a set of modeling patterns derived that kind of revolves around stacy's which is like
unchanging dependent continuance over time that are related to histories and whatnot
so here's some examples temporalized relations location of at all times located in at all times
the inverse um you also have sometimes versions of these uh on the other hand stacy's you just
kind of get to use the same object properties that you would see in the relations ontology for
instance location of and located in just with some more formal structure somewhere else in
your design pattern so temporalized relations that strategy that was that's that allen developed it
provides a semantically rich representation of time and it does support sophisticated reasoning
about time but it's hard to use real hard to use folks at a challenging time like just just trying
to figure out when located in at all times holds versus located in it sometimes and i can tell you
having worked in industry with folks um subject matter experts who would you know task to to
represent uh stuff with ontologies or like their domain with ontology they would typically just
defer to using the sometimes relation because it's the weakest um and because they wouldn't
know when all times held like when is something a part of something else at all times harder to
say than when something is a part of something else at sometimes the problem is sometimes is
logically weak it says almost nothing like you don't get transitivity you don't you don't get
much right it's just basically a tag um the stasis approach developed by cco it provides
a semantically weak or weaker version of representation of time but it is easier
to deploy and there are fewer mistakes and users have another easier time understanding how to use
it um this is not just motivated by like practical considerations of users though like sometimes
some domains i mean domains do treat time differently economists treat time as discrete
physicists are continuous and some don't even treat time at all not all domains need require
semantically rich representations of time like a lot of folks in the ogo foundry for instance use
disease ontologies to just tag articles with terms and dates they just do not need the kind of robot
i mean maybe in an ideal world if they were really using reasoning over over these sorts of
temporal structures they you know they would need this kind of robust semantics but they don't
they just kind of tag stuff so it's a lot it's it's a lot of work to get the time right so they're
not interested in doing that especially for their specifically for their use cases now other other
foundries do need this corner representation of time industrial ontology foundry terms they
use temporalized relations they need this semantic this ability to reason uh more than just tagging
data or or terms and date times they need that semantic structure that can run reasoners over
when they're handling manufacturing and engineering content okay so upshot here uh that temporalized
relations strategy the thing with the all times in the sometimes that was previously part of the
approved version of bfo owl so that was like when you use when you were in conformance with bfo you
were you and you were using the owl file you had to use that one again tough people used it incorrectly
got a lot of pushback uh we're we're taking a more flexible approach now now we are backing up a little
and saying depending on your use case depending on your domain you might need that not might not need
that robust theory of time you could also use stasis and potentially other extensions we'll
call them temporal extensions as a bfo core but you are not necessarily required to use the
temporalized relations version you are required to use one of the extensions not just not not a
specific one so generally roughly speaking that are one broadly speaking then the core
implementation of bfo and owl is agnostic about representations of time that require more than
binary relations so as you see over here in the right hand side this this is this is the core
these are the core relations you see this in the bfo core file they do not require reference to time
some of them are temporal but they don't require a third index the temporal extensions of the core
implementation of bfo such as the temporalized relations extension or the stasis extension
they provide representations of time which users can select based on from based on their needs so
here are some examples you should see the temporalized relations on the right
error pointing up is carry of it sometime carry or have it all times etc same for stasis you have
generically depends on has part has member and again the structure the temporal structure there
for stasis is it's it's the semantics of some it's weaker than the temporalized relations
representation there is additional structure for the stasis stuff it's just not built into the
object property the way the temporalized relations is it's somewhere else it's relying on like
histories and this this class called stasis so temporal extensions of the bfo core they will
import bfo core owl and add relations for the purposes of representing relations holding at
times and conformance to bfo now requires using that core of course which nobody has problem with
and at least one of those temporal extensions and then this is important because users deploying
bfo can largely do so as they have so if you are using temporalized relations continue
if you are not if you are using something like ro which cco the common core ontologies which
those are the developers stasis they are they use ro too so if you are using those and you are
wanting to stay conformant with bfo if you adopt what what the cco what cco is doing with those
ro relations you will also be in conformance with bfo because you will in that way be adopting
that temporal extension so in addition lastly the bfo development team will create mappings
across these extensions so that is to say in this case between stasis and the temporalized
relations so that you don't have drift of uses like we don't want people like one group to use
this temporalized extension and another group to use another one and then they go off and do their
modeling and then they are not interoperable so we are creating mappings between them so that
it really is you know choose choose your own adventure sort of situation and we will map
them together in the in the back end all right so in summary core bfo file taxonomy specified in
218382 and relations that don't require temporal indexing extension temporal extensions import
that core adding relations that provide richer representations of time some more rich than others
in the development team will provide guidance for selecting temporal extension based on need
will secure interoperability across extensions via mapping look at that i did it and i have
what seven minutes left
can you hear me john i can so you better explain what ro is oh i i thought you already did it's
the relations ontology so relations ontology is a large number of ontology or a large number of
object properties that are used well very often used by oboe foundry ontologies so they have
things they they include a lot of proper object properties like part of but they also have some
more specific object properties for biological phenomena like i don't know what's a biology term
his titrate from or something what's that spider's leg spider's leg
spider's leg yeah
is there anything any other clarifications i i ran through that quick i didn't want to get
in the way of you and pizza
yeah go ahead
i guess i need to control the uh the the audience i will stop over that
yeah
i shall i do that one i couldn't hear him so yeah okay so the question is are we going to bring
these uh goodies to the oboe foundry uh free wise men i mean gonna try i mean i'm trying
talking to chris uh i was talking to chris the other day trying to like just you know
finesse a little bit we got to go through the we got to go through the process of like vetting
like that's his big thing and i understand um i think we need to complete what john just described
convincingly and then take it to the oboe foundry so there are members of the oboe foundry who i
would like the whole foundry to be running on both of the logic and in both of the logic you
don't have any problems they all go away and that's in a way that might take a dream off
yeah um thank you for that clarification what i do find pity however is that in this new version
you have the so-called temporalized relations because they are not temporalized relations
they are they're in label only but they cannot actually be submitted but you think you are
because you need the temporal logic for that basically it's a it's a labor laying work on the
odds that actually having a temporal r it is a central extension throughout if you don't want
to go to the first order logic for instance there are that says alternatives to being almost
to what the label actually would mean so yeah i find it disappointing to see that that actually
made it in there are you to go into a question um are you going to go to a baffle version that will
be properly using internal logic so that you can do the actual reasoning with it
any consistency checking of what you think you are representing i mean i think i think ultimately
we have to i i share your dissatisfaction i mean the temporalized relations any representation
of time you go look at it you can you know you got the the restrictions of our so strong i mean
almost anything interesting is a non-simple property like suddenly you can't say much like
we say hey i'm representing the allen interval calculus no you're not hush that not an owl
but you can't all right like so like i i totally understand at first order logic though we have
that intense logic or temporal logic we could represent the sorts of structures i think ultimately
we're gonna have to because ultimately i think um that sort of temporal reasoning or the sophisticated
temporal reasoning that hasn't really been a set like within use cases of ontology are becoming
more and more necessary like the use cases that we're seeing now uh do want that kind of temporal
reasoning they they do want that semantic rich representation so we've been getting away for
too long without it we get we have to we have to appeal to some more tools uh so some folks have
been working like uh fabian um i'm not sure fabian's here fabian has no house has been developing some
some tools that are allow you kind of put kind of to put uh first order logic axioms on top of some
owl axioms and you know generate a combine them generate a model and prove some theorems
using vampire in that setting and then i think maybe they're allows for a conversion back into
owl some to some extent i'm not sure so so there's some research in that direction i myself have
been trying to finesse shackle um in combination with owl um so using the expressivity of shackle
with uh you know because it can also use sparkle with embedded within its shapes
to try to maybe approach or get make some more progress towards representing temporal logic but
really just work in progress um i share your dissatisfaction is the answer uh and i also share the need
one more
anyone
okay we finished one minute early come on guys no other questions yes yes i i do shave
that's correct i know you're all so good all right thank you all very much thank you
bye guys
