gosh am I upset so I definitely just recorded this video two different
times with different OBS settings and they both were just terrible I if
anyone knows of a good video to get OBS audio setup between your mic so
basically what happened was I had my mic set up but for some reason all of the
default mics were set to the mic I had plugged in so when I listened back to the
audio you could not only hear me four times but it was extremely loud I think
I fixed it now I certainly hope so I'm gonna try to get through this video
quickly so I'm not super frustrated if I fail again but anyway other side note
I've switched to using herbs left herb slough I don't know how to say it but
it's a pretty cool window manager I like it quite a bit I might do a video on it
soon but anyway this isn't about that this is about my favorite my very
favorite library in all of maybe all of Unix because I use it hundreds of times
a day some maybe even thousands I don't count but it's called the read line
library and it's used in bash as what's called the line editor so command line
interfaces will often have line editors ZSH has one called ZLE which just
stands for ZSH line editor but read line I've done videos on before it's the one
that's on by default in bash but I found some amazing new tricks I have to show
you so just as a brief reminder the read line library is how you control the
line the CLI like I said before so you can do things like if I type three word
four words and one of the lead one I can hit control w and I can control w again
to delete a second one if I want to repaste those in a different spot I can
hit control y I pasted them in the same spot in this case but if I want to let's
say paste them at the beginning so it's a different example one word three word
four control w control w control a to go to the beginning of the line and then
control y to paste them and then I can hit a space there to add that space
there so you can also just from where you are delete backwards and then it
control e to go to the end of a line control y to paste again so we're back
to a reword before now all that's great I've shown that before so this is just
a refresher for those of you who might be new or I'm sorry for those of you who
saw it before I guess it will be new to those of you who are new but I found some
amazing new features that I just could not hide because they were so great so
awesome so one of those is I've always done control backwards and control
forwards to move forward by word so it makes more sense if there's a bunch more
words there right that's how you move forward that's actually in read line by
default you can hit control I'm sorry alt B to go backward by word or alt F to go
forward by word now in Herb's left control alt F is it's key bound to full
screen so I can't do it here I can overwrite that in fact I can't think of
a time when I would need full screen in Herb's left so I might just overwrite
that by default that seems like that would be for the best but anyway so that
navigation is really valuable and it was new to me I don't remember if I've shown
this before but if you do something like I hope I showed it before something
like this and you want to change or you want to delete just a certain path in
the directory if you hit control W you go back to the most recent space I'm
hitting control y to bring that back but if you do shift all backspace you go to
the most recent non-alpha numeric character like that right so I could easily
just delete this and then backspace here type var and then control y to bring
back what I deleted using shift all backspace and I'll put all these key
bindings in the description so it makes sense remember though if they don't work
it could be that your window manager or something else is bound to those keys so
just keep that in mind as well additionally if I want to do let's
say I want to copy this file to this one I want to do that now these files don't
exist but let's say they did exist but I got them in the wrong order like the
first one didn't exist but the second one did right I could easily just let's
count here we have if we start at zero we have zero one two arguments and I can
use the bang directive which is the exclamation point to slice the previous
command so you'll know if you've ever done anything with with bash redline
before that the exclamation point just means previous command and so if you do
previous command and then you type the history number it will repeat that I don't
know what two three four is I'm not going to run it it will repeat that command in
your history if you do previous command previous it does the exact most recent
command so it'll try to see the copy command here but if I want to do
something special with that like slice the previous command I can do let me just
type it again here actually so remember again we have zero one two arguments I
can do CP bang directive and then zero one two sorry one two two one and you
can see here that's replaced those two in in order using what are basically
slices or arrays or whatever your lists whatever your favorite programming
language calls them I don't know what bash calls them so these are amazing new
things I've learned but there is one way more amazing thing I've learned it's so
amazing I can't believe it's real I'm gonna start using it I'm fairly
positive but I haven't used it enough yet so the one thing I never made the
connection to is that these commands I've described control a to go the
beginning of the line control k to delete from the cursor those are emacs
keybindings and I never made that connection before the read line library
was written by the same people who wrote emacs Richard Stallman was on that
team etc but because so many people working on the library preferred vi as a
text editor they made a mode called vi mode which you can enter by doing set
tack oh by again this only works on bash this is not implemented in ZLE so what
does that do well you always start an insert mode so I'm just typing but if I
hit escape you can watch my cursor there escape it goes back onto the keys and I'm
now in normal mode editor mode visual mode I don't remember the name of the
mode and by but I'm using H&L to navigate the keyboard right I can hit
J&K to cycle through history right so these are commands I just typed right I
can hit zero to go to the game of the line dollar sign to go to the end B to go
backwards words everything you can do in in vi the default vi keybindings you
can do here so if I want to do delete the whole line I can do DD if I want to
paste it back I can do P right and I can of course like I said cycle through
history the way I just showed or I can yank let me see if I if I just yank a
word here let's do YW go to the end of the line hit capital P paste it what
they're wrong whoops kind of you don't do oh yeah I can do you don't do totally
fine you see though I can I can hit I to go back in edit mode so now I've hit I
to add a space there escape to go back all of those key bindings you're used
to me if I do can if I do V do I grab the actual oh okay if you hit V it
actually opens up the command in Vim which is cool and I'll bet if I edit it
it'll take me back let's see if I do that let me get out of here now oh no that
didn't work at all oh is that an actual command I didn't know that anyway so
maybe maybe the editing there is actually a little bit more it's a little bit
tougher than I thought I might have to get used to it I just started using this
I just found out it's real so it makes you type clear here because and this if
you want to go back to normal if you just want to experiment with it you just do
set taco emacs which of course brings us back to where we were before I can hit
control you control Y control B or all B etc control K all the same stuff we had
before you can also change the key bindings on either of these I didn't
realize that as well I mean it makes sense that you would be able to customize
it it's all open source it's all here on the actual computer you're running it
from so that makes sense but if you want to do what I do in Vim or Vi which is I
don't like hitting escape to exit insert mode I'm going to enter insert mode now
and I'm gonna type something what I do to get out of insert mode is I just hit
double J I've made that key binding accessible to me so I can escape insert
mode that way without having to reach for my escape key you can key bind read
line to do that as well whenever you're in Vi mode so anyway that's all I really
wanted to show play around with it let me know how you like it I think it's
awesome I'm probably gonna start using it I just got to you know change some
key bindings up I have never liked ZSH's ZLE the their line editor which is why
I've never switched to ZSH whenever I start Cali up now I always switch the
default shell back to bash because I'm so familiar with the key bindings oh did
I not show the kill buffer oh my god I'm sorry I'm so sorry that was one of the
coolest things ever and I didn't even show it so in read line here's another
I guess another trick you're getting for free this is a bonus part of the episode
whenever you're in emacs mode which I was my the default one I'm used to I
showed you that kill buffer so if I want to do word one word two if I hit
control w and then I hit control y that pastes what I just deleted right what I
just found out is that this is actually being pasted from what's called the kill
buffer which you can cycle through so I just deleted word two now I'm gonna
delete the whole line this means when I hit control y let's say I want to do
echo and I don't hit control y right it pastes back what's the most recent item
in the kill buffer but I can cycle through the kill buffer by not moving my
cursor and hitting alt y so you see we're now at word two which I just deleted
the first time so if I delete all this now and I hit control y we can cycle
through the kill buffer again to see the most previous things we've deleted
anyway that's an incredibly powerful command if you want to store very
complicated commands in your if you're doing in bash let's say these aren't
complicated commands but let's just say we're doing something like copy thing
doesn't matter what it is and then I'm over here doing I want to pipe that to
a different command blah blah but I don't know if this second command works I
can do control you to delete the entire line test the second command works and
then I can paste back and then edit whatever I want but if I need to edit
the command that I'm testing okay that didn't work but maybe it will work if I
do it like this then all I have to do oh okay I don't know what that's about but
and then I want to get back to the command I was testing I can hit control y
and then cycle through that kill buffer to get back to where I was and start
re-entering the command I was testing anyway a little bit all over the place
this video I've been gone a while because of work stuff I won't go into it here
maybe I'll do a just audio update but anyway very cool stuff the read line
library is significantly more powerful than I originally thought it was I'm
gonna start using vi mode and let you guys all know how it is if you guys have
any advice for OBS let me know I am terrible at it if they're like a good
once-over video I'm you know it's not the reason I don't upload I don't upload
because I'm lazy but I've never had such a bad time as I did today anyway hope
all you guys are doing well I'll be back on shortly
