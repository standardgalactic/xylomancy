This is a brushless motor. It is often used for creating lift, and it uses three phase
electricity. I'm going to show you how they work, and even how to control one with an
Arduino in this video, which is sponsored by Brilliant.org. You can get a 20% discount
by using the link below. More about that later.
A brushless DC motor looks something like this. They come in various sizes and designs,
but they all convert electrical energy into mechanical energy. We can use that mechanical
rotation, for example on a drone, to spin the blades and create lift. We find these motors
used in PC cooling fans. This CD drive uses a brushless motor, and even this battery power
drill also uses a brushless motor. What makes this different to a standard DC motor?
When we compare the two, we can notice that both have magnets in the outer casing,
and both have coils of wire at the center. However, with a standard DC motor, we find
these brushes at the rear. This refers to the arms and the carbon blocks which rub against
the commutator plates, and allow electricity to flow through the coils while it rotates.
The gaps in the commutator plates cause the coils to energize and deenergize in a certain
order to cause the rotation. Because the brushes rub against the commutator plates,
they wear down over time due to friction, so the motor will need to be repaired or replaced.
When we look at a brushless motor, there are no brushes. That's because in this design,
the outer casing rotates and the coils remain stationary. As there are no brushes,
there is very little friction, which makes the motor more efficient, and it lasts longer.
We can also get in-runner motors, where the rotor turns inside. But most applications use
out-runner motors, where the rotor turns outside the motor. In-runner motors typically rotate faster,
but out-runner motors have much more torque, which is why they are more commonly used. So,
we will only discuss this version in this video. With a standard DC motor, we have just two wires,
and it rotates as soon as we connect it to a sufficient electrical supply.
However, a brushless motor has three wires. These connect to an electronic speed controller.
A main controller sends signals using pulse width modulation to the speed controller.
The speed controller increases, maintains, or decreases the speed of the motor by controlling
when current can flow through the three wires and into the motor. We will see how it does that later
on in the video. By the way, we have covered how DC motors work in detail previously, and you can
even learn how to build your own motor too. Links down below for that.
When we look at the brushless motor, we notice there are three wires entering the base of the motor.
These are usually coloured differently to represent the different phases. The base of the motor has
some threaded holes, which are used to mount the motor to a surface. There is also a clip,
which holds the shaft in position. The shaft runs the length of the motor, and it also extends
out the front of the motor. We can connect attachments to this to make use of the rotation.
Notice when the shaft rotates, it also rotates the front half of the motor casing.
Therefore, this is the rotor, and this part is the stator. The rotor and the stator both have
holes in their casing to vent heat which is generated by the coils. That's because if too
much heat was to build up inside, it will melt the protective enamel insulation of the wires,
causing a short circuit which will destroy the motor. If we remove the clip on the back,
we can remove the shaft and the rotor to look inside. Looking at the stator, we can see the
shaft passes through a set of bearings to ensure a smooth low friction rotation.
There are 12 teeth on the stator in this design. These are made of laminated thin sheets of metal,
which are electrically isolated from each other. This is to reduce the eddy currents inside the
motor. These are caused by the magnetic field and waste energy by creating heat instead of rotation.
We can also notice that there are 12 coils of wire grouped into three different sets.
The wire is enameled, which electrically insulates it. This means the current has to pass through
the entire length of the wire to reach the other end. If it was not insulated, then the current
would take the shortest path possible and we wouldn't get a strong magnetic field,
so the motor wouldn't work. Each set of coils connects to a different phase. There are three
phases in total. If we look at the back of the stator, we can see the ends of each coil are joined to
another set of coils. The wires from the speed controller then connect to these points to provide
the electrical current. Notice that in this design, the two adjoining coils are wrapped in
opposite directions, clockwise and anticlockwise. We will see why later on in this video.
This is the most common method for wiring a brushless motor. It is known as a DLRK winding.
We see it creates a delta connection. There are other configurations, but this is the most common.
Looking now inside the rotor, we find a number of high strength permanent magnets
surrounding the inner surface. These are actually magnetized, meaning the polarity
is different on either side. These are arranged so that the polarity alternates with each magnet.
Notice that in this example, there are 14 magnets, but 12 stator coils. So we have 12 stator poles
and 14 magnetic poles, which is a common design. The difference prevents the magnets and coils from
aligning. The rotor constantly rotates by trying to align, but it will be unable to.
Let's understand how the motor works. But first, where have you seen brushless motors used?
Let me know in the comment section down below.
So now let's understand how this motor works. But don't forget to check out brilliant.org,
where you can take courses on everything from electricity and magnetism, classical mechanics,
scientific thinking, computer science, and even cryptocurrency. Their hands-on interactive
problem solving makes learning fun and easy to visualize, so you can master essential skills
with confidence. Personally, I've been enjoying refreshing my knowledge on relativity,
with interesting problems to solve, and I think you'll enjoy this too. That's why our viewers
can get started for free by visiting brilliant.org forward slash the engineering mindset,
all by clicking the link in the video description down below. The first 200 people to do so will
get 20% off their annual premium membership. I highly recommend you check this out, links down
below. The brushless motor has three wires, which connect onto the three sets of coils inside the
motor. This is also connected to a controller, which sends a pulse width modulation signal
to the speed controller, telling it what speed to rotate the motor. The signal could be sent from
something like an Arduino, or a simple servo tester. We will learn how to control the speed of the
motor with an Arduino later on in this video. Speed controllers are usually a very compact
design like this one, but we can also get larger units like this one, where you can see the components
more easily. The speed controller uses six MOSFETs, which are a type of electronic switch.
The MOSFET will block the flow of current unless we provide a voltage to the control pin. This then
closes the switch and allows current to flow through it. The MOSFETs are grouped into three pairs,
one pair for each phase. These are connected across the positive and the ground of the battery.
The pulse width modulation signal is received by the internal controller, which controls the
MOSFETs, turning them on and off. The coils inside the stator then connect to the phases
between the MOSFETs. The motor uses coils of wire, because when we pass a current through the coil,
it generates an electromagnetic field which we can see with a compass. We can reverse the
polarity by simply reversing the direction of current, or we can change the orientation of the coil.
Notice the coils in the motor are in opposite directions. This creates opposite polarities,
making the motor stronger. We know that magnets interact by pushing and pulling. We can use
them to cause rotation. We can control the coils to precisely control the rotation also.
So if we energize a phase, it will push and pull the magnets in the rotor at multiple points,
causing rotation and giving us a very powerful motor. The controller receives a pulse width
modulation signal. This means voltage is sent in pulses down the wire. The width of the pulse can
be varied. This is similar to when we press a switch to turn a light on. The longer we press
the switch, the longer the pulse will be. These pulses are sent every 20 milliseconds,
so it sends them 50 times per second. We can see the pulse by connecting the device to an oscilloscope.
If I zoom in, we can see the width of the pulse varies as I turn the dial, which is why it's called
pulse width modulation. If I change the voltage, we see the pulse becomes a higher voltage,
but it doesn't change the width of the pulse. The internal controller receives these pulses
and will open and close the MOSFETs in a certain order to energize the coils in the stator.
The speed it does this depends on the width of the pulse received. This causes a rotating
electromagnetic field, which occurs in six stages. There are only three sets of coils,
so the direction of current reverses each time it is energized, and so the polarity also alternates.
The faster the MOSFETs open and close, the faster the rotation will be. We can see,
using this oscilloscope, that as the width of the pulse increases, the motor turns faster.
So, the width of the pulse determines the speed the MOSFETs turn on and off,
which changes the speed of the motor. The speed controller needs to know the orientation of
the motor. Some motors use a Hall Effect Sensor, which detects the change in polarity of the magnets,
and from this, it generates a unique pattern which the controller can map the rotor position from.
However, most hobby motors like this one do not use Hall Effect Sensors. Instead,
the speed controller measures the back EMF. We know that when we pass a current through a coil,
it generates an electromagnetic field, which can move another magnet, but equally,
if we move a magnet past a coil, the coil will generate a voltage. The speed controller
doesn't energize all the coils at the same time. When the magnets move past a non-energized coil,
it induces a voltage in that coil, which is sent back to the controller. We call this back EMF.
So, the speed controller monitors the coils for when it is supplied electricity or generates
electricity. From this, it creates a unique pattern and determines the position of the rotor.
When you start the motor, it makes some noises and rotates small amounts. This is to determine
the orientation. So, let's now build this circuit and learn how to control a brushless motor with
an Arduino. We're going to learn how to control a brushless motor with an Arduino and a potentiometer.
For that, we need an Arduino, a brushless motor, a potentiometer, a speed controller,
a power supply and some wires. First, we need to connect the brushless motor to the speed controller,
then connect the white signal wire of the speed controller to port 9 of the Arduino.
The Arduino will send a pulse width modulation signal to the speed controller through this wire,
then connect the red wire from the speed controller to the positive rail of the breadboard.
This will provide around 5 volts to the breadboard, then connect a red wire from the positive rail
to the 5 volt port of the Arduino. This will power the Arduino, then connect a black wire from the
Arduino ground port to the ground rail of the breadboard, then connect a black wire from the
ground rail to the speed controller ground port. Next, we will need to connect the potentiometer.
So, we connect the left side to the positive rail and then the right side to the negative rail.
Finally, we connect the center pin to port A0 of the Arduino.
Now, connect your Arduino to the computer to start writing the program.
You can download my Arduino code for free, links down below for that.
Then, we type this code. This tells the Arduino to use the pre-built servo instruction library.
A servo is a different type of motor, but it will work fine for this project.
If you want to learn how that motor works, you can find a link in the video description down below.
Then, we type this, which creates an object called ESC, although you can call it whatever you wish.
Then, we type this line of code, which creates a variable integer called speed.
Then, we type this line of code, which tells the Arduino that the object called ESC
is connected to pin 9. It will send a pulse width modulation signal out of pin 9.
The pulses will be between 1 millisecond and 2 milliseconds in length.
The motor will still rotate without this last part,
but the motor will stall when the potentiometer is at its maximum.
So, we will include this in the code. Then, we type this.
This takes a voltage reading from the potentiometer on port A0,
and it associates this with a variable we created called speed.
We are sending 5 volts through the potentiometer and reading the voltage we get back from this,
which varies depending on the position of the potentiometer.
The Arduino receives this and converts the voltage into a number between 0 and 1023.
When it receives 5 volts, it is 1023. When it is 0 volts, it is 0.
The servo library we are using doesn't understand these numbers.
It only understands values between 0 and 180.
So, we are creating a scale here to convert between them.
Then, the final part of the code takes this value
and sends it as a pulse width modulation signal to the speed controller.
So, we send this code to the Arduino, then we disconnect the USB cable
and connect the power supply to the speed controller.
The motor will create a few beeps as it configures itself,
and then after a short while, we can start to control the speed of the motor
using the potentiometer. Check out one of these videos on screen now
to continue learning about electronics engineering,
and I'll catch you there for the next lesson.
