Hello. Imagine. You just wrote your latest Turing model. You found out the perfect sampler.
But your model is a bit complex and the estimated time is already quite big, a few hours. But
you have time and you have big expectations. So you wait.
Three hours later.
Well, it failed and you might have reacted violently. That's why in Turing we decided
to offer you solutions. The first one is called Turkey, a mix of Turing and Maki. And the second
one is called Turing callbacks, based on TensorBoard. But let's go about Turkey first.
When you take two of the most popular and elaborate packages of Turing, you can only
get the best out of it. By mixing a bit of Turing and Maki, you obviously get Turkey.
So how does it work? All you've got to do is create a Turkey callback object with all
the variables and statistics you would like to see. It's going to create a Maki figure
that you're going to pass as a callback to your sample function. It's a simple plug
and play situation. The figure is going to be updated with all the samples incoming.
For example, here we can see for three different variables, the histogram, the density estimation,
the mean and the variance of the estimators, and the auto correlation. This way you can
control everything is going well. Turing callbacks work exactly the same way.
It's passed as a callback to the sample function. And all data is sent to the TensorBoard session
that you can view through your browser. Just like with Turkey, we can see both
traces and statistics about the sampler and the variables that we want.
You can also benefit from the whole TensorBoard API by saving and loading your data. And it
tends to be a bit more robust when you have very long sampling sessions, where it may be better
to just check once in a while than to see it live, second by second. Turkey and Turing callbacks
are basically complementary packages. Just check what is best for you. Thanks for watching
and thanks for the contributors to all these packages.
