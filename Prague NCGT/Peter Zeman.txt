Alright, welcome to this week's Non-Pictive Geometry and Topology Seminar.
It's our pleasure today to have Petr Zehman from the Technical University of Denmark who
will tell us about quantum automorphism groups of graphs.
Thank you for inviting me.
So in this talk I will talk about quantum automorphism groups of graphs and this work
is based on those two quite recent papers with those people that are listed here.
And so I'm currently a postdoc with David Robertson and the project we are working on
is in the intersection of graph theory and quantum information theory.
So somehow graph theory is used to study some concepts in quantum information theory.
In particular the area of graph theory is graphomorphisms, which I will talk about a
little bit, and at some point in some works quantum groups of graphs occur and these two
works are sort of like a bridge between those two areas in some sense, probably from the
quantum group side.
There are two groups of people that work on quantum groups and that work on graph theory
and those groups usually don't know much about the things that the other ones work on.
And basically what I would like to a lot focus on in this talk is to show you some techniques
from combinatorics that we used to obtain some, like in combinatorics, the combinatorial
analog would be some simple results about automorphism groups of graphs, but for some
reason these results did not at all exist in the relatively recent but not that recent
field of quantum automorphism groups of graphs.
So let's start with just the notion of the graph isomorphism.
So two graphs are isomorphic basically if we can find a permutation or a bijective mapping
between the vertices of one graph to the other graph such that this mapping preserves adjacencies
and non-agencies.
So in other words the graphs are exactly the same up to some relabeling of the vertices.
We denote it like this and so alternatively this alternative two points of view will play
a role here.
So alternatively one could view it if you take the adjacency matrices of the corresponding
graphs and you would have a permutation matrix that has to commute with those adjacency matrices.
So that's an equivalent definition of isomorphism of graphs.
And another very impressive theorem was given by Lova's in a previous century in 1967 which
basically characterizes the relation of being isomorphic by the following counting of homomorphism.
So homomorphism of between two graphs is like isomorphism but you relax the condition a little
bit.
It's a mapping that only has to preserve adjacencies.
So for example you can have a homomorphism from a bipartite graph to an edge.
So and this notation means that we count the number of possible homomorphisms from some
graph f to the graph g.
So the isomorphism relation between two graphs is characterized by homomorphism counting.
So the homomorphism counts the number of homomorphism from each possible graphs to those two graphs
if it's the same then the graphs are isomorphic and also the other way.
Now it's not necessary to just restrict ourselves to all graphs.
We can use various families of graphs.
So there is a similar notion of homomorphism indistinguishability where we take some family
of graphs and do these homomorphism counts within that family of graphs.
And then we get a notion of homomorphism indistinguishability which depends on that particular cross
of graphs.
So here we have a table of some results and this is the Lovaas theorem where we take the
family of graphs to be all graphs.
And when you take various other let's say natural families of graphs you get other similarity
relation between those classes of graphs like for cycles.
If you just take cycles then this corresponds to the cospectrality of adjacency matrices
which means that the multisets of eigenvalues of the adjacency matrices of graphs is the
same.
Cycles and paths would be cospectral components, trees this is actually fractional isomorphism.
So fractional isomorphism you get by relaxing this equation here.
So instead of a permutation matrix you would use something called doubly stochastic matrix
which is basically that the rows have to sum to one.
And then there is a class of bounded trivites trivite at most k and this corresponds to indistinguishability
by something called k dimensional Weisfer-Lehmann algorithm which I will talk about later but
it's just some procedure on graphs but I will talk about it but trivite k is some parameter
of graphs which tells you how much the graph is close to a tree and then trivite is something
similar so for various classes we have notions and then this is the important one here that
if you take planar graphs this is a quite recent result that actually corresponds to
a notion of quantum isomorphism.
So homomorphism indistinguishability homomorphism indistinguishability when you restrict yourself
to planar graphs so in other words what we will see being quantum isomorphic the result
is that it's like having the same homomorphism counts from planar graphs.
So okay so just a little bit about what is this quantum isomorphism.
So this number of homomorphism yes so this notion of quantum isomorphism comes from the
notion of a non-local game which is an important concept in quantum information theory I will
just briefly introduce it so in the game you have two players Alice and Bob and a verifier
and both of the players have some finite input sets XA XB corresponding to those players
and some finite output sets YA YB and then you have a Boolean predicate which is basically
the function zero one function from this Cartesian product and so basically the players
are asked a question from the input and they have to they have to answer and the players
win if this is evaluated to one they cannot communicate after receiving questions but
they can decide on a strategy what they will do and there is only one round of the game
and one is concerned with perfect strategies in which players win the probability one and
now what kind of strategies can you have you can have deterministic strategies where you
have just some functions which deterministically say what will be the answers for Alice and
Bob then you can have randomized strategies which are not that much better but where you
can use some randomness potentially and then you have quantum strategies where this Alice
and Bob will will share some entangled quantum state and use it to to get answers so let's
immediately look at this GH isomorphism game so we have two graphs G and H and the intuition
is that Alice and Bob want to convince the referee that the graphs are isomorphic so here
is the setup basically similar that the the the Alice and Bob are asked some questions
well now now the questions are the input sets are the vertices of the graph also the output set
and what must be satisfied is that the relation between H and H prime is the same as a relation
between G and G prime so so relation in the sense adjacency non adjacency so again the players
cannot communicate there is only one round and they must win with a probability one and the
theorem is that basically this classical players can win classical in the sense that they have
like a deterministic strategy if and only if the graphs are isomorphic and now to define the
quantum isomorphism is is to basically turn this definition around and say that the graphs are
quantum isomorphic if quantum players can be in this game so that's basically a definition that
the graphs are quantum isomorphic if quantum players can win this GH isomorphism game and what does
mean just briefly is that here we have a shared entangled state between those players and basically
so Alice and Bob share this quantum system in some state psi which is basically a unit vector in
some Hilbert space and upon receiving this vertex G Alice performs some measurement e g and this e g
is basically some set of operators satisfying these conditions which is based on the quantum
formalism and the same same is done by Bob that he he does the same these operators can commute
and there is some probability probability that the players respond H H prime given G G prime
so one can reformulate this in using the notion of quantum permutation matrix so here we have this
that a matrix whose entries are p i j and these are elements of some sister algebra is a quantum
permutation matrix also called magic unitary if we have this that each p i j is a projection so
it must satisfy these relations and these these matrices in sort of in the row and column
must sum up to one and the theorem by Lupini-Manchi-Sky-Robertson is that this graph quantum
graph isomorphism is equivalent with commuting with a quantum permutation permutation matrix so
so it's it's can be expressed in a similar framework as the other similarity notions like
isomorphism is just commuting or fractional isomorphism with doubly stochastic matrix and here we have
commuting with this quantum permutation matrix so formally formally this this is just written
out what does it mean formally that these things commute yes and it's important to say that quantum
are isomorphism is actually undecidable problem compared to the graph isomorphism problem which
is clearly decidable where you just can can try all bijections between two graphs
and there I'm not stating not showing it here but there is an example
of graphs that are not isomorphic but are quantum isomorphic
right now I want to get to the somehow to the quantum automorphism groups of graphs
and let's just recall that the automorphism groups of graphs basically express the symmetries of
graphs and so so basically an automorphism is just an isomorphism from a graph to itself
so it's a bijective mapping with which again reserves adjacencies and similarly automorphisms
form a group under composition and it can be equivalently expressed using such equation that
the adjacency matrix has to commute with a permutation matrix
yeah so this in particular graph has a dihedral group d5 as an automorphism group we can do
just reflections and rotations here okay so you probably know much more about these things but
I'm just mentioning here that we have the notion of compact groups there is a correspondence between
compact groups and commutative sister algebras then when we take the non sister algebras
to be non commutative then from there we go to compact quantum groups so
we we now immediately say what is a quantum automorphism group of a graph so this is definition
according to Banica and basically so we say what is this sister algebra in this case so the
c of qg that's how we'll denote the quantum automorphism group of graph is the universal
sister algebra generated by the elements pij and satisfying basically these following
relations which we had similar relations before and these first two relations correspond
to the fact that sort of the p made up of this entries pij is a quantum permutation matrix
and this last one corresponds sort of to this commuting equation
so if we require those pij to commute then then we get that the c of algae the algebra of functions
on the automorphism group of graph and the pij would be a function taking an automorphism
to the ij entry of the matrix representation and this matrix p is then called a fundamental
representation of of qg now let's connect it to to quantum isomorphisms and so let
be the fundamental representation of qg and we can define the following relation that ij corresponding
to some vertices let's say of the graph i is in relation with j if pij is not a zero
now the theorem or lemma is that this is actually an equivalent relation and
the orbits of the or quantum orbits are defined to be these equivalence classes of this of this
relation and so the how we connected with the isomorphism quantum isomorphism is that
if g and h are connected graphs then they are quantum isomorphic if and only if
there exists g one vertex in the first graph and one vertex in the second graph which are in the
same orbit of the union of the graphs which is sort of mimicking what is expected in classical
automorphism groups of graphs i will mention it also later and it's a very important theorem
which will actually provide us with the combinatorial tools that can be used to study
quantum automorphism groups of graphs and this is exactly the following so so let g be a graph and
now i will define this two-dimensional weisfer lemma algorithm shortly
but it's some kind of algorithm that creates a partition on the graph which is
automorphism invariant in the classical automorphism group so we have this partition
of the vertices and which is constructed let's say by this two-dimensional weisfer lemma algorithm
and if two vertices belong in two different colors or partitions
then this pij is equal to zero so in other words they are in different quantum orbits
so so this is very important very very useful tool in general and it's actually
this result is due to also these people and this is very powerful tool powerful combinatorial
tool to use and it appears in many many different areas so it's actually i think quite fascinating
result and there is also and i will talk about this there is also a better version of this two
dimensional weisfer lemma algorithm but it's no longer useful for quantum groups because as far as
i understand it's not really possible to define quantum quantum orbitals of
like analogs of orbital which are basically the orbits of the action of the group induced
on the Cartesian product of the set on which is acting so um
yeah so if you remember in the beginning we had this slide where where this notion of k-dimensional
weisfer lemma indistinguishability is equivalent to homomorphism homomorphism counts into graphs
of this bounded trivite so then there was the result by robertson manjiska which says that
quantum isomorphism is equivalent to counting homomorphisms from planar graphs so this is
another reason why higher dimensional weisfer lemma doesn't work here is this because all planar
like all trivite graphs at most two are planar but trivite graphs at most three are not all planar
so that's another let's say reason why why this weisfer lemma doesn't work anymore
in higher dimension now let's finally talk about this okay weisfer lemma in a bit so now I want
to a little bit talk about the graph isomorphism problem because that's actually the motivation
for this weisfer lemma algorithm so graph isomorphism problem is just the computational variant of this
graph isomorphism so basically we'd get two graphs and we want to answer yes if and only
if the the graphs are isomorphic and there is actually a polynomial time equivalent problem
which is computing the generating set of the automorphism group of the graph
so actually this is very similar to what we said before about quantum groups and
quantum isomorphism that to to see this why why this is equivalent or at least one direction
is to just consider two connected graphs and then take the disjoint union and basically
if there is an automorphism taking one to the other then we know that they must be isomorphic
when there is a generator in the generating set of the automorphism group
so the currently best known algorithm for graph isomorphism runs in this time which is called
quasi polynomial and it is actually heavily based on group theory and just why this problem is
actually interesting is that from the complexity theory point of view actually you can have basically
three things that can happen and each of them would be very interesting like if so the goal
is usually to solve some problem in polynomial time and if you could solve it in polynomial time
then it means that you probably have to invent some new mathematics if it was mp complete which is
like the notion of algorithmic hardness then then something called polynomial time hierarchy
collapses which is basically part of complexity theory and if this collapses then many people
believe that this doesn't collapse so they believe there is evidence so that it should
not be mp complete and when it's intermediate somewhere in between then it would resolve the
famous p versus mp question so so this problem originated from some practical applications
but actually for practical applications it's pretty much solved actually by these vice
or lemma that I will mention it works very well in most of the practical cases but yeah so why is
this problem actually difficult is that these algorithms are actually heavily based on group
theory and one of the one of the main parts is to do some recursive algorithm and the problem
the problem are are different complication complicated actions of some large group like
if we have this simple graph then it has the automorphism group s n and it has the so-called
natural action on the set one to five which basically doing what you expect to just permute
the vertices but if you care to guess okay I'm missing an edge here oh no what is the
automorphism group of this graph which is the well-known peterson graph
yeah it's also s5 sorry s5 yes it was s5 no it's s5 but now it's acting like on 10 points
and actually you cannot find like partition into into non-trivial blocks
so like partition that is preserved by the action you can only partition it trivially
and this means that action is primitive and you cannot do recursion so the problem is in this
isomorphism testing with large large groups which have not quasi polynomial order but is
high a large order and complicated action that you cannot decompose okay so let's get to this
vise for lemma so first the simpler version of the vise for lemma is just a color refinement
algorithm which is something that probably if you were given as a homework to solve the
isomorphism problem then probably this would be the first thing that would occur to you is that
you just take two graphs and you first color all the vertices uniformly and now you look at each
vertex and see how many what is the degree of that vertex and if you know that the degree is
different then you surely cannot map it to some other vertex with a different degree so then you
can recolor the graph based on this you see that the blue vertices have the same degrees
and the red vertices have the same degrees now you iterate this process until you get
something stable that no longer can be refined and then basically if you end up with a different
colorings then you can say that these these things are definitely not isomorphic but if you
end up with somehow the same colorings then you really do not know now the vise for lemma
algorithm does something better so instead of just coloring the vertices it's coloring the pairs of
vertices right so how does it how does it work so here we have just this very simple
graph and if you want to depict the pairs of vertices we can just depict them by some arrows
so here is the the pairs of vertices that occur in this graph and we give it some initial coloring
or initial partition so this green color corresponds to the fact that there is no edge here
and this red color corresponds to the to the pairs of the form uu let's say and this blue
corresponds to the edges now we count we construct a new partition in the next step
yes in the initial coloring we and actually it will be like recolored as you will see
so in the initial coloring all pairs that correspond to the edges to the actual edges
will be colored to the same and all pairs that correspond to the non edges and the diagonal of the
yeah
and in the next iteration we do the following count thing so for each pair uv of some color k
and every ij we count the number of vertices such that there is such a triangle in the graph
so the base of the triangle is the uv with color k and we count the number of vertices w such that
there is a first step in color i and a second step in color j of course this k ij can be possibly
the same they don't have to be all distinct and then for each pair we do this count and then in the
next step we recolor the pairs based on these counts so the next step here would look something
like this so actually you will get some some new colors on on here and the color and the new
colors here and this actually makes sense because it should be approximating the orbits of the
automorphism group and these that these vertex got orange these two vertices got orange color and
this remained red actually makes sense because these two vertices here should be in a different
orbit and these vertex and of course it doesn't work perfectly but it works very well and of
course you can construct some examples where it doesn't work but it's a very as i said the connection
with the quantum groups is actually also approximates the quantum orbit so basically whatever is
distinguished by the vice for lemma you can also use it when studying the quantum group
okay so what we actually did we colored the aj-sense matrix and now the idea of this vice
for lemma you can think of it as basically constructing invariants in mathematics we
distinguished objects by constructing invariants like the dimension of a vector space of or
more complicated like in algebraic topology some homology groups so this is something
similar basically because we colored the adjacency matrix and we actually constructed some coherent
algebra which is generated by the following matrices so to each color you can actually assign
a zero zero one matrix so like this so here you have some these these are basically zero one matrices
where the ones are exactly at those places which are of the same color and so in this case this
coordinate algebra would be generated by these five matrices and it is like a matrix algebra
satisfying the following condition so the first condition is that all of the matrices so this
generating matrices might sum up to all ones matrix so which is here clear that if you sum it all up
you get the all ones matrix so then there has to be has to be some some subset of the matrices
that sum up to identity so in this case it will be this orange matrix and this red matrix
they sum up to the identity so this basically tells you that is actually also approximating
not only the two orbits of the graph but also the orbits so it should be more powerful than just
the degree refinement and then if you take any pair of matrices if you use the bad student product
the component wise product or true product then then you get the zero matrix and then you have the
transpose matrix there it's like for example here we have a pair of transpose matrices and
then the last condition is that the product of the matrix can be expressed in such a in such a sum
and this number c i j actually are some constants that corresponds to this counting of triangles
when it's finally stable so we have this kind of matrix algebra on top of the graph and if these
algebras are isomorphic then or non-isomorphic then we can distinguish the graphs by this
Weisfer Lehmann and if they are the same then we cannot make a conclusion now you can go even
yes yes it's like basically it's the Weisfer Lehmann actually doesn't only have to be applied
for graphs you can start with any because each each each of these matrices zero one matrices can
be also interpreted as just some binary relation right so you are basically starting with a bunch
of relations and the Weisfer Lehmann algorithm will find what is called a coherent closure
so the smallest coordinate algebra satisfying these conditions that contains those relations so
but when you want to apply it for graphs you start with the specific three relations that
I depicted but it's not necessary to do that
yeah yes in this case it's just the adjacency matrix but in general you can get you can start
with any bunch of relations yeah and you can go further you can do k-dimensional Weisfer Lehmann
so here instead of coloring k-tuples sorry two tuples you will be coloring k-tuples
but I don't want to get too much into these because as I said it's not anymore relevant for
quantum groups but but there are some very interesting connections like for example the k-dimensional
Weisfer Lehmann distinguishes two graphs if and only if these graphs are distinguishable by k plus one
variable sentence with counting quantifiers so for example here you have two graphs that
this cycle and these two triangles so these are all regular graphs so one-dimensional Weisfer
which was the color refinement is actually also called one-dimensional Weisfer Lehmann algorithm
this doesn't distinguish these two graphs because all of the vertices are the same degree so it
doesn't do anything basically but you can distinguish them with two-dimensional Weisfer Lehmann
and this would correspond to some formula in three variables you can implement this
distance formula between these two where this is with one extra variable so this would be like
a three variable formula that also distinguishes those two graphs so that's a connection to logic
and then there are many more very interesting connections like integer linear programming
as I said in the beginning the homomorphism counting that this homomorphism in distinguishability for
bounded three-width graphs is equivalent to being distinguishable by k-dimensional Weisfer Lehmann
okay let's go somehow back to the quantum groups and
um so I uh what what we did in our work we basically
did a quantum group quantum underwater group of graph version of two classical results
and I will mention them now so first of all like uh Frux TRM is quite old and it says that for every
graph there or sorry for every group there you can construct a graph with the isomorphic
automorphism group and actually the quantum analog of this Frux TRM does not hold
even for quantum permutation groups and so but we are still interested in some
quantum automorphism groups of restricted classes of graphs because a lot of the results
uh about quantum automorphism groups of graphs were uh were in the spirit of
analyzing whether a given graph has or does not have quantum symmetry
or maybe some calculations for for some uh for some specific graphs let's say
but uh it's it's kind of interesting that uh the the quantum automorphism groups of trees
which we looked at uh wasn't was not so much now and so to do that I want to recall a first
product of groups so first product of groups and we will need the quantum analog of that
first product of groups is like when we want to determine the automorphism group of two graphs
if they are non-isomorphic we can just use a direct product to construct the automorphism group
but if they are isomorphic no longer works with the direct product because if you look at the
structure of the automorphism group it's actually not a direct product if it was a direct product
then this uh front square and the back square is the Cayley graph would be different so
sorry the same if it was a direct product so it's just a depiction nice depiction of the
structure of the group but this is described by the rest product and by that I just mean the
following so if I have two groups and a set omega on on which q is acting then I can take
the direct product like for each for each element of the set omega I take a group a copy of the
group d and take the direct product of this and um and then the rest product is actually
naturally defined as a semi-direct product uh and the semi-direct product is defined by this action
of of of q on the coordinates of this of this let's say vectors or
omega tuples in in in this direct product in a natural way so just by action on the coordinates
so that's the rest product and what we can do with this red product is for example to determine
the automorphism group of a disconnected graph by the following formula so if we have like a bunch of
copies of some graph then this automorphism group will be just the automorphism group of the
component uh rest producted with the symmetry group and so in general if we have a bunch of
connected components xi then we can use the following formula to compute the whole automorphism
group based on the automorphism groups of the individual graphs and this actually
can already give us a proof of a very neat theorem and this is one of the result that we
will have a quantum analog for so this maybe is a very interesting theorem that could probably be
even in some undergraduate course which basically gives a description of all the
automorphism groups of trees and it's and it's quite quite simple so it's basically just
an inductive description so there is a trivial group in the class and if there are two groups
then there is a direct product and if there is a group then there is it's worth product with a
symmetry group no so how to see this so if if we have if we have a group g and h then we can construct
the tree with the direct product just by putting those trees onto a common root and maybe if g and
h is the same so g equals h we can just add one vertex to prevent swapping so that we have the
direct product and if you want to construct the rest product it's also easy we just take a copy
of one tree or n copies of the tree then attach it to the common root and we get the rest product
with the symmetric group on the other hand if you want to prove that these are all the groups
then we can just take any tree delete delete the root it's okay enough to consider root trees
delete the root apply the formula from the previous slides for disconnected graphs and
notice that only only rest products and direct products occur there so so so the group must be
in this in this class so now we have um let so the class qt is the class of all quantum
automorphism groups of trees that can be described as follows so here instead of the direct product
we will have a free product of the of the quantum groups and instead of the breast product we'll
just have the so-called free breast product with a quantum symmetry group as send plus there is
which which contains the contains the classical symmetry group and here yeah it's just mentioned
what I already said and there was a result by Fulton in 2006 who actually showed that the
automorphism that the trees which have classical automorphism group s2 to the k have quantum symmetry
but uh yeah this is of course contained in our result as well and only recently only recently
there has been almost at the same time published a paper by some other person who I forgot the name
but he actually also arrived to this result that we have and also for maybe some other classes of
graphs uh by using completely different methods so doesn't use vice for lemmon or so on
so here I have again the definition of the quantum automorphism group of a graph but
I can just go quickly because here we have um just what we need something more is to add some
condition so because we want to work with colored graphs right so we want to have
some colors on the vertices and we want to preserve this color so we just there is just
some extra condition for that here is mentioned again quantum isomorphism let's just go further
and uh so with quantum automorphism groups something that is uh very easy in the classical
automorphism groups has to be checked very carefully so we have some bunch of operations
that we use and for each we have to prove that this actually preserves the quantum automorphism
group uh but this may be very obvious in the classical way but still we need it so one of
the operations is for example that if you have just an independent set which is a union of colors
then we can add edges between all the pairs of vertices in s so just something like this right
so you have two color classes and you just add all the edges between that uh I mean it's a very
simple thing but it has to be checked carefully with quantum groups um or adding a complete
bipartite graph between two these joint sets that are also union of color classes so something like
this you have some um color classes and you add like a complete bipartite graph between these so
this also preserves quantum automorphism group or changing this is like very very seems very
trivial that changing the color of some monochromatic vertex set to a different color or adding an
isolated vertex of a color that no longer existed so because what do what we want to do we want to
with quantum groups we also want to use some similar kind of induction as is used for regular trees
but um we need to transfer from regular trees um sorry regular automorphism groups of trees
we need to transfer from uh under unrooted trees to rooted trees so that we have some
option for an induction and we we basically use this simple operation that we prove that
preserve quantum automorphism groups to to replace undirected trees with rooted trees so
how is it done like using this operation is very simple so you just color the vertices
then you remove an edge so you can also reverse the operation then you add a vertex of a different
color then you add like the complete bipartite graph between two color classes and then you uncolor
and so it seems very trivial but somehow with quantum groups one has to check everything carefully
that it works so it's like the process of routification you can just basically introduce a root
to to an unrooted tree oh i forgot to mention that every tree has a center which is either a vertex
an edge which is like a vertex an edge which is like a subset of vertices that is equally
distant from the leaves of the tree and we do this this process that was depicted here with the
center and that is also the routification so so really that the class of rooted trees is
exactly the same as an unrooted tree so rooted trees are basically just like trees with one
distinguished vertex with one colored vertex which has to be preserved so here we if we
have a rooted tree what we can do is basically attach a very long path to it and then basically we
force for the center to be somewhere on the path because it will be very very long longer than any
path in the tree and then we then then we can unroot it and basically we we will get that the
automorphism or quantum automorphism group is the same so then i will maybe not define everything
just go over this probably familiar with free products of quantum groups and then there is a
free breast product of a quantum group so it's basically this analog of the the direct product
and and breast product of groups and we have two important lemmas that are also analog of what is
what we proved for this or what is known for these classical automorphism groups that if we if we
basically have a bunch of color color graphs that are all connected we have some components
and these components are not quantum isomorphic in this case then actually the quantum automorphism
group of this digital union of graphs can be just expressed as a free pre-product of this
quantum automorphism groups and similarly if we have like a connected vertex color graph and
if we take n copies of this graph then the quantum automorphism group of this digital union
is expressed as a free breast product with the quantum symmetry group and i didn't actually
mentioned how we are actually using the weisfer lemma here but the weisfer lemma here is used
in such a way that basically weisfer lemma can distinguish all trees so since it can distinguish
all trees then it's enough to decide isomorphism for them so it's also enough to decide quantum
automorphisms for them so in other words thanks to these trees are isomorphic if and only if there
are quantum isomorph so that's why we can apply these things for trees and putting these things
together we get this equivalent or equivalent the quantum version characterization of the
quantum automorphism groups of trees another result that i will mention is the sabidusis theorem so
this theorem says about lexicographic products of graphs so here is like some
technical definition but it's very easy what is lexicographic products of
product of graphs so basically this is a lexicographic product of a cycle with k2 which is an edge
so basically we take for each vertex of the outer graph we take a copy of the inner graph so like
here we have four red edges and put all possible edges between the copies if there was an edge
in the c4 so basically we just take a bunch of for each vertex of the outer graph we take a copy
of the inner graph and put complete bipartite graphs between those copies if there was an edge
in the outer graph x and the sabidusis theorem says that the automorphism group of of this lexicographic
product of two graphs is described as a breath product of of the corresponding automorphism
groups if and only if some condition holds um what is the condition so this is actually two
conditions written in one so if this inner graph is disconnected then the outer graphs
should have no twins twins are vertices that have see exactly the same neighborhoods so
you can imagine if this inner graph was disconnected and there were twins in the outer
graph you can think of how you could create extra automorphisms that are actually not in
this breath product so this breath product will be a subgroup always but the equality happens
if this kind of condition is satisfied for for the graphs right so in this case this is like
s2 breath product with d4 the dihedral group and the quantum version is just that we replace
we replace automorphism groups with quantum automorphism groups and we get
the free breath product in there and just in all proved the result by completely different methods
some years ago just for regular graphs so just for graphs which have the same degree
at every vertex so we obtained basically probably a much more elementary proof for this
and we prove it for all graphs so we we make a quantum version of the sabidu CTRM
and here we actually use the Weisner lemma an algorithm more deeply
so I'm not going to now go into discounts let's just ignore that for now
so but basically what we have to do we have to just follow the Weisner lemma algorithm
and see that the inner and outer edges so what we want to basically prove
because what are these what are these automorphisms in a classical case what should they do
you should have if this is just an equality you should have just two types of automorphisms
those that follow the structure of the outer graph and those that act inside the inner graphs
this is just two types of automorphisms that should be there in case there is an equality
and what we use the Weisner lemma to to do is that we prove that the Weisner lemma actually
distinguishes all the inner edges and all the outer edges so this is just a purely
combinatorial result but thanks to the connection of Weisner lemma and the quantum groups we can
it actually helps to also analyze the quantum groups so it's not clear how actually Sabidusi
proved it in his original paper because this is something from the 50s and it was so there were
several iterations for the papers there were several mistakes in it like it was at least
three times corrected or two times and but he must have done something similar he must
somehow distinguish the inner edges and outer edges but
but the Weisner lemma algorithm is much more elegant way to do it and we also
not only update the quantum version of Sabidusi but I think we prove the Sabidusi theorem in an
elegant way and maybe I'm coming to it to the end and
okay let's just quickly go over this thing here so we could we could then actually also prove this
yeah so we actually do the then do the same we could prove it by ourselves but it's easier to
use this existing result by Banika and Bishon where they actually define yet another kind of
product of graphs which is the free they call it free product of graphs but and they I'm not going
to define it because it's not that important now and they prove that this quantum automorphism group
of this free product of graphs is also the rest product so and for us to use the free product
is actually exactly what we need from the Weisner lemma is this partition of this inner
and outer edges and non edges and then we can just very simplifying it now then we can plug in
to this Banika and Bishon and this is exactly what is doing just in all who proved this only
for regular graphs he's also using this result by Banika and Bishon and yeah and just just
yeah so we prove that under the sabidusi condition the quantum automorphism group
of this lexicographic product of graphs what we what we want is exactly exactly equal to the
quantum automorphism group of this free product of these graphs where they are colored based on
these colors that we obtained from Weisner lemma and with this color because this
free product of graphs by Banika and Bishon is by is using some colors and we use exactly these
colors from Weisner lemma to plug into their product basically and yeah so maybe I almost
ran out of time here is just a very very cherry on very small cherry on top is that you can also
you you can prove a version of this sabidusi theorem for vertex transitive graphs this means
that the the two the graphs have just one orbit in their automorphism group and yeah let's just
not go over this anymore but the theorem is basically that if it's not the case that the
equality occurs in the sabidusi theorem then for vertex transitive graphs you can still
find a formula for the automorphism group and the quantum version happens to be exactly the same
okay so let's just mention some problems at the end so something that we already have in progress
is to and there we have to do much more quantum groups is to define inhomogeneous free rest product
so you have this rest product of groups where you have a group acting on some set
and now to each element of this set you assign a group now you can consider the orbits in this
section and for each orbit you could pick a different group so in this way you get an inhomogeneous
rest product of groups which somehow generalizes the rest product and it would be interesting to
have a quantum group analog of that and see what it what can be done with it so maybe apply it for some
further graph classes like planar graphs for example and planar graphs this there are some
problems even in planar graphs that are not clear and it might be very interesting for people working
in geometry because if you wanted to determine the automorphism groups of planar graphs there is a
key case of so-called three connected planar graphs if you don't want to so three connected planar
graphs basically corresponds to the graphs of polytopes and manis theorem says that they can be
uniquely embedded into the sphere in such a way that the automorphisms of the three connected
planar graphs exactly correspond to isometries of the sphere so the automorphism groups of three
connected planar graphs are exactly the finite subgroups of o3 and so these are some infinite
families of groups and the symmetric groups of platonic somets and so quantum manis theorem or
yeah oh and maybe because there is a quantum group o plus three so there might be something there
so look at maybe quantum automorphism groups of three connected planar graphs even that would be
very interesting I think so that's it
I'm sorry much for that very interesting talk do we have any questions either in person or
have some time
yes
on the recent group of a complete graph should be the s and plus the quantum fermentation group
actually I don't know much about that the reason I just heard a talk which
claimed this but yeah I think there it should be definitely true that there is no quantum analog
for proofs theorem but I don't know exactly the statement from the top of my head what what is
exactly the statement that they proved in that yeah it's it was proven by I think Bichon McCarthy
and when you mentioned the flux theorem and the failure in the quantum sense yeah
what I was wondering is there so if it fails for graphs I mean is there some other structure
for which there is a version a quantum version of yeah I don't know but yeah it's an interesting
question but I don't know
well classically the point is that
every group is a permutation group so every group acts on itself but if you have a quantum group
then quantum group is not a classical space and quantum permutation groups in this sense
are symmetries of classical spaces so if you want it a quantum fruit theorem you actually
should not consider classical graphs but quantum graphs so some graph structure on one on some
algebras non-commutative algebras
not a question I wanted to ask again for the difference between the vice-feller Lehmann and
and the quantum isomorphism so is is the difference quantified somehow more precisely how much how
much is different so so in terms of computability there's a huge difference but how many graphs
for how many graphs the the orbits are different for vice-feller Lehmann or
or quantum automorphism or do we know some examples of pairs of graphs that
that that cannot be distinguished by vice-feller Lehmann but they are not quantum isomorphic
or something in this sense like I think if I understand it correctly like if you
so if they are not distinguished by two-dimensional vice-feller Lehmann or
because
yeah that's like
yeah maybe
whatever isomorphism
yeah yeah right that would also be interesting to have some large class of graphs where we know
that vice-feller Lehmann which part should the question
well well paragraphs is not clear for paragraphs is not clear whether two-dimensional vice-feller Lehmann
will answer the question so paragraphs is actually the open problem whether two-dimensional
the vice-feller Lehmann will will distinguish them but currently is known the three-dimensional
vice-feller Lehmann distinguish it on our graphs and the open question is whether also two-dimensional
distinguish them and yeah maybe but people believe it's going to be true
like you mean it's conjectures that yes it's that it works even for the classical automorphism
yes
yeah well if if if a classical the conjecture was true then it's not that interesting for the
cognitive place but if it was not true then maybe it is yeah
yeah yeah that's a good question
so can you explain where this undecidability comes from why it is not decidable because
in the classical case you just check all the bijections but why here there is problem that
there is no algorithm yeah I don't know the problem but you must check I mean it should
be the problem that you have to check infinitely many possibilities otherwise stupid algorithms
would exist yep
what so if there's nothing further then maybe let's thank our speaker again
and next week we will have somebody
then I hope you'll join us for okay
