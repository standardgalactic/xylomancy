Look, I get it, most of you are stuck in tutorial hell.
A lot of you can't seem to get yourself out of that.
This is something I was in for the longest time that I can imagine and it's one of those
things that probably frustrated me and just straight up shitted on my career from getting
better for the longest amount of time because all I kept doing was going tutorial after
tutorial and don't lie to me right now because I know you're probably doing that.
There's a high chance of you, whether you're watching clever program or tutorials and you're
doing build after build or you're watching Udemy or something else out there, whatever
it may be, you are not making a lot of forward progress and what do I mean by forward progress?
What I mean when I say forward progress is really are you working on projects that excite
you and are you working on stuff where it's useful to you and going on your portfolio?
Are you working on things and are you able to code from scratch and build real world
things?
If you can't do that, to be honest, you're kind of screwed.
You're not going to be making forward progress, you're going to be kind of just stuck forever.
If I was to show you on the screen, it's kind of like, let me see if I can open this up.
Boom.
If I was to show you here, you'd be just like running in and this is what most of the people
who are coding are just kind of running in circles forever and it seems like there's
never any getting out of there.
Going after tutorial after tutorial and what you want to be able to do is you want to preferably
be able to go in a straight line where your career is moving forward like this, but right
now what's happening is you go to one tutorial, make progress, then you go to another one,
make some progress, then go to another one and then maybe even start picking up a new
framework where in my opinion, you're making backwards progress sometimes because if you
want to get really, really good, you should just stick to one thing and keep getting better
at it.
So in the start, I personally don't think that you should be learning like basics of
JavaScript and then moving on and trying to learn React and then trying to learn next
JS and trying to learn like all of these other things because instead of making forward progress,
really what you're doing is you're branching out, you make some forward progress with JavaScript,
then you start all over again, make some forward progress with React, then you start all over
again, make some forward progress with what is it, next JS or Tailwind CSS or whatever
is your flavor of the month and you're not really making any forward progress at all.
In reality, what you should be doing is pick up JavaScript and just start coding day one.
And this is day two, code day two.
Then if I keep going, right, this is day three.
And when I say you're coding, I literally mean you are coding.
Like, yes, you can watch tutorials, yes, you can try to pick up exercises, but like code
shit that you could do with whatever you do know.
For example, if you learn if else, make a freaking game out of if else, you can take
if else statements so far.
Make something interactive where if you have an if else block, I can type in something,
a pop-up happens, and then I type in, you know, guess you can make guess the number
game with if else statements, right?
If I guess 50 goes too low, then I guess for 30, and then it goes too high, and then I
guess 40, and then it's like close, and then I'm like 42, and then it goes correct.
You could do so much, so then do that, and you should be coding or thinking about coding
or problem solving for many hours in a day.
So many of you have this crazy freaking problem with being able to sit there and think and
focus for a long period of time.
If you cannot sit there and think, focus for a long period of time, I'm not going to say
you're not going to become a coder ever, but like you're going to have so much more difficulty,
right?
Because, for example, if you are sitting there and you have trouble focusing, you're making
turtle-like progress every day, right?
So like, for example, this is you.
You make this much progress, and that's all you got done in day one, and then day two,
you make this much progress, and that's all you got done in day two.
Then you make this much progress, that's your day three, right?
And then you have a freak like me who will code there like a motherfucker and just not
stop, and I'll code for 10, 12, 14 hours, and especially when I was picking it up as
a skill, I was literally coding 12 to 14 hours a day.
So then you have somebody who's not more talented than you, who's not smarter than you, because
I failed my math classes, I sucked at them, but I will sit there and code for that amount
of time, and that's my one day, okay?
And then if we keep going, this is my second day.
I've made this much progress on day two, this is my day one and day two, whereas like for
you and most people, you're going to be here on day six, right?
What I got done in one day.
Because with coding, unlike, let's say you're doing powerlifting, right?
With powerlifting, okay, yeah, if you deadlift and squat and bench, if you did it for like
more than two or three hours, you'll start to have diminishing returns where you've broken
down your muscles so much, you literally need to give it more time to recover and heal.
With learning, you can learn for 14 hours a day and then go to sleep, let your brain
process that and then wake up the next day and do that again.
With learning, there's nothing that kind of messes you up or is in the way.
With when it comes to powerlifting, you need time for recovery because you're literally
breaking down your muscles, but learning, you can just keep going, okay?
So that's a huge advantage and you can do this.
For example, where else can you do it?
When you're driving your car, can you listen to a podcast about coding?
Boom, there's your extra learning time, okay?
If you drive for one hour, you're like, hey, I have a long commute.
Great.
One to two hours a day, one to two hours, you are able to now, you're now able to learn
coding, okay?
Or learn about coding, which is super, super important.
If there's other things, you're like, hey, I have to use the bathroom, so I just need
to kill that time.
If you're in the bathroom or you're showering or if you're not showering, you're just freaking
going and pooping, right?
You can watch a YouTube video that's talking about code and maybe it's even interesting
or maybe pick something that might excite you, but you need to be doing things that constantly
move you forward, excite you, brainwash you to want to code and makes you want to do things,
most people, first of all, they'll only code very limited amounts of time.
And second of all, they will never do their own learning.
Most people will just only do the learning that's prescribed to them through whatever
their school tells them to do or whatever their YouTube tutorial tells them to do or
whatever their Udemy tutorial tells you to do.
If you keep doing that, here's what's going to happen.
Let me just make sure the audio is good.
Let's check the audio.
Okay.
It's looking good there.
Let's check here.
Beautiful.
So what's going to happen when you do this is that you're just going to be like stuck
and you're just going to be confused and you're not going to make forward progress.
Okay.
And also when you go to a job interview, if you weren't able to turn things into your
own and you weren't able to code something creatively and you go to a job interview and
I tell you, hey, turn it into this, you won't be able to do that.
You won't be able to make it something custom and you won't even be able to solve the problem
they gave you because all you taught yourself how to do is to follow a tutorial.
So you got the skill of following tutorials, but you did not work on your skill of thinking
and you did not work on your skill of problem solving.
So you're not going to get the job.
You're just going to be stuck.
So this is why, right?
This is so important.
Like use all this time that you have at your disposal.
If you're washing dishes, learn coding, watch a video, listen to something, okay?
What else is there?
There's, there's dishes, driving.
There's tons of countless.
If you're cleaning the house, you can be listening or watching something related to coding, okay?
If you drive a truck all the time, that's perfect for listening to audible.
Listen to the story of how Linus Torvalds, you know, built Linux, listen to Elon Musk's
autobiography, listen to books that either personally developed you or make you interested
in coding or straight up podcasts that talk about coding.
I know Wes Boss has a podcast called Syntax and there's a bunch of other ones out there.
I don't care what you pick.
I just care you pick something and you learn and you keep improving your skill because
at the end of the day, it's about the hours that you actually put into the skill and that's
all that comes down to.
If you're not putting, if I have more hours, like assuming our intelligence levels are equal.
So let's say that your intelligence level is here and my intelligence level is here,
okay?
My bad.
I meant to make equal lines.
So these lines are fairly equal, okay?
This is line one and this is two.
They're fairly equal.
Well, we're both going to be pretty much at the same level, right?
But now if you, if we're same amount of talented, but now if you're putting in two times the
time as me to learn coding, you have just two X yourself, okay?
If you're brainwashing yourself and watching documentaries, like instead of watching Netflix
at night in your wind down time, maybe you're watching Mr. Robot.
Maybe you're watching a show like Silicon Valley that is entertaining, funny, but still
hypes you up and excites you about coding and programming and you're kind of altering
your reality to become that of a developer.
Now instead of two X in your results, now you have four extra results, okay?
And this multiplier can keep increasing if you're taking care of your body and you're
sleeping healthy and you're eating healthy and your body is clean.
And now when you code and learn coding, your memory is stronger because you're able to retain
more information.
You have less fogginess so you can absorb more information and actually apply more information.
Now you've doubled maybe the result of the previous four X multiplied and you've eight
X your results, okay?
Every time you add a new element, you essentially double your results.
So one is for example, maximizing your time, right?
The other is kind of immersion, which is like what I was calling like brainwashing yourself.
And then, I don't know, what was the third one?
I forgot.
Somebody in the chat will let me know, but I'm not live, so that won't help.
But whatever the third one was, right, that that is what gives you that multiplier or each
new thing that you do, oh yeah, body, okay?
With each thing you do, essentially is a new multiplier and gets you freaking jacked in
your career.
And when we say eight X, well eight X is massive because what eight X really means, we get
out of this, is you're going to achieve in one lifetime the results I will achieve in
eight lifetimes.
You've eight X your results, eight extra career results, you've also eight X shortened your
results that you would get.
So for example, let's say in your coding career, the success you would achieve in 30 years,
well now you've eight X it.
So just divide 30 by eight.
So what's 30 by eight 30?
Here's my 30 divided by eight.
That's 3.75, 3.75 years.
So now you're getting 30 years of results in 3.75 years, which is kind of ridiculous
when you put it like that, but you're essentially getting incredible results.
So then people ask you, hey, how did you get that six figure income so fast?
Hey, how are you able to build these real world applications and you were able to figure
that out so fast?
That's how you have maximized your time.
You've maximized your body and you've maximized how much you believe in it, the immersion.
If you start to now make friends, this also goes towards immersion.
If you now go from friends who talk about years of war or call of duty or League of
Legends or complain or negativity, now if you replace that with friends who are cool
friends and also talk about coding, that's another multiplier.
That's part of the immersion multiplier.
Now what you've done is you have friends that add value to your life and you have they fasten
to speed up your growth because as you're speaking with them, yes, you're having fun,
you're having a conversation, but you're learning at the same freaking time.
So they're real time tutorials that are teaching you, but they're more practical even than
tutorials because tutorials are great, but they will not make you a better developer
a lot of the times because you're stuck there watching somebody else.
You will make progress when you do it.
So even when you watch tutorials, I highly recommend you keep pausing them, you keep
building your own thing, you keep switching it and changing it until that app is now yours
completely yours, completely unique or maybe you had a like if you somebody is building
a blogging app, you copy that and turn it into a video app.
Okay, that's how you win.
That's how you will win.
All right.
So these are some of the things I wanted to share with you.
Maximize your time with coding.
Don't go wow, I have one hour a day, two hours a day, that's not going to make you good.
You have to invest a lot of time.
If you have a family, if you have kids, which I know a lot of you do, a lot of the students
that are in our coding bootcamp, I know you hi, if you're watching this, Urchina, hi.
If any of you are watching this, hello, Brandon, I understand you have families, you have kids,
you have maybe even a job that takes up so much of your time, whatever time is left over
spend it into coding and during your time, you can still be listening and learning about
coding.
You can be literally watching my YouTube videos and talk, hearing me talk about coding.
And even if you're not seeing the screen, even that might help just because you're getting
familiar with the thought patterns, what I'm saying, the lingo, it makes it less intimidating.
It has a huge impact.
So keep an eye out for that.
So that's all I have for you today.
If you enjoyed this video, smash the like button, subscribe to the God damn channel
because this is the channel where you learn everything react react react native and also
full stack development.
And last thing I want to let you know is that for the cohort of June, we're going to be
shutting down enrollment for our full stack mastery bootcamp in just a few days.
So for the June cohort, it starts June 1st on the next five to six days, we're going
to be shutting down enrollment for that.
So if this is something, if you want to learn with me and my team, and you want to be in
our immersive coding bootcamp that we just recently launched, it's an incredible bootcamp.
And I mean, we just dive deep in this bootcamp.
So just a couple of things that you should know, it's six to eight months long right
now where we are making it even eight months because other bootcamps, they just don't do
you justice.
Like in two to three months, you're not going to become a great developer.
I'm sorry, but that's just the truth of it, okay?
The only people that become successful out of those bootcamps are people who already
know coding.
So this bootcamp is mainly for people who are looking to switch careers or complete
beginners and like looking to learn all of the skills.
If you're more advanced, you will still get your ass kicked and learn a ton of things,
okay?
So you're going to learn data structures and algorithms, we're going to teach you all
the front end, back end, you're going to learn everything, okay?
So if this is something exciting to you and you want to speak with me or my team members
about schedule a call with us, okay?
In the link below, I'll have the, you know, there's a form, fill that out in as much detail
as possible.
Currently, we're mostly working with U.S. students, okay?
So if you're U.S., go ahead and apply and fill out the details because we are very selective
about the students that we take so we can only take a couple of students at a time.
So please fill it out as much detail as possible.
So then that gives you a chance for me to pick up and get on a call with you or one
of my team members to get on a call with you.
And then we'll just let you know.
I'm going to be honest with you, okay?
We're going to be honest with you.
If it's a good fit for you, we're going to let you know.
If it's not a good fit for you, we'll tell you, hey, self-teaching is better for you,
so save your money.
Hey, this other bootcamp might be better for you.
We will just be honest with you, okay?
My number one goal is that you actually get a job, you actually increase your skills.
My number one goal is not to take your money.
I don't care.
I want to see you succeed.
I love your beautiful face.
This is Kazi.
As always, I'll see you in the next video.
