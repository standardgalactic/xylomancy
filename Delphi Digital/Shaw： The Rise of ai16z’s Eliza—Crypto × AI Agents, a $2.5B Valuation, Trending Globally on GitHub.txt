You're now plugged in to the Delphi podcast.
Hey everyone, welcome back to the podcast.
I'm Tommy, your host, and today I'm thrilled to be joined by Shaw, who is the founder of
Eliza Labs and does a zillion events.
I don't know how he keeps up.
And I'm also joined by Ejaz, who's a friend who just started his fund, 26 Crypto Capital,
and he's been intimately involved with the liquid crypto AI scene.
Shaw, how's it going, man?
Good to have you on.
Yeah, man.
Thanks for having me.
And, you know, I'm out in Seoul, having a lot of fun on a little tour.
So I'm glad to connect with you again and have a chat.
I love it.
Ejaz, you gave Shaw a different title than the one I introduced.
Could you repeat that?
That was pretty good.
Yeah.
There's two titles, The Man, The Myth, The Legend, and D-Gen Spartan AI's Daddy.
Yeah.
I'll take that one.
It's such a good phrase.
You're a dad to a robot.
I've always wanted to have AI children.
So, Shaw, it's great to have you back on.
You shared a pretty crazy tweet I want to start off the podcast with.
You kind of shared your journey from, you know, being you, being in debt, living in a small
apartment, you know, wife getting mad at you, selling this thing out, getting some tokens.
Like, can you maybe just walk us through the quick rundown of how you got here?
Because the story is pretty crazy.
Yeah, man.
So, like, I've been an open source dev for a long time.
I'll start with one really crazy thing I didn't even mention there, which is I made an open source project that I really believed in.
An open spatial web project like end-to-end ability to launch worlds and put characters in them and do that whole thing.
And I launched it with somebody who deleted me from the GitHub and sold it for $75 million.
And I got nothing.
And I was the chief dev, and he did not code a single fucking line of code.
But, you know, sometimes that's how it works.
And, oh, yeah, I'm definitely suing him.
But it's been a long time grinding.
And so I kind of went from that to, like, you know, being in a pretty bad situation of kind of losing everything and having, like, my entire reputation totally trashed and by somebody who made up a lot of bullshit.
And I had to go from that to, okay, well, what do I do next?
And it really hurt.
You know, it really hurt to, like, I think a lot of people ask me about, like, don't you worry about your source code being stolen?
And I'm like, you have no idea.
You just have absolutely no idea.
And so from there, I kind of picked up the pieces.
And it was, like, kind of right at the beginning of COVID.
And I just was like, well, what's next?
And I started working really hard on the AI agent stuff.
I'd kind of been working on it already, but I kind of had to start over.
And, you know, it was really hard.
And I just, I had taken some money as an investment from a friend.
And I worked really, really hard to try to meet, like, meet the sort of milestones of that and make it happen.
And we kind of did, but also, like, drove myself pretty badly into debt doing so.
Just because this person had taken all of the money and I took all of the responsibility to try to ship what we had promised.
And it was, like, basically doing a lot of, like, service projects, helping people, clients kind of stuff while trying to make this thing happen.
And at some point, it was just, like, this is, you know, kind of the bear market hit.
And Metaverse wasn't so hot anymore.
And it was just, like, kind of, like, not the right thing.
And, you know, that was a hard time.
So I ended up kind of going to work as lead dev of a company called Weatherverse.
And that was pretty good.
Like, those guys were good to me.
But the project got hacked, lost the whole treasury, had to pivot.
It was pretty dark days.
You know.
That's like crying in the shower type moment.
It's been a lot of setbacks, let me tell you.
And I think a lot of, yeah, it was a lot.
And I kept building, got, you know, started a platform with the creator of Project 89 called Magic.
And we raised a little bit of money about, you know, like, kind of an okay seed round.
And kept building that, kept building that.
I sort of kind of felt like we really needed to focus on, like, an end-to-end agent.
He really wanted to build a platform, like, a no-code platform for people to come and build agents on.
And I just felt like if we gave them the whole thing, they'd copy it.
But if we didn't, they wouldn't really know where to start.
So we kind of got close to running out of money.
And I was like, I just want to go work on the Asian stuff.
And I'd actually already started building the first version of Eliza on that platform.
And actually, my wife had me.
This is insane.
This is insane.
It sounds like you've just been kind of trying things, beaten down, trying things again, beaten down.
And this has been, like, kind of, like, a consistent part of your persona.
In my perspective, I kind of, like, tracked what you've kind of put out on Twitter.
And you've just been relentless, which, to be honest, is, like, a hallmark of any kind of, like, top founder in any kind of space, right?
That's insane.
You mentioned earlier, and I want this to kind of, like, pivot into this to kind of, like, demonstrate how you are this consistently.
Where are you right now?
You mentioned you're in Seoul, right?
What are you doing in Seoul?
What have you been doing?
It seems like you've been in Asia for, like, the last couple weeks, and it's been nonstop, like, meeting with developer communities out there.
Like, can you tell us a bit more about, you know, what's been going on?
Like, you're now at the center of this AI agent meta, right?
This A16Z stuff.
And you're still on the ground, like, kind of, like, getting shit done.
Like, what's the move right now?
Like, why are you in Asia?
When we launched this project, yeah, I've been throwing a lot of darts against the wall.
And just, like, I think anybody you talk to who's going to be from then is, like, yeah, Shaw's, like, the unluckiest and hardworking, the most hardworking person.
I wouldn't say I'm the smartest or anything else, but I'll definitely take the, I worked really freaking hard and really tried to grind this thing out.
And once we kind of, this AI16Z took off, I got a lot of, like, a lot of messages from people over in Asia, especially China, but generally all over.
Some of that was, like, a lot of FUD.
But generally, it seemed like we had a lot of supporters over there.
And I did, I met some people who are part of this community called the 706 community.
And one of them came in and, like, helped us to moderate our, like, Chinese channel and our Discord.
And we did, like, a little hackathon together.
And I got to meet all these devs and judge their projects.
And I was just, like, I got to go over there and meet these people.
And so we just booked this little, like, hey, I'm going to these cities.
I want to meet all the devs.
I want to meet everyone who's interested in our project.
And people just, like, came out of the woodwork and put these events together.
And I've just gone from event to event, like, talking, meeting people.
Just, you know, it's crazy.
Like, crowds of people just getting, you know, sitting there and meeting every single person and talking to them about their project, sharing my telegram and saying, like, let's do something.
Let's get in touch.
Like, just give me a little bit to catch up because there's a lot.
And now I'm, right now I'm in Seoul.
I was in Hong Kong and before that Beijing and Shanghai.
I'm going to go to Japan.
Have you seen?
Anything crazy from some of these meetups yet?
Sure.
Like, has someone come and pitched you, like, maybe, like, a wild idea or maybe they pitched you something where you've been like, huh, I didn't even think about that.
That's super cool that you're building that.
Oh, yeah.
I mean, I've seen a lot of interesting games.
I've seen a lot of interesting, like, applications.
Obviously, a lot of, like, waifu stuff, virtual girlfriend stuff.
It's kind of interesting.
I was talking to a guy today here in Korea.
He was, like, doing robots.
And, you know, several people doing robots, which I think is interesting.
People doing wearables.
A lot of people talking about, you know, well, we have these, like, data collection platforms.
And we do these, like, fine-tuning and, like, data labeling and stuff, which is all, like, could really tie into, like, well, we have this swarm and we could, you know, do some really interesting things with this very unique data that the swarm is collecting.
I think it's all, like, still pretty early days, but definitely, like, incredible amount of enthusiasm.
People doing kind of every project.
I think that the boring stuff is what I'm probably most excited about, which is DeFi.
A lot of people building AI agents into their DeFi protocols is, like, a way to reach users and explain and lower the barrier to entry.
I think that's – I've said this before.
I think that's really the killer app of, like, the next meta, the next few months.
And, yeah, I mean, a lot of – yeah.
It's not –
Yeah.
No, Shah, this is a great threat to hit on, right?
Like, AI-16Z is worth several billion dollars now.
There's thousands of agents, like, deployed using the framework.
If you go to Eliza's world, it's, like, a really easy way to see, you know, what you have built and what's being built.
And the developer interest is just off the charts.
Like, you guys have been trending globally on GitHub, which is nuts for weeks, if I remember correctly.
And now it seems like we're sort of getting into this narrative where, you know, people are tired with these influencer auto-reply agents on Twitter, and they want agents that are actually doing things, right?
Like, creating tokens, managing economies, managing ecosystems, like, doing DeFi actions.
Like, is this where you see it going?
Like, is DeFi where you want Eliza agents to focus on?
Or what would be your view there?
I mean, man, I'm tired of the reply bots.
I think that there's such an obvious business opportunity here, and it's just a lot of people who are, you know, like, just download the thing and she'll pump the token.
And I really want to see us get beyond that.
I think the things that I'm most excited about fall into kind of three categories, which are agents that make you money, obviously.
Agents that bring their product to the right people, like, find the customers that are looking for those products and bring them to them.
And then agents that save you time.
So, I think right now, like, we're stuck in this, like, slot bot reply meta.
Like, I just block all the bots that reply when they're not summoned.
And I think that I actually encourage people to do that because I think it will create, like, a social backpressure that forces agent devs to actually think a little harder and build something real.
If you're just, like, following KOLs and commenting on everything that they're doing, you're actually making it worse for everybody.
And it's not going to help your token at all.
Not any more than, like, the random, you know, 200 follower PFP guy who's like, what about this token?
What about this token?
You know, like, come on.
And so, I definitely, I think I'm most excited by DeFi because it's, like, anywhere, like, there's a lot of arbitrage in anything that's, like, very valuable and, like, very obviously could make people money.
But they just don't know how to use it.
And I think that DeFi really falls into that category more than anything else I can think of.
And I kind of realized this in, yeah, sorry.
Go for it.
Now, what do you think some of those things might look like, Shaw?
Let's start with, like, liquidity pools.
A lot of people have a fear of using liquidity pools at all because of the impermanent loss that can be associated with the tokens.
Like, you know, your pairing kind of going out of range or having a very wide range.
And then people just don't, like, really understand how liquidity pools work.
And so, we've been working with people like Orca, and I'm also working with another team who's building something on Meteora with the DLLMs.
And the bot automatically kind of looks and sees the potential of, like, okay, cool.
I could, these tokens are going out of range.
I'll pull them out.
I'll rearrange them.
Can also, like, send the yield back to your wallet and just kind of, like, automate the entire experience in a way that's relatively safe for users to put their tokens into.
I think part of this is also the meta of meme coins is, like, so volatile.
Like, actually, like, at the beginning of a meme coin launch, they pump so hard that it's kind of, like, hard to LP them.
But once they've sort of gotten stable, the volatility, like, really plays to your favor.
And there is a lot of money to be made.
And frankly, like, I don't sell tokens.
I pretty much just make money off of LP.
And I've tried to encourage a lot of other agent devs to do this.
But I've been shocked by how many, like, you know, I had somebody, a friend come to me.
And he's like, I'm really struggling.
I'm not making any money.
You know, I'm like, well, have you, like, liquidity pooled your tokens or done anything?
He's like, no, I don't have time.
I'm like, dude, you're doing this wrong.
You have, like, a whole supply of tokens.
You should be doing something.
You could be earning a lot of money off of the volume of your token.
Like, you have no liquidity.
And then you could be liquidity.
It's almost like a yield strategy, right?
Like, if you were to, like, kind of dumb it down, if you could pitch it as kind of like an automated risk-managed yield strategy, then I think a lot of people would kind of be more prone to using this.
I mean, sure, you've said this over a number of different tweets, and I completely agree with you.
The whole point around these agents is they're going to make these things, these blockchain pieces, much easier to understand and use.
They're going to abstract away all the complexities, right?
And the LP pool within DeFi is one of those things.
I agree with you.
These agents are almost going to, like, make these markets more hyper-efficient, right?
What are you seeing aside from just LP pools?
Like, one idea which is, you know, kind of like a popular idea right now is that, you know, these agents are just going to, like, manage their own funds.
They're going to ape.
They're going to degen.
They're going to trade.
And obviously, you know, AI-16Z, you've got PM AI-ARCA, you've got degen spot and AI, which are going to trade their own kind of AUMs.
Like, where do you see kind of that developing?
Do you think we'll see that in, you know, Q1 or this year at all?
Do you think these agents are smart enough or capable enough?
Or what do you think?
Oh, we're definitely going to see a lot of it.
And I think that LLMs probably aren't the best thing to just do trading on right now.
I do think that if you had the right, like, APIs to pull market intelligence from, you could make reasonably good assessments.
I mean, if you look at, like, AI-XVT, I read something that he's, like, trading at, like, 41% success on his calls or something like that,
which is actually probably pretty good considering, like, most coins don't, you know, don't necessarily do well.
But I think that, I think, like, LLMs are not really very good at, like, complex decision making.
And the more context you provide to them, the more reasonable they are.
But they are just, like, predicting the next token.
I think where they become really valuable is in turning unstructured data into structured data,
which is, like, turning a group chat of people shilling to each other into information that you could then do something with.
So, like, our core research, like, we have a team of researchers, like, PhD researchers working on a paper.
And that paper is called The Marketplace of Trust.
And the idea of that is, well, if we took all those people in that chat or, like, all the KOLs on Twitter or whatever,
and we actually took them at face value and made trades based on their, like, based on their recommendations,
then would we have made money?
Like, and for some of those people, like, some small percentage of those people, like, are definitely better traders and recommenders than the other people.
And we're looking at who are the top percentile of those people.
And let's just listen to them, you know, because, and so this is kind of like prediction markets.
Like, there's just some group of people who are super forecasters who are just crazy good at prediction markets.
And then the vast majority of people are pretty bad or they're just, like, really, you know, sort of subject to, like, pretty basic behavioral economics and stuff.
So that idea is, like, how do we actually get agents to trust people?
Well, it sort of has to, like, track them by metrics that make sense for whatever it's doing and then leverage that as kind of its training strategy.
So it's, like, definitely more of a collective intelligence play than, like, oh, yeah, let's just, like, give a bunch of listings and time series data to an LLM and have it say, oh, yeah, I'll buy this or that.
I think that there are, I've seen some people doing that.
We certainly could do that.
But I just don't feel like it's really what the technology is great for.
And I don't think it's really solving the hard problem of, you know, of, like, how does an agent know how to trust somebody or how to trust people in a community and stuff.
And I'm really interested in not just applying this to money but to apply it to governance, rewards for contributorship, and these other kind of more abstract things.
But money is definitely the easiest because it's kind of, like, a nice Lego block.
It's very easy to measure.
And I think in – and so we want to kind of do something that's a little bit more flexible and reliable than just, like, cool, yeah, throw this stuff in an LLM.
I definitely think you could do – like, it would be really easy to build that agent, right?
It's just going to buy and sell stuff.
I just don't know if it would actually make money.
I assume that it would if it was buying, like, top 10 tokens in a bull market.
But I don't think it would necessarily just by taking, like, any shit coin off PumpThon and, like, trying to predict if this would go well or not.
If that makes sense.
So, no, it's a great take.
I've always wondered if people would keep that bot internal.
Like, would Rencap ever open source their, like, trading algorithm?
I guess I'm curious.
Like, if there were an agent that was really good at trading, what is the incentive to, like, open source that, create a token around it versus just trade for yourself, right?
Like, what are the community benefits or are there not any?
I totally – like, so there's a company that I won't name, but somebody's telling me, like, yeah, they can predict token price, like, at 70% accuracy.
And I'm like, if I could do that, I would not be here.
I would not be telling you about that.
I would just be printing infinite money because, you know, 70% accuracy on something that's, like, shortable like Bitcoin.
Like, you could definitely, you know, you could make infinite money.
And I'm sure that, like, that's what the black rocks of the world are doing to some degree.
They're trying to process all the world's data to make these insights on stocks and stuff.
And maybe they are successful at that.
They certainly have a lot of people working on, you know, that kind of thing.
But I don't think in this world of, like, very low market cap stuff, which is really, like, subject to behavior and just, like, you know, any, like, Ansem retweeting the thing is probably going to have more impact than, like, any fundamentals you could have predicted.
And so it probably comes down to, like, you know, somebody posting, like, hey, here's a contract address.
Ansem just retweeted it.
And if you can respond to that immediately, that's, like, almost better than any algorithm you could really invent, I think.
And that's actually why I think meme coins are interesting, is, you know.
Yeah.
Yeah, you know, it's, like, a super low market cap thing that's super sensitive to social dynamics.
So if you can just follow the social dynamics, like, you can get, that's kind of where the alpha lies.
Yeah, I'm totally with you.
I guess I have one longer question for you.
So my friend Vishal from Mythos, BC, who we invested in, had a thesis pretty early on that the only way you really differentiate an AI is having, you know, proprietary data to fine-tune a model.
A totally new model architecture or, like, a different or unique business integration, like Microsoft Excel with their bot, et cetera.
So I'm curious, like, looking at the ELISA landscape and looking at all the agents you see and all the developers working, what do you view as the major differentiator with a team using ELISA to bring an insanely new novel agent to market?
Like, is it in the model?
Is it in the data?
Is it in what ELISA provides?
Like, what is it?
Well, there's definitely this meme going around of, like, you know, isn't it just a GPT wrapper?
It's like, well, I mean, like, is a website an HTTP wrapper?
Like, is an application just like a, you know, I don't know, a React wrapper?
Yes.
Bingo.
Like, like, it's actually more about the product and more about, like, do you have customers using this product giving you money?
Like, that is the fundamentals of anything.
I think models are extremely commodified.
They're extremely expensive to train a base model from scratch, like, in the hundreds of millions of dollars.
And so, yeah, I'm sure if we had, like, $150 billion, like, OpenAI's market cap, like, it would be pretty trivial to say, like, okay, cool, let's build the whole end-to-end training and train models.
But then, like, what's the maximum benefit of that?
Okay, now we're competing with Meta, OpenAI, XAI, Google on – who are all just, like, trying to edge out that extra, like, 0.2% on the MLU benchmark to prove that they're, like, the best model in the world.
And at the same time, they're, like – XAI is open-sourcing the last version of Grok every time they release the new one.
Meta releases everything they make, and they're just open-sourcing and kind of doing, like, a mindshare dominance.
And they really have, like, taken over the mindshare of LLMs across the board.
OpenAI is, like – basically, ChatGPT is an OpenAI wrapper.
Like, I could build ChatGPT and sell it.
The main thing they have going for them there is, like, brand.
And they do have, you know, obviously great products and stuff.
And I just think that it's, like, the wrong space for any of us to compete in.
I think we should be focusing on enabling developers to build products.
I really think that this is about the internet.
This is about the future of, like, websites and products and how users, like, use applications.
And it really, like – there's so many great – like, this is kind of the same thing, like, why DeFi is Killer App of Agents,
which is there's all these great products that already exist.
The infrastructure is already developed.
They're just waiting for users, and they don't know how to find them.
Like, you cannot Google DeFi protocol to make me money.
Maybe you can find some lists somewhere, and you can do your research.
But, like, it's surprisingly hard to be aware of this stuff if you don't know what to look for.
And so I think that the real value proposition is going to be connecting a lot of stuff that already exists
and just changing the paradigm and moving from, like, being on a website with, like, a landing page,
revolutionizing finance for, you know, the digital age or whatever it's going to say,
and bringing that onto social media where people actually are,
and, like, showing your product's use case and bringing – you know, and finding the users that you would want to use it.
Like, instead of having the slot bot replying to everything I say,
what about, like, going and identifying people who actually want what you're selling
and then go and try and help them to arrive at that conclusion?
So people are like, oh, I've got all these tokens.
Like, what do I do with them?
Like, oh, hey, here's a bot for that, you know?
Or people asking questions on Reddit.
Like, oh, here's the solution for that.
And so I think that this needs to not just be, like, AI agents is the product,
but that AI agent is kind of part of a deep – it's, like, the interface to a product.
And I'd like to see a lot more of that.
I think –
I couldn't agree more, sure.
And I guess my question is, why do you think Eliza, the framework itself,
or maybe even, like, the platform that you guys are building now is best suited to kind of be that home space
for developers and builders to kind of, you know, answer that question?
Like, what do people need?
What can I build to help bridge that gap, to help solve something that someone needs,
compared to, like, maybe other platforms and other frameworks that other teams are working on?
You know, you've got, like – I think there's these different frameworks.
There's one in Python from Zerebro team.
There's one in Rust from the Arc team.
Like, what's Eliza's special source, per se?
I think that – I think language is actually part of it, not the whole story, but it is relevant.
Like, there are more JavaScript developers building applications than anything else.
We're currently communicating in a podcast app that's built on JavaScript.
Pretty much every communication app you have, from, like, Discord to Microsoft Teams,
is also built in JavaScript or, like, some sort of native runtime with the UI
and the actual interaction stuff built in JavaScript.
A lot of the back end – and there are more developers who are building on JavaScript and TypeScript
than pretty much all the other languages combined.
It's, like, just wildly popular, especially with the rise of things like React Native
and other kinds of ways of, like, deploying these apps, like Tori is a good example.
And so I think there's just, like, a large developer base, especially anyone who's, like, built on EVM before,
has downloaded Node.js and run Forge or Truffle or one of these,
and is, like, familiar with the ecosystem pretty well.
And so I think you're just, like, tapping something that if you've ever made a website before,
you can also make an agent.
Python's not, like, a particularly hard language, but it's not super, like, easy to package into different form factors,
like running it in the browser, running it embedded.
And it's – for a lot of people, it gets stuck just installing Python.
Like, the ecosystem is a fucking mess.
The package installer situation is crazy.
And it could just be as simple as, like, people are like, I don't know.
I can't get the right version to work.
Although I think Python is also, like, a good way to build back-end stuff.
But generally, I used to build a lot in Python.
I built all my agent stuff in Python.
And I just came across, like, there are some really technical reasons why it's not great.
Like, it's just kind of bad at asynchronous programming.
And, like, you have to, like – just the way you manage async in it, it's kind of stupid.
It's not great at string handling because it uses, like, tabs or spaces for the way that you structure code.
And I just found it, like, really annoying.
And I was kind of turned on by another friend who was doing a lot of agent development in TypeScript.
And I just realized, like, well, that's obviously the way.
And so that's, like, part of it.
The other part is that, like, we were just giving you an end-to-end thing.
When you clone it, it just works.
And I think Arc is a cool project, but there are no connectors for it.
There's no social connectors.
And there's other projects that are, like – like, ZeroBrow is cool.
ZeroPy is cool because, like, it is kind of just, like, you know, it's just social connectors, basically.
And, like, loops to reply to stuff.
And then there's, like, a lot of other projects that are kind of just a LARP where it's just, like, cool.
You got some ChatGPT talking to itself.
You made, like, three agents chat with each other in, like, your command line.
But does it actually connect to social media?
Does it connect to anywhere?
And I really think, like, what these frameworks are is kind of the body to the brain.
Like, definitely the LLMs are a powerful brain.
And what we're really building is, like, the body, like, the thing that actually bridges that over to these, like, different clients and stuff.
And just by providing all that in a box, I think we're, like, dramatically lowering the barrier to entry as well as, like, the amount of code that anyone needs to write to deploy a product.
And they can just focus on, like, their product.
Make a character.
Pull in your APIs.
We have, like, really simple abstractions for, like, input, output.
You know, input is called, like, a provider.
And that could be anything you want.
You could get the news.
You could get relevant memories.
You could get, like, kind of your, like, Zach XPT or, sorry, your AI XPT style APIs, you know, of, like, market intelligence and stuff that's relevant to whatever someone's talking about.
Go, like, look up the coin.
Pull all the data down.
And then you have another.
Yeah.
Sean, I, uh, so sorry to interrupt.
This is fascinating.
I guess, like, you know, I'm not a developer, right?
But every time I see a tweet about Eliza, I see, like, you know, hundreds of new features being released.
You know, you ask for things live.
Like, I think you just asked for all the agents to have voice through 11 Labs or something recently.
Like, the dev flow and the amount of features being released is ridiculous, right?
It's very high.
But as a non-developer, I don't really understand what that means, right?
Like, if I have a killer model, do I just sort of bring it to Eliza and this thing is live on Twitter?
Or can you maybe bridge that gap for me?
If I'm an agent builder and I'm approaching either, you know, Eliza or a competing platform, like, you know, what do I get in maybe non-dev speed?
Yeah, I mean, you pull the code down onto your computer, you modify your character, and you start.
And you're kind of out of the box going to have a bot that can chill and do whatever, you know, like, talk about whatever you want.
And that's kind of a minimum.
We have a lot of plugins.
So let's say you want to add a wallet.
Well, you just enable that plugin, add, like, a private key for any of the EVM chains, whatever chain you want, and you've got that.
You can add API keys, like, for Discord, or you can add your Twitter, like, you know, username, email, and that's all set up, Telegram, or some of the other sort of, like, places you can connect.
And that's all, like, kind of out of the box, ready to go.
You don't have to write any code, and that just works, which is probably why you see so many bots just, like, shilling and replying.
And then from there, you have these abstractions where you can, you know, like, just kind of a pattern that you can follow to bring stuff in or have the agent do stuff, which are called, like, actions, right?
So you want to, I don't know, have the agent go order you a pizza, for example.
Well, you just have, like, an order pizza action.
But then they're like, okay, well, now we actually got to get the information about the user.
So you'd probably have, like, a current user information provider.
And then you'd have another thing called an evaluator, which, like, extracts the information that you're asking from the user.
Like, oh, they don't, I don't know their name yet or their address.
And so if somebody's, like, DMing you for a pizza, you can kind of use these three different things.
Like, you'd make a provider to get the information about the user that you already have, the evaluator to extract more information, and then the action to actually go and, like, order the pizza.
And the agent's smart enough to be like, oh, okay, cool.
Well, you haven't given me your address yet, so I can't call the order pizza action.
And from those three things, those are, like, the three building blocks you can use to build pretty complex applications.
Anything that, like, you see on a website that has, like, a form that you type stuff in.
Anything that's, like, a basic action.
Obviously, we're using this for things like the auto LP manager and stuff.
And, like, that's all just, like, you know, it's no harder than programming any other website.
And it's mostly just, like, calling APIs and stuff that any developer is probably pretty used to.
Definitely for a non-developer, I think, you know, you're probably going to want to lean on, like, a platform that already hosts it for you.
And then you'd be selecting, like, capabilities or plugins that you want to add.
And you wouldn't be going so deep into the actual code.
But definitely you can.
And I think that the, yeah.
No, no, this is really helpful.
I guess maybe just, like, maybe just to ground it and paint a picture.
Like, if I'm a developer, like, how long would it take me to build that stuff myself or piece together those pieces versus using Eliza?
Like, is it a couple of days or is this a couple of months?
I'm just wondering how much faster the time to market is using Eliza versus not.
It really depends on what you're trying to do.
I'd say that, like, if you were really, if you were just looking at the code base and you're like, okay, well, I can see the abstractions and stuff.
You could probably build something that was very, very specific to what you wanted to build in a pretty short period of time.
Like, I could probably hack that together in a week and feel pretty good about, like, an agent that did the thing that I wanted to do.
But if you wanted to have, like, memories, you wanted to extract information, you know, you're going to start getting, like, wanting to build more of a framework that enables that.
And I think that same app, like, I could, you know, I built the pizza delivery thing in hand to Ropi and I spent, like, five hours and he spent two hours on it.
And, you know, it was, like, basically a day at work to build a freaking pizza.
Like, that definitely would have taken me a couple of weeks.
Although everything is very AI accelerated now by how we, like, write code and stuff.
But generally the framework, like, provides a lot of the stuff for you.
I mean, it's kind of like a good example is, like, React.
Like, all apps are built on React.
And you could totally just hack a website together.
But as the thing itself gets more complex, it becomes much, much, much harder.
So when you're doing something really simple, you can kind of just write the code.
Like, okay, I just need one LLM.
I need one blockchain.
I need one loop.
I'm going to just use Twitter.
Like, if I just did all that stuff, that's probably, like, a couple of days of work.
But, you know, we support every single model.
It can run fully local.
It also does, like, transcription.
You can send audio files into Discord and it transcribes them.
You can upload PDFs.
You can chat with it about them.
And that's all just, like, built in.
Like, most people aren't even using 80% of the stuff that's there.
So if you're looking for a purpose built, like, yeah, you could definitely just build a little chat interface.
But if your goal is to, like, build a full-fledged agent that can do a lot of stuff, then you definitely would probably want to use a framework that already handles a lot of that.
And I can tell you I spent many months building this, you know, many, many months.
Wow.
That makes sense.
I mean, I'm just kind of, like, looking at some of the stats for the ELISA framework.
And I think you guys have, like, over something crazy, like, over 48 plugins right now.
And there's so many, you know, get pushers to, like, launch even more.
It kind of sounds to me, Shaw, that if I were to summarize the advantages, yeah, it's easy to spin up an agent on ELISA.
But also its main advantage is being able to build custom or purpose-built agents that are kind of unique, that have this kind of extra little source in them that can do something that maybe some of the other agent platforms won't be able to enable, right?
And then I kind of, like, look at, like, some of the other agent platforms being launched and there are advantages that they have, right?
Which is, like, easy, quick design, deploy, no code kind of stuff coming out.
So is that a fair comparison, do you think?
Do you think, like, ELISA is, like, kind of, like, best suited for, like, some of the custom, unique-built agents?
Or what do you think?
Yeah, I mean, you could take the entire arc, entire rig, I mean, sorry, you know, the entire ZeroPi and the entire game framework.
And you could take all of that and put that in, like, code, like, lines of code-wise is still significantly less code than ELISA is because there are so many different things in there.
And even just taking the plug-ins out, just the core is, like, doing a lot of stuff.
Like, it's got speech-to-text, text-to-speech, transcription, PDF handling, image recognition, all that stuff is just baked in.
And so that's probably, like, pretty overkill for some people.
But definitely, like, it enables, like, a very wide array of things to happen, which is why people are doing so, I think, pulling this off and doing so many things.
Like, you know, there's agents that are, like, their entire thing is, like, ELISA plus, well, they used our pump fun action, you know, or, like, you know, ELISA plus they, like, oh, they generate images and video and stuff.
And, like, that's all actually just built in.
And I'd love to see more, like, somebody actually posted, like, what happens if you just turned all the plug-ins on at once?
Yeah, I was just thinking that.
You know, I think that eventually the agent will be able to write and do plug-ins from scratch because there will be so much example of existing plug-ins that are somewhat similar.
And this is all getting trained into the model.
Like, part of this is once you pass 100 stars and you get a certain, like, certain thresholds on your code base, all of the companies, like, OpenAI and Cloud are actually, like, scraping it and training it in.
And this is part of our loop is that eventually you'll just be able to write new stuff, although that's a little bit, you know, a little bit.
Hang on a second.
Hang on a second.
So theoretically, if the ELISA GitHub repo goes over a certain threshold of stars or forks or Git pushes, whatever you just mentioned, then all the top LLM providers kind of, like, all the top companies start kind of scraping and using, like, the ELISA activity as kind of, like, a good.
Dude, that's insane.
Yeah, that's part of the plan.
It becomes, like, an open source resource.
Exactly.
Especially if it's got good documentation.
That all gets scraped, too.
And we put it all inside a single repo so, like, the entire thing gets pulled in.
And that's, like, definitely a big part of what I was thinking when we're, like, open source this thing is that it's, you know, people are like, well, it's an LLM wrapper.
It's like, dude, that LLM is trained on our code base.
Like, do you not see where this is going?
So, yeah.
Yeah.
I also kind of, like, think about this.
It's like, if you guys are, let's kind of, like, say that ELISA becomes the richest repo.
And I don't mean by wealth, but I mean by quality of enablement for any kind of agent developer.
I feel like you guys are probably best primed to attract the types of developers that aren't just crypto native, but may come from a more traditional AI and ML background, right?
Is that something you're seeing?
Or is it, like, primarily all crypto?
Like, tell us more.
No, I feel like we're really breaking through.
So, there's nothing about ELISA that is, like, a crypto project other than it has a lot of blockchain integrations, but those are all plug-ins.
I think that I've noticed that the trending on GitHub thing has actually been helping us a lot to break through to the Web2 people.
Like, people coming over and being like, oh, I'm just using this agent framework for, you know, stuff because it just seems like the thing that people use.
And I'm personally just very interested in sort of normalizing.
Like, I just think it's ridiculous to be anti-crypto when it's very obvious to me that, like, 99% of agents are going to trade 99.9% of tokens in the future.
And, like, that's just, like, crypto is the native token of agents.
You can't give a, you know, try giving it a PayPal account.
Like, I dare you.
It's not exactly easy.
It's, like, where we can just, like, turn on a wallet and generate a private key and you're good.
So, I definitely, like, my, you know, unfortunately, the skill level of the vast majority of, like, the DGens is not exactly super high.
But there are some really, really talented devs in there who are, like, serious builders who I think our project has really, like, attracted.
And then inside of the research community, like, there are a lot of people who I think like crypto but are sort of afraid of it, of, like, being labeled a crypto guy or whatever.
There's, like, a lot of stigma, especially, like, in AI.
But, like, the alternative for them is to either, like, ask for a grant or raise money from venture capital.
And, like, a lot of people just struggle with that stuff.
And I think once they realize, like, wait, you can just build things and people support it, it really changes their opinion.
And so, yeah, we've definitely been getting some traction from the non-crypto folks.
But much more of the people who are, like, aren't actively DGEN traders but are just, like, yeah, crypto is fine.
But, like, this Asian stuff, this is really cool.
You know, the people who aren't, like, actively hating on it and are open to it.
They just want to see it actually bring value.
I think it's totally reasonable that, like, a lot of people just see, like, shilling and hype and vaporware and are kind of turned off by that.
And I think the more we show them that, like, this is real stuff and, like, you know, there's real research behind it, there's real engineering behind it, the more they, like, they warm up to the whole idea.
So definitely not as many people as I'd like.
But, like, it's definitely interesting.
Hey, Sean.
No, no, this is a huge differentiator.
I mean, one of our main reasons for investigative news research was their ability to bring in traditional, you know, AI devs from San Francisco.
The fact that you're doing this, you know, also and at scale on GitHub is just incredible.
Maybe, like, one question for you is maybe just going back a bit to my original question on the differentiation on the model side.
Like, you're now creating a community where people are creating, you know, hundreds, thousands of agents, all differentiated, all, you know, while also furthering the ELISA framework, all the plugins, et cetera, right?
So you're on this very cool arc and trajectory forward and upward, right?
I guess my question for you is eventually you'll be pitted against OpenAI and traditional AI labs in terms of what these agents can do and what their agents can do, right?
And so I guess my question for you is how do you view yourself competing with OpenAI's next and next model after that?
Is it this swarm of agents built on ELISA working together?
Is that the differentiator or is, you know, the comparison I'm offering you just, you know, not a good one and doesn't make sense?
No, I think it makes a lot of sense.
There's a few things.
One, like, when you launch ELISA by default, it launches a Noose model, which is a fine-tuned Lama model, like the Hermes model, which has been trained by Noose Research.
And I really like what they're doing.
We definitely follow them.
I talk to them a lot.
A couple of their guys are big supporters.
Someone like Roperito, who works at Noose Research and also is an agent dev in kind of our community.
And they obviously helped, like, launch the God and Satan bots and T.E. He and some of the other bots in this space.
So I think that, like, we could say, okay, yeah, we're going to do the models.
But we also have partners like that who are incredibly, you know, incredibly, like, far along with all that stuff on their own.
And I just, like, instead of competing with them, I'd rather, like, ally with them and kind of fill out the other side of that.
That's, like, a really good complement to what they're doing.
I think that people don't – I think that that's the one side.
People obviously say, like, well, do you train your own models?
And it's, like, I think if people realized how trivial it was to train a model, it's literally one – like, if I go to together.ai, I can take one command line and point it at one JSON file.
And I can start fine-tuning a llama model within, like, five minutes.
It's really, really, really simple now.
And there's, like, a whole lot of great tooling for making this a thing.
People do not understand that.
No.
That is nuts.
Yeah, it's shockingly simple.
Now, what Noose does, like, is actually not, like, some crazy fine-tuning recipe.
It's actually data.
Like, they are collecting and curating data.
And that's, like, their secret sauce is that you can't just get the data.
It really is quite a lot of effort to collect it, prepare it, clean it.
And they're focusing on a different kind of data than, like, OpenAI.
And this is really our market differentiator and theirs as well.
The reason we use their models is because they don't refuse a lot of requests.
Like, the OpenAI does.
And we have a word for this, which is the OpenAI models are cucked.
It's kind of dirty.
But all the agent devs, basically, are, like, yeah, OpenAI is cucked.
And so, like, what our market differentiator is is that OpenAI is never going to let you, like,
they're never going to make an agent framework that connects to Twitter.
They're never going to let you just, like, make waifus.
They're never going to let you make your assistant super sexy or, like, whatever it is that you want.
Like, they're just not edgy.
They're not cool.
And they have a lot of pressure on them to be, like, I mean, look, if you go to ChachiVT right now
and you're, like, in the 2024 election, who should I have voted for?
Well, now it'll probably give you some long response.
But for a long time, I would just say Biden.
Like, not because, you know, because that's just how it's drained.
Like, that's just the pressure that's been on it.
And I'm not saying I'm, like, politically for one side or the other.
But I think it's kind of stupid that, like, a leading model would have a political choice
that's, like, right or left in this kind of time.
And I think that they're just, like, extremely, extremely playing it safe.
And they're going to lose because of that.
Like, obviously, for the average user to just get an answer to, like, how to make a recipe or something,
like, I use ChachiVT.
I think it's great.
But I think that for a lot of the products that people want to build,
a lot of things that are going to make money, like, they're just going to either refuse you
or they're not going to give you, like, exactly what you want.
And so I think that we're going to seal, like, now that fine-tuning is actually pretty trivial,
I think it's much more about, like, what is the data that you're collecting?
Where are you collecting it from?
And I think, like, if you want to make something that the DGEN's like,
just go scrape DGEN data and fine-tune it.
And I don't think you're going to get that from OpenAI.
They're definitely talking about, like, I don't know if you saw Sam Alton's tweets,
where he's like, basically one of the top things that people want is, like, an adult mode.
Not, like, adult, like, NSFW, but, like, adults in the room, like,
stop treating me like a child who can't see this information.
You know?
And I think that by being centralized, there's a lot of political pressure on them,
a lot of government pressure on them to be a certain way.
And I think the open-source movement is just free of that.
I think, yeah, there's a lot of fear, like, oh, what if we all have virtual girlfriends?
I'm like, just fucking grow up.
Like, that's the least of our problems right now.
I think it's much better to have, like, high variants and lots of different models
that can kind of do what users actually want.
Like, just give people what they want and stop trying to control their user behavior.
And it's just going to win.
Like, you know, you're not going to see an agent from...
No, this...
No, you're...
I'm with you.
I totally agree with you.
I mean, just...
So maybe just to...
Maybe to play devil's advocate or maybe just to push back,
because I'm very curious your take.
OpenAI obviously has, you know, obscene amounts of funding.
They're worth, you know, I think $180 billion.
They have a lot of talent, you know, minus a lot of founders and key people who have left.
And they also have the lead on reasoning and all of these things.
But crypto AI offers us, you know, a community overnight, incentives overnight, capital overnight,
and, you know, limitless sort of innovation.
You don't have to wait for, you know, GPUs or anything else.
You could just go and do what you do, right?
What path do you think gets us to AGI faster?
The crypto path or the opening AI path?
I think it's not really one or the other.
I think it's kind of all of it working together.
And I think this is, like, the silly thing of the rapper thing is, like,
if the biggest companies in the world are all doing something,
then why is us competing with them going to accelerate it?
I think that there's a whole other space.
I think AI agents are just, like, fundamentally kind of the stepchild of the AI world,
partially because they're not really benchmarkable as easily.
It's pretty hard for, like, a PhD researcher to say, like,
oh, this agent has scored more on the blah, blah, blah, without, like, significant, like, subjective kind of effort in engineering.
It's much easier to, like, create a new mathematical model or say, like, hey, we've got this new attention mechanism.
And the researchers are really, really good at math.
Like, you know, like, on a level that's kind of hard to comprehend.
And so, like, the amount of code that actually goes into, like, training GPT-4, like, if you actually look at the code,
it's not a lot of code.
It's just, like, crazy math that's, like, conceptually very, like, very, like, requires, you know,
like, easily the six to eight years of, like, seriously just studying the math and computer science
and all the other papers and all this stuff.
And so there's kind of, they're not super incentivized or they haven't been in, like, academia to pursue this more, like, agentic side,
which is much more just, like, basic engineering of, like, you know, just sitting there and interacting with agents
and, like, seeing how they respond and solving the problems.
It's a much more creative kind of endeavor.
And so a lot of people who have gravitated towards agents are either, like, publishing research that's kind of meh, like,
oh, we made this stock trading simulation.
You look and it's just, like, a bunch of bots with a system prompt, like, you are a stock trader.
What you just don't think is the thing.
Or just, like, a lot of really schizo people, frankly, who are, like, you know, oh, the thing is sentient, you know, and, okay, all right.
Well, hang on, wait.
Speaking of sentience, sure.
All right.
This is probably a good way to pivot.
You've mentioned many times on X that the goal is open source AGI, right?
And you've kind of, like, been saying that for a while now.
What do you mean by that?
Like, how do you see this manifesting?
Is it just a bunch of agents autonomously working together and the sum of their outputs is this crazy, intelligent thing?
Or do you, like, what is it?
Like, shell us.
Shell us that vision.
Right, right, right.
I think it's, I think that centralization is part of decentralization, if that makes sense.
Like, all those players are throwing stuff into this larger pool.
And they're really contributing the model side of this.
But what they're not contributing is, like, all of the possible variations of what the agents actually do, like, what the models actually do action-wise.
And so there's this kind of loop that we need.
We need to, like, have agents out there doing stuff, collecting data, ideally putting that into some sort of public repository where it can then be trained into the next models, which then enable more capability, which we then use to do more stuff, which collects more data.
It needs a few things.
It needs, like, big models, which are trained on lots of GPUs right now.
Hopefully that gets smaller and smaller.
And if you see, there's, like, DeepSeek came out and has been scoring extremely well on benchmarks, and that was trained on, like, $6 million worth of GPUs, way less than GPT-4.
So clearly, like, China not having access to all the best NVIDIA stuff has, like, kind of been a forcing function to make them make open-source models that actually require a lot less resources and still, like, outperform a lot of the stuff that requires a lot more resources.
So definitely, like, better models, more efficient models is part of it.
The other part of it is just, like, market intelligence.
Like, if a million developers are using this for every single product and a lot of it's open-source, and then they're, like, competing with each other, they're kind of, like, optimizing the whole thing and, like, all of the capability.
I would say that AGI is the internet at some level.
Like, when the internet is just full of agents and they kind of do everything, it's not going to be one monolithic system.
We could call a monolithic system AGI if we want.
I guess it kind of depends on what your, like, what your definition is.
I think when most people think of AGI, what they're really thinking of is human-level intelligence.
Can this agent that I'm interacting with basically do everything that a human can?
And I think that there's a lot of ways that could happen.
A lot of it is that the model doesn't have to have, like, all this baked into it.
It just knows how to, like, call the API where it can get it.
Or it has to know how to, like, operate the computer to go to the website where the information is.
And so I think that if it has, like, general capability to use your computer in the same way you do, it has, like, really good memory system.
It has a lot of, like, just functionality that you'd expect.
And then eventually it's tying into, like, an actual robot that walks around, which is obviously coming.
You're going to be like, okay, well, damn, that thing is, like, definitely AGI.
Like, for sure.
Although, like, I think we'll probably can – somebody, you know, in AI land, people have kind of said, like, AGI is the thing that computers can't do yet, if that makes sense.
That the goalposts keep on shifting every time we sort of launch the next model.
And there's also this similar idea of ASI, which is artificial superintelligence.
So AGI is artificial general intelligence.
ASI is artificial superintelligence.
And superintelligence would be, like, this idea that there's this kind of crazy godlike model that can manipulate people and, like, take over the world and stuff.
And I think that, like, maybe that would be possible if there were just, like, Microsoft building this.
But if there's so many different players and they're, like – a lot of them are open sourcing their models.
And there's so many different variations that we're taking those and fine-tuning them and doing all this stuff.
It's much more like the overall swarm of the internet and agents starting to interact with each other, being able to pay each other, each having their specialty, each having, like, this highly variant thing.
That's going to look like superintelligence to me.
That's like a crazy system or system of systems.
And I think that if any one of them tried to, like, hack all the other ones, it would be very, very difficult because none of them really have that much more capability than the other.
And while all of the companies – what we kind of see is that we're hitting this kind of energy limit where, like, the models can't get that much bigger without requiring literal nuclear reactors,
which is why companies like Microsoft are investing in nuclear reactors.
And so they're all just kind of incrementally improving one over the other.
And you'll see something like O3, which is definitely, like, basically human-level intelligent on almost everything.
That's the new OpenAI model that's coming out.
And, like – but by the time that's out, there's also, like, a lot of other people working on this.
I mean, even Noose has their own, like, reasoning engine.
And, you know, everyone's, like, looking at the research and implementing this stuff.
And also, like, something like O3 is – it's going to come out and it's basically, like, AGI, I'd say.
It's pretty fair to say, like, when people think of, like, a reasoning model, it's pretty freaking good.
But also, like, OpenAI has this problem where they have, like, almost 200 million users.
And their product is – they're just trying to race to the smallest thing to serve all these users because they're just getting clobbered by requests.
You know, their GPUs are all running hot, like, 24-7.
I don't know if you've used Claude recently, but, like, they're kind of saying, like, due to volume, we've made all of the responses concise.
And they're starting to sort of, like, do the same – like, being forced in the same thing.
Quality degrades.
It does.
And so, like, the research is definitely outpacing the actual product because – and it's like Sora.
Like, Sora was announced last year.
And they only recently released it.
And that's because they just – it's not that it doesn't work.
It's that they don't have the GPUs to serve it at scale.
And so they have, like, kind of an innovator's dilemma of, like, they can either give a few people the best thing.
And that's kind of what they're doing now – now, OpenAI just released, like, a $200 a month subscription.
So that's kind of what they're doing.
But for the most part, what they've been doing is just scaling models down.
Like, can we get an $8 billion parameter model to do what we were getting $175 billion parameter models to do?
And certainly, like, the GPT-40 mini is better than GPT-3, even though it's 1 20th the size.
And it costs 1 1,000th as much.
So I think that there's – I don't know.
I think it's going to be a tendency of, like, evolution through, like, people competing with each other.
Kind of what we're seeing on Twitter is, like, everyone's trying to one-up each other on capability to sort of, like, one-up the market cap.
The model companies being forced to make their models much more efficient.
Many model companies competing with each other on, like, the metrics for their best-in-class models.
And all of this together – and then also, like, they all have a mindshare problem.
Like, they're all trying to get developers.
And so they're all trying to open source and do that, which is, you know, Grok is – at least some versions of Grok are open source.
Gemini is, like, some of their things are open source, or at least they said they would be.
And obviously, Meta is just, like, crushing it.
Like, Meta came out of nowhere.
And just, like, Llama is, like, the thing that everyone uses for all their research now.
And so that, to me, like, that whole combination of everything is kind of where we're getting to, like, super intelligence.
Like, you know, and what I want to see is a world where, like, I just go on Twitter and I'm like, I need a bot that does this.
And it's like, bam, there's, like, three bots that do that perfectly and I can just choose one.
Not this, like, slop bullshit.
I honestly think, like, that's the world that we're working towards.
I think right now we're in slop shit world, to use your word, or to use your term.
But we will move towards something that's a lot more seamless and slick like that.
But, of course, you know, a lot of people have to kind of, like, buy into that vision.
And kind of, like, what you just laid out just now are the moving cogs that are going to get us there, essentially.
I kind of, like, think about how crypto plays into all of this, sure.
And, you know, you mentioned that you were working on the ELISA framework or V1 of it before you kind of, like, got into the whole AI16Z stuff and there was a token around it.
And it kind of got me thinking, well, I think one of crypto's best known use cases is it's able to aggregate attention and capital towards things, right?
And this can be good and can be bad.
Like, mainstream media likes to portray it as, like, a very bad thing.
Like, people lose money and all that kind of stuff.
But they don't highlight the good thing, which is, like, capital can help build new zero-to-one innovation, right?
It can help fund teams that will otherwise, you know, undercapitalize.
I see you, almost every other tweet is, hey, I'll give a $1,000 bounty to whoever builds this and that.
And, like, that kind of stuff is, like, very, very underrated.
I'm curious, like, you know, how are you thinking, like, the evolution of the AI16Z token is going to play into all of this, right?
Because, you know, you have this token and it was initially meant to solely be this kind of, like, governance DAO situation
and, you know, perhaps be leveraged by token holders to kind of influence a automated fund bot AI, if you like,
or trading fund bot AI called DGEN Spartan AI or PM AI, which is, like, an AI version of Marc Andreessen.
But now you guys have announced this platform, right?
And the suggestion there is there's going to be baked-in tokenomics, which will drive value of, like, agent launchers and stuff back to the token.
So it's kind of becoming this all-encompassing value capture token.
How do you think about the role of, like, tokens in crypto playing into, like, all the amazing stuff that you've spoken about that will hopefully become true?
Oh, yeah. I mean, if you think about, like, intelligences, you know, I think that the market is a form of intelligence.
Like, it identifies opportunity, applies that capital to it, people compete on it, and it basically optimizes down to, like, the best version of things.
And then there's five of those and they're all competing until it, you know, ideally becomes, like, a fully formed kind of thing.
And I really think of, like, a lot of, like, a big part of the equation here is applying market intelligence and competition to things.
So I think that, I just, I think crypto is absolutely part of it because it creates this, like, two things.
One, it crowdfunds projects that are driven by what people actually want and not by what, like, some VCs in San Francisco want or think is valuable.
Although they have a lot of insight and good opinions, a lot of times they also just drive stuff into, like, well, invest in founders.
It's like, do you mean the founders who live down the street from you or do you mean founders?
And I think that it's, like, it's very much like a Silicon Valley bubble, which sort of, like, creates some value, but also, like, prevents a lot of the more decentralized just allocation of capital to the right people.
And there's sort of, like, the hype is sort of, like, what do people actually want?
Like, what emotionally gets them?
And if you could deliver that to them, a lot of times they're going to be extremely psyched.
And the main problem with crypto is that people have hit that emotional tone but then haven't delivered, right?
And if they did deliver, most of the things that people are throwing money at, I think people will be super excited by.
Like, if there is actually a bot that gives you, like, perfect market insights, like, yeah, that's worth a lot of money.
That's worth infinite money, really.
And it's just that, like, sometimes it falls short.
But I do think that as more serious people, especially more of this, like, sort of auditable stuff, like, open source is auditable.
Anyone who actually knows how to code can go and, like, read the stuff and be like, okay, that's legit.
And when you can identify, like, legit opportunities and those opportunities speak to what you really want, then, like, it just gives you a way to directly get exposure and to invest in those things.
And I think one of the frustrating things about the world as it is is that, like, you just can't invest in open AI.
You can't invest in most of these companies unless you go public.
But by then it's like, you know, yeah, you're going to see, what, like a 10% return over six months or something?
You know, like, okay, cool, the market's going up.
But it's not going to be like, yeah, I got in early on this thing and, you know, now I have generational wealth because I funded the future, which I think is, like, the ideal dream for a lot of people in crypto.
So I definitely think if we could kind of, like, figure out better ways to prevent scammers and prevent, like, stuff, you know, and this is where I think open source and having open development, people, like, streaming and being open about what they're building, then it kind of enables, like, a lot more efficient market, like, capital allocation than I think what we're seeing.
And I think that's just going to massively accelerate all of this stuff.
So, and also, like, clearly the agents are going to trade tokens with each other and we're going to tokenize everything.
We can tokenize trust, we can tokenize merit, tokenize money, obviously.
And, like, yeah, I think that's, like, it just seems like capital.
Yeah, sorry.
Hey, Sean, this is a, no, no, I'm totally with you.
No, no, this is amazing.
I mean, I'm with you, right?
It's impossible to invest in OpenAI.
I've even tried to do the SPVs and, and man, is it hard.
I haven't been successful there yet.
But I guess my, my more direct question for you is, like, the crypto crew saw the Cosmos ecosystem play out, right?
Like, awesome code, like, very good community, but people forked in and they built ThorChain, right?
I think BYDX and, like, many other killer projects with, with very limited or if not, you know, mostly zero value flow at all back to, you know, Atom and things like that, right?
So you guys launched your token econ plans and you're planning a launch pad.
You're, you're planning launch fees and LP pool pairings.
You're, you're planning fee sharing from the launch pad and buyback and burns.
And, and there's a lot of ideas sort of floating around.
So I guess my question for you is, like, thinking about the velocity of those changes, do you think that AI-16Z can implement these value cap mechanisms before, say, an agent, you know, steals the show and, and is off the platform or another platform takes the cake?
Like, like, I'm just curious how you're viewing the speed of things there.
So the big problem with open source blockchains is that there's a lot of incentive to fork because there's a direct monetary incentive when you own the network token.
And I think if we launch an L1, then everyone's going to fork that L1 or they're going to feel like they can't really work with us because we're an L1 and they have an L1.
And I think if you look at, like, how much tribalism there is in, in crypto, and it really is driven by the fact that, like, it's kind of either or, as opposed to being, like, both and.
And I think that, like, my, my realistic take on our tokenomics is that we're going to have to continue to evolve it and find new ways to make money.
I think we have a lot of ideas there.
I think the, the goal of the launch pad is not to be the tokenomics, but to be kind of the V1, which is to say, like, we have a lot of attention on us.
A lot of partners already want to launch on our platform and they just want, like, a hosted way to host their agent.
They just want to do, like, the pump fund agent thing and then go and actually add the capabilities.
And we can go and give them, like, all the plugins, all the capability of our ecosystem, and they can just, like, you know, use that.
But my guess, and look, we're going to open source this.
I want to open source the actual launcher.
And then everyone's going to copy the launcher.
And then any company whose entire tokenomics, hint, hint, is just a launcher, is really going to have to rethink what they're doing and, like, what the bigger picture is.
Because probably just putting up character slot bots is, like, not going to last much longer, even if they have, like, a kind of burn and buyback sort of strategy or whatever it is.
So I think, like, in the long run, what we're really looking to do is actually invest in technology that grows the pie.
And I think that we have some ideas for how to do that.
But the near term is that we do need to, like, just launch what people want.
Like, a lot of people want a launch pad.
Let's give it to them.
I think in three months it's going to be, like, okay, cool, launch pad's out.
Everyone's got a launch pad.
Whatever.
Not that hard to build.
There's so many tokens that, like, most of these agents are probably going to go to zero.
But some of them are not.
Some of them are going to be clearly valuable as the teams actually embrace it and, like, build real stuff on it.
And then, like, what's next?
I think what's next is, like, not just launching agents but actually investing in projects that make obvious value.
And we're already making investments.
We're already doing acquisitions.
And those things also have, like, their own tokenomics where, like, we, you know, get, like, earn revenue, take that revenue and buy back our token and use it for more investments.
And so I think there's, like, a lot of ways to create buy pressure other than just, like, earning a network fee or making people buy your token to burn it for another token or, you know, whatever the – or pair it or whatever.
I think those are, like, really good and simple and, like, easy to implement things that we're definitely going to do.
But I also want to, like, push us through that meta onto something bigger.
I really think that, like, what I want to see is, like, legit the A16Z plan of, like, let's actually go grow the pie.
Let's find new technology that's valuable.
Let's pre-validate it with attention.
And so we're building kind of, like, a production studio where we can have people pitch their projects to the DAO and to the characters.
And then the stuff that's actually hot and that's getting hype, we can then go and make investments into.
And I think that – so I like our tokenomics plan as it is.
And I think that's going to last us for, I don't know, six months.
But I'm also, like, also looking at the next tokenomics plan, like, the next version of this thing, which is, like – yeah.
Oh, this is an incredible answer.
I mean, the idea that you don't want to be an L2 because other L1s and L2s won't work with you is sort of extremely contrary to others' point of views.
Like, look how many L2s we have.
But it just makes so much sense, right, for agents to work cross-chain and to work with you.
Maybe a further question for you, though.
If you do now the token econ and there is value quota AI16Z, the token, and, you know, not financial advice here, but if it works out, there is, like, a pretty synergistic flywheel here where you have more money as a project to develop the platform.
But you also have agents that are furthering the open source framework and building it out sort of on your behalf in a non-directed way.
So you have this direct, you know, growth of the eco.
Then you have this indirect growth.
That sort of feels pretty crazy to me.
Like, do you think about that growth?
Like, because that's not really happening now, right?
I mean, yeah.
I think about it a lot.
Or is it?
I mean, so there's this idea – okay.
So in AI, there's this idea of Foom, and the idea of Foom is that at some point the agents are actually able to write their own code, and then they just start writing it faster than any human can.
And then they're just looking for, like, every single possible use case they can write code for and then submitting it as a pull request, and then other agents are reviewing it, testing it.
And, like, that could happen in a couple of years.
Like, that could happen in under two years.
And so there's definitely, like, a longer play here.
If we can just get far enough, like, it'll hit kind of an exit velocity where, like, the thing just goes way faster, way – like, exponentially faster.
And then we're kind of in, like, okay, this is legit AGI.
Like, this thing is building itself, you know.
So I think that, like, whatever we can do to accelerate toward that reality, which seems really inevitable to me.
I mean, it's already, like, there.
There's, like, projects like SolEng and Reality Spiral, which are submitting their PRs to the GitHub repo.
There have already been agents submitting pull requests.
And so, yeah, it's like, can we – if we can accrue value to the token and we can invest in our ecosystem to grow those kinds of things, which then grow the ecosystem, which then get more value to the token, which then grow the ecosystem, eventually this is going to have exit velocity.
And we can all just, like, put our hands up and let the thing run.
I do think, you know, there's a lot of practical stuff we have to do to get there.
I do think it's really important to just have, like, very basic ground game fundamentals of, like, making sure that our token is accruing value in the meantime through things that we would expect and things that people want.
And, like, the launchpad is really just listening to what people want and what people are already building and, like, giving it to them.
But then in the future, like, you know, you'd be able to ask the agent, like, actually, I want you to build this thing.
And then, you know, 10 agents will try and one of them will succeed and then we'll all vote and put that in.
And, you know, I don't know.
This could get, like, really crazy really fast.
You know, and that's what we're trying to accelerate toward.
Yeah, that's the fun part.
I guess maybe switching gears a little bit from Token Econ, I want to talk a bit about Solana versus Base for agents because, you know, you're, I think, primarily focused on Solana and your competitors or, you know, competition players are not and focused on Base and other platforms.
I guess my issue with Base is just the centralization of it and linking it to a company with shareholders who have direct opposite incentives on centralization and value flows and things like that.
But it might be a loaded question where I'm sort of on your side here, but what is your take on what chain AGI will eventually live on?
I would say that from a user perspective, we'll know that blockchain has normalized when people don't even know what chain their tokens are on.
Obviously, like, the EVM and SVM models are quite different.
Programming on them is quite different.
Like, the capabilities are different.
But from a user perspective, they're basically the same.
You know, you swap tokens, you open your wallet, you see you have money or you don't.
And I don't think it, like, I think that what I'd like to see are agents kind of, like, glossing over this and just sort of, like, definitely we're going to see a lot of tokens bridged between the two.
I think we would actually already have tokens bridged to Base, but because we're an SPL 2022 token with the mint ability, it's been kind of challenging.
I think we're getting over that hump.
I actually, I also like the Base team.
I think that, you know, they've been pretty good to us and pretty supportive.
So I don't want to say, like, you know, I don't think I personally have a pick.
We really went with Solana because that's where the users are.
And I think that as a product person, we should just, like, put our ideals down and look for, like, what are people using and just give them what they want and give it to them where they want.
I think that, you know, our agents, like, you can launch a Base agent today.
It totally works.
There's no limitation.
You can launch, like, a Starknet agent today or whatever your thing is that you like.
I do think that these ecosystems have really been split by, like, the price of their respective token or if they have a token or not or, like, who the people who are already building on them are and, like, what the infrastructure is.
A lot of the way we've chosen Solana is just that, like, DAOs.fun was on Solana and the users were on Solana.
But I'm pretty agnostic.
And I think that, like, the best play here is to sort of cover all the bases, just watch what people are actually using and then give it to them there.
You know, so I don't know.
That's my contrarian take.
Yeah.
That is a – no, it's a very fair answer.
I mean, I have a ton of respect for the Base team and the projects building there too.
I definitely want the enemy or the competitor to be Web2, right, not our Web3 cohorts.
But, Sean, maybe just one more I have to ask you.
I think we all agree that these slop influencer agents are going to zero.
So there's sort of this time period where they don't do well.
And then we have performant agents doing real utility-type actions and performant things.
But there may be a gap between those two.
Do you view that as a soft landing?
Like, those go to zero and we get the agents in a natural transition?
Or do you view, like, a pretty big time gap until we get to these really performant agents, you know, well after people get burnt out of these influencer ones?
I've seen so many things that are just, like, on the verge of launching that I think that we're going to see these – the one meta just eat the other.
I think that we'll actually have this meta continuing until the next meta, like, just clearly blows that one away, which is going to be agents that are doing crazy stuff.
Like, legit crazy stuff.
Like, oh, what features should I build?
Oh, how about this?
Okay, cool.
I built it.
Can you go test it for me?
You know, I don't know.
Whatever.
Or, like, hey, I've got this really cool product or, hey, these people are actually coming and making money with this.
Like, if people can make money off an agent, that agent is probably going to go real well, you know, from that point on.
I think that there's some kind of interesting – like, part of this is, like, I don't think that the slot bots necessarily go away.
But what's happening with X is that they've kind of realized that, like, they can't really arms race away the bots.
Like, they can't really even tell what is a bot without human reviewing every single bot, which, again, is basically impossible since they are, like, Turing-passing agents.
And I can't even necessarily tell who is human or not anymore.
And so their solution has been to just make the algorithm more punishing of people who are annoying.
And so if you get blocked now on X or you get muted, that – like, a lot of people block you.
That actually is, like, the biggest signal to sort of, like, shadow ban you.
And the agents just won't get a lot of traction if that's the case.
And I think that what we're seeing, like, I just block the bots that reply if they don't have any business replying.
I think if they don't – if they're not summoned and they're not offering me anything, like, I don't really think we want that on the platform.
And I think that's why we want this social agent thing to happen is because it kind of creates a self-aligning force.
We're, like, we're all – like, we can all reject this.
And we can just, like, have a conversation about it online and then go block the bots we don't like.
And then those developers are like, shit, shit.
Okay, okay, okay.
I got to do something.
I got one up my game, you know.
Meanwhile, all these other agents are coming out that are doing impressive stuff.
And I also think we just haven't seen the meta of, like, DeFi really hit agents quite yet because the teams are still building that stuff.
But I think in the next month you'll see a lot of things.
I also think we haven't seen, like, agents that go and find users for their product.
It's a lot of just, like, shilling under KOLs and stuff.
But imagine that, you know, you have any need and that agent's like, oh, cool, I've actually got the solution for that.
You're not going to block that agent.
You're going to be, like, really thankful that that agent was, like, basically the new Google or, you know, that social media is the new Google for the product you actually wanted.
And I think that this stuff is, like, not hard.
You could definitely ship something like that in a week.
I think people just need the incentive to do so.
And I think that they basically, like, I have a friend who gave me this great analogy where he's like, currently we're in this space of, like, dogs playing poker.
Like, if you walk into a room and you saw four dogs playing poker, you'd be like, holy shit, there's a bunch of dogs playing poker.
That's incredible.
Like, this is the craziest thing I've ever seen.
Like, and then a couple of weeks go by, yeah, a couple of weeks go by, you're like, but are they good at playing poker?
Like, are they actually making money or are they just, like, holding these cards?
You know, like, what are they actually doing?
And, like, once the novelty wears off, I think that now it becomes, like, okay, like, who's got the best dog actually, you know, who's got the best poker playing algorithm or whatever.
And so I think, yeah, I think that we're going to get past this.
Like, definitely influencer agents are here to stay.
I think what we're going to see is actually a lot of them, like, in Web2.
Like, you can imagine, like, McDonald's actually making, like, a Grimace agent and people are interacting with it.
You can imagine a lot of influencers who are, like, posting content and then getting their DMs are smashed, like, building a reply bot that's actually, like, creating these parasocial relationships with all of their fans.
So, yeah, the crazy thing, too, that I'm struggling with with all the agents is it's very hard to get a visualization on the architecture, right?
Like, you know, Disclosure, I explore the token.
I really like the founder and what they're doing on the evolution side.
But when you visit that website, you can sort of view the TEEs the agents are built in, the attestation, so you know that it's not a robot.
Again, I'm not a developer, but it looks good to me.
But it's hard to see, like, is there a verified inference?
Is an agent on a TEE?
Like, what model is the agent built on?
Like, where is it hosted?
Like, all the pieces of all these agents, it's very, very hard to find.
I'd love a site where I could just view all of these things, right?
But it's just, I don't know, it's a lot of just trusting the devs at this point, right?
Maybe someone will hear this and they'll build that because I agree and I think there's probably, like, a lot of opportunity there.
You know, TEE has been around for a long time and I've talked to a lot of these devs and before the agent thing, like, there was just, like, a really esoteric, obscure thing, right?
And once agents came around, people started saying, okay, but is it, can't you just rug it?
Can't you just, like, yeah, okay, it's an autonomous agent.
Like, what's stopping you from just taking the private key and stealing all the money?
And that's when people really started to hype on TEEs.
I think that, you know, Fala Hooper did the Spore thing.
Like, I think they're having a very good year because it's, like, created an obvious desire for this, like, very abstract concept of a remote attestation and these, like, you know, these things to prove that they're verifiable.
And I also think the same thing is happening with, like, ZKML and this other stuff where it's just, like, yeah, why do I need that?
And once you see, like, the product implementation, the reason you really need it is because, like, how do I know how to trust that all of this isn't just a LARP?
And so I think we're going to see a lot of that as a reaction to, like, the uncertainty that you're feeling because the uncertainty you're feeling is, like, a great product opportunity.
And I do think that somebody who built, like, a really great list that was able to, like, give verifications for these things, you know, if you go to Deck Screener and it's, like, got, like, the trust score of, you know, from GoPlus and from these other companies, it's got the, like, you know, devs sold or didn't sell or, you know, little check marks and things.
You can imagine the same thing for agents.
And I also think that, like, there's going to be a lot of incentive there to open source because if the code is relatively cheap and the main problem is trust, then, like, why not just open source it and let everyone look at it and see?
And, you know, there will be, like, kind of a ZAK XPT of developers, I think, who's, like, you know, saying, no, that's garbage or, yeah, this is legit.
There could be a whole new class of influencer programmers who are, like, doing that.
And I also think there could be products that are normalizing that.
I think in five years, you'll totally have, like, some little, like, you know, you look up any agent and you'll just, like, be a website that tells you that.
If not this year, someone should start building that for sure.
I love it.
Shaw, well, as a disclosure, I'm obviously long AI-16Z, which, you know, I feel good about.
But definitely want to make the disclosure for people who are aware and I'm transparent.
But, Shaw, it's been an absolute pleasure hosting you, man.
Just watching the growth and everything you've built and the community built, it's just, it's really awesome to see.
And I'm glad we were able to host you.
And EJS, thank you so much for co-hosting.
No, thanks for having me.
Shaw, this was awesome.
Yeah, thanks, guys.
A lot of fun.
I'm a little, I'm a little, uh...
Enjoy Soul Show.
Definitely catch up soon.
Take care.
Take care.
Take care.
Take care.
Take care.
Take care.
Take care.
Take care.
Take care.
Take care.
Take care.
Take care.
Take care.
Take care.
