I just discovered a way to build a billion dollar startup entirely from free open source
software from the most talented programmers in the world.
Actually everybody knows that already.
Like why pay an engineer when you can just use their stuff for free on github.
In today's video we're going to cheat off the smart kids homework and look at some of
the coolest open source libraries that you've never heard of.
Tools that will make your apps faster, better looking, and less expensive to run.
You'll ask yourself, what the f**k, how have I not been using that already?
And that brings us to library number one, the f**k normally when you type a command
into the terminal, and make a typo, you just say f**k in your head, and then retype the
command from scratch.
The f**k makes this process much more intuitive, allowing you to simply type f**k into the
terminal, then it will attempt to reformat your command automatically.
To be honest, it's pretty f**king useful.
Here's a problem that anybody who's ever built a website has faced.
It's too slow.
Even if you work really hard to create a tiny javascript bundle, the product manager will
eventually tell you to add a bunch of other junk like mixpanel, intercom, and google analytics.
These third-party scripts clog up the main thread, and will make your app slow no matter
what.
Luckily, there's an open-source library called Partytown that can run third-party scripts
from a web worker.
Javascript is single-threaded, but modern browsers allow you to run background jobs
via web workers.
Partytown will offload any scripts that don't deal directly with the UI into a web worker.
And that means the only thing on the main thread is your UI, which leads to a faster,
more responsive website.
Another problem that every app developer will need to solve is user authentication.
Firebase is great, but it's somewhat feature-limited, Auth0 is great, but it's expensive, and that
brings us to Supertokens, which is an open-source authentication solution.
It provides SDKs for runtimes like Node and Python, allowing you to quickly self-host
a fully-featured authentication system.
With support for OAuth providers, passwordless login, but most importantly, it deals with
session management and security.
Pretty cool, but it's got nothing on this next one.
HiMom is a blazingly fast javascript library that can say hi to your mom in record time.
Here's a pro tip if you're building an open-source library.
Make sure that the readme includes phrases like blazingly fast, bleeding edge, holistic
approach, and game-changing, because they make your library better, the same way putting
flame stickers on a car makes it go faster.
Next up, we have a two-for-one.
Many businesses out there need to build their own full-text search engine, either for internal
data or to build a search engine for their customers.
You could go with Elasticsearch, but it's expensive and complicated if you self-host.
There are two very promising open-source alternatives.
One is MeleeSearch, implemented in Rust, and the other is Zinc, implemented in Go.
Both provide a fast, simplified way to build your own search engine.
Now, our next library, TRCP, TPRC, TRPC, is exceptionally cool, but a little harder
to explain.
If you're building an API today, there are two main approaches, REST and GraphQL.
I won't go into the differences right now, although I do have videos for that, but there's
another less-talked-about approach called RPC or Remote Procedure Call.
Basically, it's just a URL on a server, but unlike REST that corresponds to an entity,
it corresponds to a function that you want to run on the server.
This approach actually makes a ton of sense for many modern applications.
TRPC allows you to build entirely type-safe APIs without the need for schemas or cogeneration
like you would with GraphQL.
Overall, I think it has the potential to fundamentally simplify the way we build full-stack web applications.
Speaking of simplification, one company that has simplified the modern database is Airtable.
The only problem is that you have to pay a company to use it.
If only there was an open-source alternative.
NoCodeb does exactly that.
It's an open-source Airtable that can be built on top of your own MySQL or Postgres database.
In other words, it's an open-source NoCode database or smart spreadsheet.
As a developer, another piece of software you may want to replace is Postman, your HTTP
client.
An awesome open-source alternative is Hopscotch, which is built with Vue.js and TypeScript entirely
as a progressive web app.
Not only is it open-source, but you can go use it in the browser right now at Hopscotch.io
and then install it as a PWA on your desktop.
And now it runs in a native window and allows you to interact with your file system.
Now, if you've ever coded in Python, then try JavaScript later.
You might be shocked at how difficult it is to work with multi-dimensional arrays.
What is this?
In Python, we have libraries like Pandas that can do all kinds of useful stuff to an array
or data frame.
Not many people realize that there's a library called Danfo.js that is inspired by Pandas
and can do many of the things you know and love, like read a CSV file and process the
data within it before it gets sent to a machine learning library like TensorFlow.
That's pretty useful, but the hardest thing in front-end web development is making your
website look good.
There's a million different tools out there that can help you do that, but one I've been
really loving recently for React is Mantine.
Not only does it have a bunch of well-crafted UI components, like this nice-looking timeline,
but it also has a bunch of built-in hooks that handle many of the annoying things that
you'll come across when building a web app, like debouncing an input or paginating a
collection of items.
On top of that, it has optional packages for a notification system, rich text editor,
and a drop zone for file uploads.
It's so awesome that we use it in one of the demo apps in the full React course on
Fireship.io.
Check it out if you want to build a serious app with React.
Now the problem with all the libraries that we've looked at so far is that they require
you to know how to write some code.
If you have an idea for a full stack application but want to skip the whole Learn to Code part
An open-source tool to check out is Amplication.
It's a tool that can automatically generate both your front-end and back-end code based
on relationships to data models in a database that you can manage visually.
The back-end is built with other open-source tools like Node, NestJS, and Prisma, while
the front-end is based on React.
Even if you do know how to code, this is a tool that can speed up your workflow, and
that gives you 10 new open-source libraries to try out in your next project.
Hit the like button and subscribe.
Thanks for watching, and I will see you in the next one.
