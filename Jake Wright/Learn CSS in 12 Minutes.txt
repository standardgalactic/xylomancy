HTML is used to define the structure and the content of a web page. CSS is used to give
style to that structure and make it look nice. And CSS is really easy to learn. I'm going to start
on paper by drawing out the design that I want. I want a header on my web page, you can say my
website. On the left hand side I want some navigation with some links there. I want the main
content to be to the right and then a footer at the bottom. You can have a copyright notice.
So in HTML each box is going to be a div. To define the structure even further I'm going to put
everything in a div so then I can center that in the middle of the page. I'm going to put this
middle section in a div as well because in HTML it's good to define roles and then split the rows up
into columns if necessary. So we're going to call this this outer one container. I'm going to give
it the id container. The hash means it's the id. Then we've got hash header. This middle container
I'm going to call content and inside of content we've got hash nav for navigation and hash main
for the main section and then hash footer at the bottom. I want the background of the whole page
around here to be gray. I want the background of container to be white. I want the background of
header to be blue. I want the background of footer to be gray as well. I want the whole thing to be
800 pixels wide. I want the content to have 10 pixels of padding around the outside. So this space
here I want 10 pixels which leaves 800 subtract 10 and 10 780 pixels for the content. If I want
main to be 600 pixels wide this leaves 180 pixels for navigation. Now I'm going to quickly create
that HTML structure. First in Windows Explorer you need to go to folder options and untick hide
extensions for known file types. Then create a new text document. I'm going to call it index
and then change the dot txt dot html. Index is the name you give to the homepage of a website.
I'm going to use notepad plus plus to edit this. Any text editor will do. So html tags then our
head tags and we have a title my website body tags. We have a div with the id container.
Then we have a div with the id header content
and footer. Inside content we have nav
and we have main.
If we just zoom out you can see all of those divs make up the structure we do out on paper.
Inside header we just want heading one saying my website. Inside nav
heading three. Now for the navigation links it's a good idea to put them in an unordered list
just for some nice structure. We might have about we might have contact inside main header two
homepage. I'm going to add three paragraphs paragraph one paragraph two and paragraph
three of text. This is just Laura Mipson which is nonsense text. Then finally in the footer
copyright ampersand copy semicolon gives you the copyright symbol 2014 jcrite.
So if we save that and open it in a browser you'll see all of the content is there but it just
doesn't look very nice at all and it doesn't have the layout that we want. This is where CSS
comes in. Create a new file I'm going to call it style dot css. First we have to define a relationship
between the html file and the css file. We do this with the link tag in the head section of the html.
The first attribute is the relationship rel and we tell it that it's a style sheet. The type of the
file is text slash css and then the link or the path to the file and since it's in the same folder
we can use a very simple relative path of style dot css and then it's a self closing tag like that.
So the syntax of css first you define an element that you want to target.
So if I want to target an element with the id header I type hash header and then open curly
brackets and then further down close the curly brackets and everything inside these curly brackets
will be applied to the anything on the page with the id header. For example I want to set the background
color to blue so set background hyphen color. Multiple ways to set colors I can just type blue
but that doesn't give you much freedom and control. The best way to do it is with a hex code. If you
google html color codes you'll get a nice list of these and I found earlier that 6 6 cc f f is a
nice shade of blue. When you do this you must prefix the number with a hash. So if we save this
and refresh our page we get a blue background for the header. We might also want to make the text
inside that div white. We do that by saying color colon and we can just type the word white. Then
each line must end in a semicolon. I mentioned that I wanted the background of the whole page
to be gray. You can target the whole page by targeting the body tag. Now you don't need a
hash just the word body and we can set the background color. Hash eee is the shade of gray
that I want. You'll often see when all of the numbers or letters are the same you can shorten
it and just type three of them. Then we wanted our container to have a white background.
I want the heading of the website to be centered. You can do that with text hyphen align center
remember the semicolon and I wanted the whole page to be centered in the middle
and I wanted it to be 800 pixels wide. This is why we wrapped everything in a container
div so we can set the width to be 800 pixels. Now to center it you need to set the margin hyphen
left to auto and the margin hyphen right to auto. This will center divs horizontally this doesn't
work vertically but it's very useful for doing it horizontally. Just notice I've got home page in
there twice sorry about that. Our next problem is putting the navigation and the home page side
by side. Let's start by defining the widths. We wanted the content div to have 10 pixels of padding
now we could do padding left 10 pixels padding right 10 pixels but it's quicker just to use the
shorthand property padding and then the first number is the top the second number is the right
the third number is the bottom and the fourth number is the left hand side padding. Now since
these are all the same we can shorten this even more and simply just type 10 pixels and that applies
it to all sides. We then wanted our nav div to have a width of 180 pixels and our main div to
have a width of 600 pixels. Now the thing about divs is they always appear on a new line. To stop
that we need to set them to float we want them to float next to each other. We want nav to float to
the left of its parent content is its parent. Now main can float either left or right it doesn't
matter because there's no space for it to move but I'm going to put right so it's easy to see
which order they come in. So that puts them next to each other it makes a new problem though since
they're floating the footer now doesn't care that it hasn't finished it they overlap. To fix that we
target the footer div and we apply a rule to this saying clear both. Now this means we must be clear
of any floating elements before we display ourselves. So you can see here there's still a floating
element here clearing both means let's get past all of the floating elements and then display.
Moving back to the HTML I'm just going to actually make these navigation links into links with the
a tag they're not going to go anywhere and I'm going to apply a class to the first one and call
it selected because that is the page we're on at the men at the homepage. So let's first make the
selected link bold. To do that we can target the class dot selected hash for id dot for a class.
Now if we had a selected class somewhere else and we wanted to be more specific we could do
hash nav hash selected just separate them with a space this filters it down to any object with
the class selected inside of the object with the id nav then we can say font hyphen wait bold.
Since the links have put an underline under them we might not want that we might want to get rid
of underlines on all links on the page so just like we targeted the body tag we can target the
a tag and say text hyphen decoration none we might want our links to be red color red
and we don't like those bullet points so let's do something about those.
Let's target the unordered list within the navigation div. Let's set the list hyphen style hyphen
type to none that removes the bullet points and let's set the padding to zero that removes the
space at the left. The reason we have a gap along the top is because this heading has a margin on it
we can target the h1 tag and set the margin to zero if we wanted to apply the same rules to a
number of different tags we can separate them with commas we could apply to h2 and h3 as well
and that would remove the margin from all of the headings. To give the webpage a nicer font we can
set the font family property of the the whole body tag now you need a font stack you start with the
name of the font that you want then you need some backups in case the user doesn't have that font
so you could try aerial and just end with a type of font like sans serif.
Finally let's give the footer 10 pixels of padding set the background color to gray i'm going to
choose 999999 set the color of the text to white and set the text align to right and equally give
the header 10 pixels of padding and there we go that's the webpage we designed on paper so to recap
the syntax of css first you start by specifying what you want the following rules to target so
that could be something with a particular id in which case you type a hash and then the id which
could be something like header then you open curly brackets and then close the curly brackets and
inside it's a good idea to indent just like an html so easy to read you can put the rules they come
in the form of the property name a colon and then the value you want to set each rule ends with a
semicolon and it's useful to put each rule on a new line if you want to target something with a
particular class you use a dot instead of a hash if you want to combine them if i wanted to to apply
this rule to the object with id header and all of the objects with class sidebar i can do that by
using a comma if you want to target a tag instead of an id or a class you just type the name of the
tag so like a or body if you want to be more specific just separate the identifiers with spaces
so you can have hash content dot sidebar and this means apply this rule to any object with a class
sidebar inside the object with the id content of course this doesn't have to be an id that could be
a class we could be even more specific this chain can be as long as you want as long as in the html
this is inside of this and this is inside of this one last thing i want to mention is that you don't
need to put the css in a separate file or two other places you can put it you can put it inside style
tags directly in the head section just like that or you can use inline css you can add the style
attribute to any html tag but it's better practice and much simpler if you keep the css separate
in its own file so i recommend doing that hopefully this has given you a good introduction to css
which will help you turn those plain websites into something presentable thanks for watching
number which is number plus number two and then we could output by typing echo sum um five plus
three which will as expected give us eight
