Hey everybody, so today we are going to be walking through the evolution and how do you
model the evolution of a taxonomy to a thesaurus, to an ontology, to a knowledge graph.
And just like with any modeling project, your end use case is your guiding light.
So the decisions I make in this video may not be the same decisions that you make.
And I'm going to walk through why I am making some of those decisions so you can think about
what you need to do when you are going through this same process.
And just like your end use case, you don't necessarily have to get to the end of this
evolutionary stage.
If you don't need to make a knowledge graph, you're perfectly fine with just an ontology
or maybe you're just wanting to make your taxonomy a little bit more robust so that you have
a thesaurus instead.
And why is that useful?
All those things I am also going to cover in this video.
So if this sounds interesting to you, keep on watching.
All right, so starting out, we need to look at what is the use case, and then we need
to go and look at what data do we need to supply for this use case.
Now you could jump to any one of the models we're going to talk about today in order to
answer this question.
Some are going to be able to answer this question a lot easier than others.
But for the sake of this video, I'm going to be starting with a taxonomy.
So in our scenario, this manufacturer does not have a taxonomy and they really need to
understand which pieces and parts and components go into any one of their vehicles.
So let's start there.
Now each of these models can have a much deeper dive associated with them.
I cannot do all of those in one whole video.
So I have linked every model and corresponding videos that I've done in the past for a deeper
dive in each of them if you want to go and check those out.
In our scenario, we already have tags, let's assume, on the content and or processes or
whatever it is in our, our plants, our manufacturing plants that we can then identify what's going
on in each of those plants.
The problem is those are just tags.
They have no organization to them.
So the very first thing we're going to do is we're thinking about how like-minded things
go together.
Now normally a taxonomy is looking at broader and narrower parent, child or whole part relations.
And so you can see here that passenger vehicles have narrower types, right?
So another relationship here is type of, and these are not explicit relations.
We'll get into that later in other models.
Right now these are more inherent by the hierarchy the taxonomy takes on.
So here passenger vehicles is the broader or parent of a sport vehicle.
And then if we look at the different sports vehicles, there are Mustangs and Raptors because
we're looking at all Ford vehicles in this example.
You can also see in parts how parts is kind of generic, but it is a container of all of
the different parts that would be components in a vehicle.
And you can break this up into whatever makes sense for your organization.
So for instance, if you want mechanical parts versus nuts and bolts, which are not mechanical
in nature, then you can divide them up that way.
You really have to keep your end use in mind while you're doing this.
For us, we really just need to understand which of these vehicles have specific electric
motors in them.
Now you are going to notice there is a heavy emphasis in every model on the metadata and
the relationships that the model is representing.
So these are going to come in handy as we evolve this model into something else.
So right now we do not have additional attributes.
These taxonomy terms may have unique IDs, but other than the hierarchical look to them,
they don't have anything else.
This is just adding context by the placement that they have in the tree structure of a
taxonomy, as well as how these tags are then connected to the end assets, whether it's
a document or an actual component.
All right.
So now we're building on top of stage one.
So everything that we've developed with our taxonomy, the hierarchy, the types of relations
that are inherent from that hierarchy are also going to be helpful with the thesaurus.
So here we're adding more connective tissue.
Every single step in these stages is adding more context, more relations, more of that
metadata to help humans and machines make better decisions based on this data.
So here we are now adding things like use for those are synonyms and those can be synonyms
from different catalogs, different pieces of metadata you're bringing in from different
databases.
It can be the natural language of your end user.
If you're using this taxonomy and thesaurus for search enhancements, you also get things
with see also.
Now that's going to be really important for ontology and knowledge graph building because
see also is a generic form of, oh, hey, there's other things that go along with this that
are not pure hierarchical in nature.
And so those see also are going to be really helpful in later stages in all of this.
See also is basically looking at how certain clusters of things or branches in your taxonomy
are starting to play with others.
So for instance, if you are looking at a vehicle, well, a logical representation of a vehicle
is all of the different things that go into how that vehicle is constructed, how it goes.
So that could be the motor, it could be the fuel, it could be, you know, how those things
are supplied as in a pumping station or a charging station, if it's an electric vehicle,
think of it almost as composition.
If you are composing a room, what things go into any specific room?
So if you're looking at a living room, it could be a television, it could be a couch,
it could be, you know, wall hangings, it could be speakers.
What are all the things that go together to define a living room?
Same with a vehicle.
What are all of the things that go into defining all of the different aspects of a vehicle?
These are going to be incredibly important when we get to the next stage.
Other things that are represented in a thesaurus are looking at definitions.
Sometimes you will see things also like scope notes, and that's for human and or computer
automated tagging of specific assets or behaviors, if you're looking at a manufacturing plant.
It's understanding how these things are contextualized in your specific use case and your specific
company.
So the jump from a taxonomy to a thesaurus is not as large as a thesaurus to an ontology
or a thesaurus to an oligarch for that matter.
And a big reason for that is they are representing the world in different ways, where the first
two are points, they are tags on specific assets, and the relation between things is
a little fuzzy if you're talking about a thesaurus or implicit, which is more on the
hierarchy of a taxonomy.
And ontology is starting to make the connective tissue, the contextualization of how two things
are related and the network of those things way more explicit.
So the very first thing that you're going to want to think about here is what is the
focal point of your model?
So here you can see that I have done this in three different ways.
So our use case today is a catalog of products for the Ford Motor Company.
And so therefore the center of a catalog is the product itself, in this case, a vehicle.
But if I am doing an ontology that is focused on the transactional, the purchasing or the
selling or the manufacturing of something, then maybe the VIN number is the center of
my transaction, because that is the thing that is the individual specific thing being
manufactured or sold connected to the customer, because that's the actual transaction that
I am trying to track.
Or if I'm looking at a supply chain, maybe where something is manufactured, and what
they are manufacturing is the center of my model.
And identifying this early is really crucial to understand how your model is going to shape
up to answer the questions that you are interested in.
So once you've identified that, you want to look at the universal containers.
That's what ontology is.
It's a framework to house things and how those things are related to one another.
Now a taxonomy is identifying a universal topic or thing that could be an engine.
There is a universal understanding of engine.
But once you get into the lower levels of the taxonomy and thesaurus, where it's talking
about very specific engines, that might not be part of the ontology.
That actually might be an indicator that's part of the knowledge graph portion.
It's talking about a very specific instance of an engine.
So the way that I like to think about this process is the first to third levels of your
taxonomy are usually more of the categorical universal containers of things in your asset
or your catalog.
And so that's a good indicator that maybe start with those first while you're doing
your modeling.
As you go, you're going to refine your understanding and you're going to refine what you had from
the taxonomy of thesaurus stages because honestly, you might not need all of those nodes from
the previous stages.
That's part of this modeling process.
So when you are looking at those universal categories, there's a really great thing in
there.
Is your instance data, maybe your sub-sub-subclasses in your taxonomy are going to be mapped, right?
They roll up to those broader level categories.
So in a way, you're pre-mapping a ton of your catalog to your ontology, which is a beautiful
thing and that's why doing this as an evolution is a really powerful thing if you can do it.
The next thing you need to think about is the lowest level of universal data that you
need for your use case.
So that could be in our use case, we're trying to identify specific electric motors.
So maybe I only need to go as low as an electric motor.
And by the way, you don't want to create your entire ontology based on only one very unique
specific problem statement, but it is a good place to start, but just don't stop there.
And with an electric vehicle, that is connected to the electric motor.
Maybe that's all the farther I need to go, but if I do need to go even lower and look
at specific types of electric motors, let's say there are different brand names, then
maybe that's the lowest level of data I need to have for the ontology.
So I have a whole nother video going into a deep dive on how to determine something
as a class or an instance, and I will leave that down below.
But a good rule of thumb is to think about it from this perspective.
There is a universal understanding of cat.
It is furry, it has whiskers, it meows, it sits in your lap and it lives in your home.
But my cat Garfield is a different instance of cat than your cat named Otis.
They're both cats, but those are instances of cats.
So think of it from that perspective.
Anything that has to be very unique and is to the cellular level unique, that's probably
an instance and you don't necessarily want that in your ontology.
So once you've determined that, you want to then start to look at those broader and narrower
relationships that you had from previous steps and you want to make them more explicit.
Now you saw that in those previous steps, we did have things like whole part, has part,
that sort of thing, that you can just transfer back over into the ontology.
Those work really well.
But when you're talking about things that are just broader and narrower, you have no idea
what the relationship is between those two things.
So in that case, here you can see that with parts and engines.
In our taxonomy and our thesaurus, they were just nested, right?
The engine was nested underneath parts.
We didn't really know why they related to each other.
Now we're being very explicit.
We're saying it is has part, part of.
And that also allows us to use that specific relation with any other parts that are in
our asset and our catalog data.
This is also your opportunity to craft unique relations.
And those are like manufactured in these are oftentimes business specific, or these also
can be mined from your thesaurus definitions or the assets themselves.
So for instance, if you're looking at a description of a product, what other things in your catalog
are being mentioned in that description?
It's probably a good indicator that they're related in some way.
Now the last thing you're going to be looking at are is twofold.
So first, you are going to add in additional nodes to flesh out that network.
And these are things that are not always found in one table.
So this might be something that you'd have to join together.
So this could be customer data or transactional data in general.
Adding those in fleshes out your network so you don't have to do as many joins, right?
This is the beauty of an ontology.
It makes those relations inherent rather than having you have to depend on others and your
specialized knowledge to make those kinds of relations.
Also which is pretty critical for making sure your machine learning and mapping and matching
projects go smoother is making sure those used for incentives are added in as attributes.
I also just want to note here that some of the nodes that I have in my model, for instance,
the class of vehicle, that could be an attribute on the vehicle node.
I decided to break it out, but that's part of the modeling process.
You have to decide which pieces of information can be descriptors of a node or things that
need to be standalone nodes on their own.
So one thing I want to just point out is you don't necessarily have to have an ontology
to have a knowledge graph.
There are other ways to get to knowledge graph outside of an ontology, but think of the ontology
stage as you are creating that, again, that framework.
It doesn't necessarily have to be a true ontology like an RDF ontology, but it is a representation
of the global entities so that you can then get to the knowledge graph stage where you
are populating the instance or the very specifics of your graph.
Populating your graph can come in a few different forms.
In this situation, we are going to be taking all of the things that we identified as instance
data from our taxonomy and thesaurus, remember it rolled up into the universal classes that
we identified, we are going to be able to populate those as instance very quickly.
Sometimes you are going to realize that your model is not quite right and that's because
the things that in a taxonomy and thesaurus generally rolled up to the same category don't
necessarily work the way you want them to work when you get to the knowledge graph space
because now when you start to look at the individual entities, there are some exceptions
to the rule and sometimes that means you are going to have to split classes and make a
subclass, this is part of that refinement stage.
So dovetailing into that, you do want to check a subset of the instance data to verify the
logic is sound.
This is something I like to use a visual for because then you can see if there is some
weird circular logic which by the way happens constantly when you take a taxonomy or a thesaurus
and you turn it into an ontology or a knowledge graph.
Another thing to watch out for sort of in that same vein is looking at the actual definition
of these nodes versus how it is applied to the actual assets or behaviors in your systems
just making sure that that logic all checks out and that they align with your business
needs because I've seen that taxonomies and thesaurus are not necessarily structured to
be used in machine learning or knowledge graphs and therefore some of that logic doesn't always
check out once you start to morph these and involve these into other forms.
So just be aware of that.
You also want to add in some inferred hidden relations.
You can identify some of these with things like shortest path.
It's basically showing how once you really identify a network of things and how they're
you can see the dotted line to additional nodes that you did not even know existed and
that's a really powerful piece of knowledge graph and you definitely want to add that
in if you can.
You also want to identify those exceptions and add cardinality and when you're talking
about exceptions you do want to watch out for things like adding orphan nodes you want
to avoid orphans as much as possible because after a while orphan nodes will start to accumulate
and if you're not going back and trying to merge and dedupe because that's normally why
those show up is because they're an accidental whoops that's the same thing but we didn't
really identify it as such.
It will create that storm cloud of data above you that you just do not want.
It'll add technical debt.
It will add so much more process to any mapping and matching projects that you have.
Just definitely try to avoid any of the orphan nodes if possible.
Also checking the shape of your knowledge graph.
Some of those hidden relations might have to be explicitly defined in order to do certain
graph ML.
This would be like if you needed a bipartite graph to do certain network analysis that
sort of thing.
Once you have even a small portion of your graph you can start to predict missing nodes
which is interesting because you might have dropped nodes along this evolutionary path.
Remember there was the part node that we may or may not have needed that came from the
taxonomy and we dropped it maybe in the ontology stage.
Well maybe we actually do need that for doing some of the machine learning or maybe you
are starting to identify some of the attributes that you made a decision on in the ontology
stage.
Maybe they actually do need to be nodes.
This is a great place to start to identify that.
You're also going to start to identify dense clusters of really like-minded things.
Things that are highly, highly connected and things that are more on the peripheral.
These are really good to also identify gaps or where your catalog is stronger or weaker.
You can also identify things like bottlenecks.
If you are doing things in the supply chain space, where is everything going?
If there's one node that's connecting a lot of other nodes, that might be a bottleneck.
You need to maybe look at that.
There's a lot of other data intelligence that you can start to derive once you have this
graph in a true network like state.
Okay, so that is this in summary.
It has been a long video.
I am sorry for the length, but to get through each of these, I know I even glossed over
a lot of things in this.
Again, make sure you check down below for some of the links to additional videos to flush
out more of this, but this has been a highly requested video.
I really hope that you've enjoyed this.
If there's anything that you have a question about in any of this, please make sure to reach
out to me on LinkedIn in my email, which is listed in the description box below, or leave
a comment on this video.
With that, I want to thank you very much, and I'll catch you next time.
