This is a fascinating story we have for you of a senior Google engineer who says
one of the company's artificial intelligence systems has become a
sentient being. He believed one of the company's artificial intelligence
chatbots had become sentient. Engineer Blake Lemoine says a chatbot project he
was working on called Lambda can express thoughts and feelings equivalent to
that of a child. Google has rejected claims that one of its programs had
advanced so much that it had become sentient. That's I think the big issue
right is is that a lot of people get bogged down deciding well what does
sentient actually mean.
Hey everyone it's David Bombal back with a very special guest Mike welcome. Oh
thanks for having me. So Mike I've seen a lot of your videos on YouTube. Computer
file millions of views on some of the topics that you've done but can you
just introduce yourself to the audience for people who might not have seen those
videos or don't know what you're doing because you're telling me offline
YouTube isn't your main thing you do more than that. That's right yeah so
actually in some sense YouTube isn't aside for me right it's just something I
did because I thought it would be fun. I'm an academic at Nottingham associate
professor and I work teaching security. I research teaching AI and computer
vision. It just happened that we have some ties at Nottingham to Brady and
Sean who do things like number file and computer file and so computer file was
kind of fledgling maybe it had a bit of it was a bit established when I when I
started doing them and it kind of just took took off really. I think because I
did topics on security and AI and things people thought those were
interesting and so I get you know a lot of views on those now but it's still a
bit peculiar when people say hello to me you know because I just turn up and do
normal things the rest of the time. So you get stopped in the street and it has
happened yeah my wife is never impressed when that happens she thinks this is
ridiculous but you know it happens from time to time I do I do I do really
enjoy it I get lots of emails from people saying thanks for your videos I
enjoy them and that's that's why I do it that's that's what it's for for me. I
loved what you said offline you know you someone said that they started
computer science because of you. I've had a couple of emails like that and
that's the those are the best emails right because I want people to learn
about computer science I love computers I'm a massive geek basically I program
for fun and the more people do that the more it's a win for me. So you know if
I can encourage a few people by doing videos that that's what I really want
to do. That's fantastic I am one of the videos I watched obviously in
preparation for this interview is this recent video that you put out about AI
and that's going to be the topic that we want to talk about today. So let me lead
with this I get this these kind of emails all the time David is it worth me
studying cyber security David is it worth me studying computers because AI
are going to take all the jobs away and I think movies over the years like you
know there's been so many of these movies where the robots take over and
this can you talk about this and you can go into the details if you like but I
think this this this sort of recent event that you spoke about in your video
hasn't helped the conversation at all so can you tell us about that in what
your thoughts are about you know what happened. Yeah so no I absolutely agree
but it didn't help the conversation about was okay I think when in my video
that was kind of what I tried to end with was basically doesn't you know in
some sense the nuances of where this AI is doesn't interest me that much all I
know is it's not where they're suggesting it is at least that's you know
that's what I think I suppose at the moment AI is very application driven
right so a lot of it is supervised there's other ways of doing it but a
lot of it's supervised which means that you have some kind of training set with
some inputs and some outputs that you're trying to get the model to learn and
then you just train the model until that happens that can work really really
really well and so from my own research I do this on things like image
segmentation where I'm trying to find objects in images and you know medical
image segmentation and things like this but you know in practice if I then take
back network and try and run it on street scenes it won't work because it's
not trained on street scenes it doesn't know what they are it hasn't got any
ability to go oh it's a street now you know and take what it's learned somewhere
and apply it somewhere else you know retraining a network is really the only
way to do it and that involves even more data right so I don't think at the
moment it's realistic to suggest that there's going to be some general
intelligence that can just do all of our jobs right you know you've seen github
co-pilot that just produces text code and sometimes it will produce a useful
function and sometimes it will produce a function full of bugs that you've got to
then spend time fixing and have you actually saved any time I don't know
the jury's out I think I so I wouldn't worry at the moment I'm not worried I
mean maybe designing things to replace myself is a huge mistake but I don't
think we're there yet so I mean tell us just what people haven't seen it
haven't seen your video and like haven't read perhaps what's going on there's
this Google person yeah so what is lambda and what is what what what was he
basically saying Google lambda is a it's what we call a large language model
so it's basically a very very large neural network designed in a certain way
they're all designed in a very similar way and it has more parameters in it
than we've ever seen really in a model right or GPT-3 is also very very big
and so really what this brings to the table is not so much something new that
we've never seen before in AI it's just it's this huge you know orders of
magnitude bigger than the kind of networks I would use to do you know
complex imaging tasks and what they've basically done is they've trained this
this model to read a sentence and then predict what the next word will be and
so you could imagine but if you wanted to do this by hand and you had infinite
resources you could just look at every sentence has ever been written by humans
and work out for any given let's say 10 words what the next word will always be
and if you did that and you had that list of all the possible inputs you do
pretty well at generating sentences because at the end of the day that's
what people say right this is you've got it on record as what they've said in the
past you can just say those things again and so this model is one of those this
model is one where you put in some sentences so you might put in a
sentence that says what do you think about quantum physics and then what the
model will do is predict the next likely word and it will probably say well I'm
going to start by saying what I think is and then generate some plausible text on
quantum physics because people have written about quantum physics before and
that data is in the training set what it hasn't done is learned what quantum
physics is or connected to an internet resource that has information on quantum
physics and looked it up so in some sense it's a bit like the you know in
Star Trek you've got a computer you can talk to and they often ask the computer
to do things like you know put the shields up or whatever yeah computer dim
lights it's like that but it's not connected to any kind of anything on the
ship so it just talks to you and talks back but it never actions anything it
never has you know it's just going from the text in the training set and I
think that's something that's perhaps lost a bit in in when it when it's
discussed it's but it's not connected to anything it doesn't even have a memory
basically and so they can't reflect on past experience because it has no place
to store past experience it has no record of those events and so when it
produces sentences that look really really interesting they're actually just
really interesting sounding sentences you know and I think so anyway I mean if I
sort of digress slightly but you know in this particular case what happened was
someone from Google who I think was in the ethics department I don't think he
was actually responsible for developing this AI basically said look at this
chat I've had with it don't you think it's sentient basically is what he said
and the answer I think from me and pretty much everyone who understands these
models was no it's no it's not and what and I think the thing that bothered me
most about it was not particularly one person saying this because he's very
entitled to his opinion right you know I think I think it was that the media took
it massively seriously and it was all over everywhere is this the next thing
and that bugs me somewhat because I don't think it helps for conversation like
you say right people start people who don't know what a big a big model a big
language model is are going to be a bit worried about this and there's really no
reason at this time to be worried and like that bothers me slightly which is
why I do my videos to try and tell people about it I mean the problem is
the movies predict this happening and then people see this stuff in the news and
it's like it's the end of the world and end of my job Arnold and the robots are
going to take over so it really doesn't happen it doesn't it really doesn't help
and I like what you said I mean in your video which I'll link below you said
something that I thought was hilarious you said can python functions get lonely
yeah can you explain what you were saying by that yeah so one of the
comments in the original chat transcript between this researcher and his friend
and his colleague and this lambda AI was do you get lonely and it's spouted off a
whole paragraph about how lonely it is and it doesn't make any sense because
it's a function call right so you put in your words at the top it runs of what
is essentially a big transformer network which is pre-trained on all this data
and then it spits out words at the bottom which you read and then it stops executing
right because there's no kind of ongoing process like there is it might I mean I like
to think that when I'm not immediately saying something to you I'm still there's something
going on in there right maybe I mean you know I can't prove it to you but but this is not the
case you know and it's just like when you run I mean I made a joke about it but when you run
you know reverse string in python you don't worry that it gets lonely the rest of time
because it's not executing that's just some code that executed it finished executing and it just
lies dormant in memory doing absolutely nothing of interest and that's for me kind of what this
model is doing if they developed a model that was always on in some way like maybe it was always
doing something and it had memory and it had storage I could I still probably would think
I would need some convincing but it had any kind of you know higher level thought process
but at least it would be plausible you know it would sort of think well at least it's got
something going on in there but I just don't think it's designed that way it's designed
as a very very big reverse string and you know I don't worry about those things being sentient
yeah but it's crazy I mean I mean the well I mean in my opinion because they
kind of they were implying that this AI or whatever was like a human or equivalent to a human
and it seems like that's quite a stretch but in you know popular popular culture that's
what people equate to AI it seems yeah that that really that that's I think the big issue right
is is that a lot of people get bogged down deciding well what does sentient actually mean
and that doesn't interest me because when anyone uses the word they're not using it in a different
definition they're using it in the definition we think of as like termination and sky net right
you know this this researcher wasn't saying I think it's sentient but I define sentience as
something like a slightly combinated if statement right he was saying I think it's like a person
and it's got memories and it's got experiences and it gets lonely and it needs a lot of feelings and
that's mad yeah and and without with any with zero evidence to support this and indeed not so much
evidence is just it doesn't even make sense so I think you have to be extremely careful using the
word sentient not because you might have a different definition but because everyone has
the actual same definition right which is actual you know human level cognitive ability but you
know which so I don't spend a lot of time worrying about what the definition of sentience is because
if I go to someone in the conversation and say this is sentient I think we both understand
implicitly what that means to me to say that and so I don't I think that arguing about the
definition is a bit silly because we actually all secretly agree on the definition yeah I mean
I think for the general population I mean I'm not I'm not into the AI piece like you are and that's
why you I want to talk to you about it you know I just think people go off movies and popular
culture that's sort of what what people that's the impression they get and that's why it was so big
on the news perhaps but can you explain AI versus machine learning and like what is machine learning
what is AI and perhaps just take us down the road now yeah okay like teach us you know sort of the
basics of the stuff yeah so AI is misused in the sense that it's now a catchall right and I will
admit I do that to an extent myself and it's partly because I'm lazy right I think I think it's
because it means I don't have to define the exact thing that I'm doing right at any given time car
engines are slightly different but they will at the moment I mean I say they will the combustion
engines all do much the same thing even though one's got more cylinders and one's got fewer
cylinders and one has a turbo and one doesn't you don't say you don't miss it well I don't
go on about those details I just say I've got a car and it goes so AI I think is a catchall that
includes machine learning so you've got AI as a big kind of thing of stuff with loads of stuff in it
and even my maze solving video where I just do very simple looking around the corridors of the maze
would be defined in some sense as AI right but the Dijkstra algorithm that we use to do network
routing and things and other similar algorithms you could define them in some ways as AI because
they adapt to messages coming in and they change weights and paths and things but we wouldn't go
as far as to say they were you know anyway you know smart in some sense right so I think AI is
quite a broad term and then there are things like genetic algorithms evolutionary algorithms which do
slightly different things they are arguably less popular or less prevalent perhaps will be the
right way to put it but they also come under the umbrella of AI so AI is this very big umbrella
term which basically encompasses most things where you could imagine it was sort of intelligence
and then in that you've got machine learning and machine learning is just the idea that you want to
try and program a computer without having to program it essentially you want to give it some
examples or some other mechanism from which to learn and it comes up with its own rules for what
it's going to do so a decision tree is a good example of a very simple you know conceptually
simple machine learning approach where you have some kind of data and every time you make a decision
you just you just split it in two so maybe you're trying to analyze financial data decide whether
people get a new credit card right so the first decision you make is have they ever defaulted
on a credit card yes goes this way no goes this way and then the next decision is okay
what's the current credit limit it's it's above 7000 it goes this way below 7000 goes this way
and you just split this data into two and two and two until at the end you get the actual
nodes that have the decisions on right and it's machine learning because what you can do is you
can you can basically create this tree but actually change the numbers and values in it and the
decisions based on the data so you can say well actually maybe 7000 doesn't work that well we're
going to have it at 6500 and change the thresholds and things and you can do this all automatically
in the training process so that's the kind of thing we're talking about with machine learning
now what happens of course is there's a big push in deep learning which like you know I can also
talk about but yeah be great yeah because I mean we just hear the you know I just hear these buzz
words I mean preparing for this interview just like buzzword off the buzzword off the buzzword and
I think a lot of us you know who are not in this sort of field but are interested in it you know
so yeah if you can define as much and like yeah yeah sure so I mean so you've got yeah so you've
got AI right which is which is right here in some subset of Axe Machine Learning which includes
what I would kind of call traditional machine learning like support vector machines decision
trees random forests right these are all linear regression even right where you're just fitting
a line to us to some data and then we have things like slightly more complicated algorithms like
artificial neural networks which they I mean they kind of take some inspiration from our brains
but I would I would be very careful saying that you know to me I think you know to suggest it's
like our brain is is is is iffy and so yeah yeah but they have a name yeah that's what they're called
and then what we've basically done recently is we've made them much much bigger right and we've
introduced other terms like convolutional networks and transformers and things but for the sake of
you know this sentence they're just bigger deeper networks that can learn more impressive functions
so they can map that input to that output more effectively right because that's what you want
to try and do you've got some data you've got some predictions you need to make on that data
and your hope is that once you've trained it some new data comes along and you can make some good
predictions right I mean let's think of an example suppose suppose I want to you know do um MRI
segmentation for medical imaging right so I have 50 patients some of whom unfortunately have some
kind of illness some of whom don't and I train the network to try and find the ones that have
illness my hope is that when I then sort of fix that network in place and bring in some new patients
it will be able to say whether they have that illness or not that's the idea and we'll have
done that by basically reconfiguring itself based on the examples I gave it to begin with
so doing a technology example it could be something like spotting is this a virus or is it just
yes exactly right and in fact you know modern anti-viruses will include some kind of machine
learning element probably so you know you might have features derived from so what we what we usually
put into the front of the network is something we call features which is um our way of just saying
input data right so sometimes you've crafted those features like you've chosen what you think is
interesting features to give the network and sometimes you'll just shove something in like
you know in anti-virus you could you could choose things like how many system calls does it make
or you know how many x how many bytes is the executable or how many of this particular character
does it have in the executable and you could choose those features because you think they are
indicative sometimes of malware or not malware you stick them in some kind of a machine learning
approach with a load of examples and then say right now change your weights and change your rules
internally so that on this training set your prediction is as accurate as possible right
and so let's say you do that you have a hundred thousand malware and regular samples you give it
to your AI and you just over and over again say right you got that one wrong check reconfigure
yourself so that next time you get a bit better at predicting it you do that over and over again
and the hope is then that when a new virus comes along that you've never seen
those same sort of should we say suspicious things exist in it and the network flags that up that's
the idea so the the training data is like the the stuff you give it initially which would be this
hundred thousand like virus and not virus and then you when you say weights you like it's basically
saying like if it makes like a hundred system calls rather than ten or you said some kind of
threshold is that right yeah so okay so in a decision tree or something like that that's what
would happen there would be some kind of threshold decision based at some point during it for a
neural network it's a little bit more complicated and it's what you actually do is you treat all
these weights just as numbers and you just calculate mathematical functions based on those
numbers so what you might do is multiply all of those numbers that come in by some weights
let's say you multiply one of them by two and one of them by negative four one of them by a half
and then you add them all up and what that does is take a different amount of each one
and then you and then you repeat that process over and over again to try and basically learn a
complicated mathematical function that's really the only thing it does you know you're essentially
trying to fit a really complicated curve through the data essentially so that you can distinguish
between real and fake malware or you know regular executables and malware and and so the weight
when I say weight what I'm really talking about is the parameters of my model which influence
this mathematical function so the and then you would adjust the the the weights and the mathematical
functions based on the result did it get did it correctly determine that this was malware
exactly so so let's suppose we were doing malware right so we think one an output of one means it's
definitely malware and an output of zero means it's definitely not malware an output of 0.5 is not
very useful to us because we don't know um what we do is we put in a piece of malware or many pieces
of malware we run through let's say our deep neural network or whatever it is we're running
and it will produce a value between zero and one and then we say well look you gave us a value of
0.7 but actually it was malware this time so you've got an error of 0.3 I wanted you to produce
0.3 higher for that one than you did so can you adjust your mathematical function to next time
when I put that malware in produce a value of one and not a value of 0.7 now if you do that for one
malware sample it's going to be the worst machine learning ever because you're just going to give
it something else and it's going to go I don't know what you mean right because this is nonsense
so you have to give it a lot of data and and I guess what you're trying to do is calculate the
best average mathematical function that does the best job it can in the general case of all of these
malware's right massively optimizing one malware is not useful because it's not going to generalize
it's not going to apply in real world to some new malware so you put in 10 20 100 different
malware's at the same time and all of them are trying to go to one or go to zero and you're
trying to change the weights to simultaneously do all of those at the same time that's that's what
machine learning does basically for a neural network the the process that actually doing this
it's it's it's complicated to describe but it's it's it's fairly intuitive what you do is you
because all these weights are involved in the calculation you put your features in for your
malware you go all the way forward through the deep learning or the network then you calculate
your error and then you go backwards adjusting the weights based on what you just found out
right essentially and so if a weight doesn't have any impact on the decision because let's
say it just sets everything to zero you won't adjust that weight because it's not useful you
will only adjust the ones because you're calculating the influence that each of these weights has on
the error you adjust all the ones that have the biggest impact and so the network will kind of
try and look find its way towards a good function you know and we use a process called stochastic
gradient descent often to train this so what we're doing is we're picking random malware's
and putting them in and that will often it will often get them wrong right because it's never
seen any of these things before and so over time maybe you just nudge it slightly in a better
direction and then over many thousands of looks it slowly converges on something that actually
makes reasonable decisions that's you know that's the idea so it's a long process and is this what
you would call supervised or is it this is definitely supervised so supervised is where
you have your your your label ground truth what we you know are we have labels for data so we're
putting our data in we have some labels against which we can compare and that means that we have
some idea of how right or wrong the network is in any given case right and that's very very useful
and the majority despite what people might say the majority of deep learning or machine learning
is supervised learning because it gets results the quickest if i want to detect some illness in
MRI having examples of that illness is going to be much much easier so Mike supervised learning
if i understand it right is you giving it examples of like you said actual malware or actual like in
your MRI scans problems yeah and and then you supervising that it got it right and then you
correcting it yeah and it makes things much easier right so the majority of of machine
learning is supervised because it is simpler and easier to do if you work in applied areas like
me where you're trying to get things to work really really well if you work in industry a lot of what
you're trying to do is just minimize that error term you're trying to get as close to good predictions
in the for the majority of cases so getting some examples is going to get you to converge on that
much much more quickly this is you know distinct from something like weekly supervised or unsupervised
learning and there's lots of different variants so unsupervised learning is you don't have any
labels right maybe the data is too big or the data is too hard to annotate or no one can agree
on what the labels are and so the best you're going to be able to do is kind of partition the
data into plausible groups so you can say well look we don't know exactly what all these things are
but we know that this group is distinct from this group and that's unsupervised so an example would
be suppose suppose you work for an online shop and you have a load of data on what different
customers have bought one thing you might do is start trying to group customers into some kind
of plausible groups based on roughly the things they they're not all going to have bought the
exact same thing right so it's not going to be trivial but they might have bought so someone's
buying mostly dog related stuff and someone's buying mostly technical gadgets and then what
you can do is say well look i put all these people in the tech group and this guy bought this really
nice new microphone or news camera so i'm going to recommend that now to other people in the group
and maybe i get a few hits and i and i sell a few cameras that way um you can get much more
complicatedness but that is an example of perhaps unsupervised learning where you don't need to have
some kind of label for everyone you don't need to have labeled me ahead of time as a tech enthusiast
you just need to look at the stuff i've been buying i know it's the same as always other people
and know that that's interesting right rather than we know exactly what it means that's a great
example so in other words you didn't tell the machine who the people were it discovered that
based on the the patterns of data right yeah and it didn't really even discover who they were it mostly
just grouped them and that allowed us to make decisions based on the fact they were grouped
it now as that happens i've given this group a label of tech enthusiasts but of course you don't
need to even know that you just need to know but on average they buy more tv's than everyone else so
maybe send them emails about tv's you know it's that kind of idea you can still do supervised
learning and other forms of learning with stuff like marketing and and recommender systems and
things but you might imagine that that could be one way you would do it uh and i think it's a good
example the problem i see like from listening to you is reality versus the movies or reality versus
the news cycle because you always hear about google doing like um like teaching a machine to
play chess or whatever the games are and it just like magically gets this done um and it teaches
itself kind of like not even knowing what the the rules of the game are so that is a that's
something called reinforcement learning a lot of the time reinforcement learning is still supervised
learning okay it's just that you get the labels as you go from playing the game so the way it works
is you know what you might do is you play a random game of chess where you literally move at random
right and you lose and so you get a strong suggestion that made me next time don't do that
right that was stupid so now you move slightly less at random than you did before but it's still
pretty bad and you lose again but you know you learn a bit and this is basically how they train
it so what you do is you play millions and millions and millions of games of chess and every time it
goes well you just learn a little something about what was better than than that time than
was the time before we're still talking about a network which is a big mathematical function
right so we're still talking about something that has weights that you adjust so that when you put
an input state in you get the best desirable output state which in this case of course is you
won more often than you didn't for me it i mean these are fascinating because they're trained in a
very different way to the way i would train the network i come up with labeled data and i put it
in like and i use the examples with reinforcement learning you have to start trying to give it rewards
which is where it gets its labeled data from so is it is it is it is it better that you go 25
moves in chess before you lose or is it better that you checkmate regardless of how long it takes
right you know because you might end up in a stalemate you know there's things with playing
chess where you might say well look these other goals are also important or something like this
and so you could spend a lot of time thinking about different ways you could train the network
which i think i think is really interesting perhaps i'm misinterpreting it but it sounds like
the hype cycle versus reality there's a big disconnect like the people have this vision
that the robots are going to take over but you don't think that's going to happen like anytime
soon right yeah i mean i what the funny thing is like i did a lecture once where where i said to
everyone you know the char one hash function is absolutely fine right and then the next the next
day yeah google released their their two pdfs that had the same char one hash right now that's
embarrassing when that happens as a lecturer you know um so i you know i don't want to say you
know i don't want to say it could never happen what i would say is that the something that's
really really good at go or something that's really really good at chess is really really good at
chess and that is it right it will do nothing else right as far as i can tell human chess players
also good at other things and we we don't have that generalizability yet and i don't know i think
sorry sorry sorry is this this age the difference between like specialized knowledge and yeah i mean
again we could get bought we could get bogged down in what what the definition means but i think
that our official general intelligence to most people watching is just something that kind of
is a bit like a human right and certainly is very very general so you could say right this now is a
totally different game learn to play it and it will go off and play it and it will still remember
how to play chess and it could play all the games you know and it's just super it's super impressive
though that doesn't exist will it exist i don't know i mean i think that if we keep making these
models bigger we'll probably get to a point within a few decades where they are very impressive at a
lot of different tasks but i still am not convinced yet that we've got any real strategy to get past
the idea of just you need to like have a load of data right or a load of play a load of games
my daughter can have a go at playing a semi-coherent game of chess just having been told the rules of
chess and she didn't you know let's say she's not winning any competitions right not yet but she
didn't need to play a million games against herself to work out what to do right there's something
that she is doing but is much much more impressive than what this ai is doing that isn't to say the
ai isn't incredibly impressive it's just very different i do think that the hype cycle is
is very different to what we actually see on the ground which is that basically a lot of the time
i mean you know aside from playing games and reinforcement learning and large language
models the majority of what people are doing is trying to find objects segment images and these
things are mostly done in a supervised way and they don't generalize but we don't care because
we were trying to find those specific objects if that's good and if we need to do something else
we'll retrain them to do something else yeah because my next question i think you've already
given us the answer and maybe you can just elaborate is what is ai really good at compared
and you know it just seems like it's like automation automation has its place but you still
it takes like it's and just correct me if i'm wrong but it seems to take away like low level
tasks that are boring and monotonous or difficult for a human to do and then humans can concentrate
on other things um yeah what is ai really good at and where do you see it going yeah so ai is
about automation is exactly what you what what you write on but with the caveat that you've got to
have found a good way to train it to automate it won't just automate stuff you can't just stick it
on a on a on a production line and say automate that for me because it we won't know what to do
so yeah from my point of view what ai is really good at is so before i worked in you know at
machine learning and deep learning this was a normal computer vision researcher right and so i
was you know this is like early 2010 something like this time before i mean literally deep learning
appeared in about 2014 and before that we didn't have it right there were some networks but no one
was really paying attention to them and everyone was just doing normal stuff right and what i would
describe as image processing so if i wanted to find something in an image what i would be trying
to do is come up with rules in my head about what i needed to do to that image to find those objects
and then i would implement those rules and code so i'd say okay first of all go like we're trying
to find you know something in mr i so first find all the bright pixels now find all the bright
pixels but form a continuous blob that's of this size you know and i start and i try and design
an algorithm to find whatever it was i was finding through these if statements and rules
right it's just code and what machine learning lets me do is not worry about the the rules because
the problem you have if you do if you do it by just coding is you get stuck in edge cases you get
stuck on the you know you solve 90 percent of the issues pretty quickly because 90 percent of images
of trivial and then that 10 percent you just will never solve because they're just they don't apply
the normal rules that everything else does and you know if you're looking at a sort of medical
diagnosis ai or program that's a huge problem but you're just going to miss 10 percent because you
couldn't deal with the edge cases and so from my point of view coming from image analysis that was
what it let us solve it allows you because this mathematical function is very very complicated
it can learn the edge cases if you give it sufficient numbers of them so you just so actually
a lot of the time when i work with biologists or medics and and and they present me images i'll
say these are all very nice but have you got any worse ones have you got any really bad ones because
the more because the more bad stuff we give it the better it will get at at working when those
things come along if you train your ai on on a on a three or seven tesla mri scanner which is super
clear it won't work when you run it on a 1.5 you know so maybe you want to get samples from all
the different scanners you know what i mean there's these kind of decisions it actually means that
the problem is no longer one of which if statements do i need to write to get this to work it's now
what kind of data and how do i present the data to this network to get it to work right and that so
it becomes much more about the input and output problem than it becomes about what you do in the
middle which it just learns that's great i mean i just want to see if i understand the terms i i see
terms like artificial intelligence machine learning neural networks and deep learning we've covered
all of those is that right yeah so i mean to go into some deep learning what i would say in terms
of definition of deep learning is you know earlier i said that you might derive features for your
problem right so suppose you're trying to sell sell cars what you might do is you might come
up with some properties of cars that are relevant to its purchase price so you might say okay how
many cylinders has it got how many how much horsepower has it got has it got leather seats
right has it got air conditioning and you would have all these features and you would come up with
a list of let's say a hundred different properties of a car and you would stick them in some ai
decision tree neural network doesn't matter and then it would spit out a value for you and you
would train it on a bunch of examples and you would hopefully have a system that could really
nicely predict the value of cars right now the problem is that suppose i've missed out a feature
that's absolutely crucial to the value of cars suppose i forgot to put in the engine size and it
turns out that 90 percent of the car's value is on how big the engine is right and so i've given it
bad data then right and and then i have to go back and have to put data in again and have to train it
all again and you know it's a waste of time and what will actually happen if you tried to implement
a system where you missed out features is it would never work as well as you hoped and a car
would come along that looked good on the features i did give it but actually had a really small
engine and it would massively overvalue it or something like this right or undervalue it and
you give away a really nice car for almost free what deep learning does is something called
representation learning that's thing because it's deeper it has the power to also learn the
features as well as the decision based on those features so you might say well i can't bother
to decide to decide all these features so i'm just going to dump the raw specs or a picture of the car
in at the front and have it determine for me the value right and it would be looking at the size
and model shape the color the size of the wheels and it would do all this and it would extract
the features first inside the network and then it would use that to make a decision so deep learning
is often described as just the same network but deeper but actually it's a different i think a
different paradigm where you're basically no longer hand crafting what you put in you're just
shoving all of it in and it works out what's useful and what's not and so you've explained neural
networks already is all right yeah i mean so a neural network yeah so we talked about how a
neural network calculates a weighted sum so it takes some features at one layer and it waits them
and then it calculates the sum of those for the next layer and we have something called an activation
function in there as well which allows the basically makes the function a lot more complex
right makes it non-linear makes it learn more powerful things modern deep networks actually
have additional operations like convolutions and pooling operations which work on grids of data
often right it doesn't have to but you know often they do so what you might do is instead
of calculating a weighted sum of all the features you might slide a filter over the image to calculate
filters every location and so it's like a sort of a map of activations and then you might repeat
that process over and over again so what what um deep networks are capable of doing convolutional
networks is determining features across the whole image right or across the whole of the data stream
and then repeating that process over and over again that's how they that's how they develop
their representation learning right they use the filters to create interesting information
before they make a decision you teach security at university but you're doing a lot of the ai side
ai stuff as well um i think the the question a lot of people will be asking including myself is
do i need to learn some kind of programming language and which language would it be would
you recommend and do i need to learn like a whole bunch of math because it sounds like
you know math is one of the or maths as we say in the uk is something that you have to
it because you have to learn is that right to to get into you know having having some idea
of what's going on mathematically helps in it from an intuition point of view right because i
understand the back propagation process which is how the actual weights have adjusted and that
allows me to understand what would happen if i connect two bits of network together in a weird
shape or something like this but in practice actually day to day running of a deep network
doesn't really involve any maths right now and and and there is some disagreement in the in the
community about whether you really need to know math at all right you know i'm i sort of go back
and forth i sometimes think it's useful and i sometimes think it's not i certainly don't think
people should be if they don't like math should be put off from having a go because i'm always an
advocate for have a go at something you might really enjoy it right what i would say is that
actually running a neural network doesn't require a lot of maths it just requires a bit of python
basically so that's the language you normally use python um i have a love hate relationship with
python i think but sometimes sometimes i just want to declare what my types are and stop having
runtime errors for half an hour into something but what what they've done is they've got a lot of
libraries like tensorflow and pytorch that operate that sit in python and then they they very very
quickly go go down into c and cuda for fast matrix multiplications which is all the stuff that goes
on behind the scenes in these neural networks so they're very very quick because they're not
implemented end-to-end in python but python gives you a very convenient and nice way of doing all
this you know loading the images it just appears as a kind of array you know you might have a
list of images that you use for your data set and then you put that into a network and so on
right you know a lot of it's just inputting out putting lists and dictionaries like the rest of
python and so it makes things quite easy to use you know you'll have to look at python but python
for me is is a is a nice enough language in a sense that it's fairly easy to pick up particularly if
you already know a language it's often language people recommend you start with anyway because
it's fairly relaxed about syntax and just you making a total mess of it so that's you know
that's always good um but doing going from knowledge of python to having implemented a deep
network will not take you very long you will understand everything the first time but you
can get give it a go and you can watch it training and you can start to you can start to pick up on
what's going on and then you can make a change to the network and maybe improve your performance
slightly do you have to write it from scratch or it's like it's TensorFlow or something that like
Google have created exactly they do a huge amount of heavy lifting right which is one of the reasons
why you can kind of get away with not having always mathematical background so I mean I use PyTorch
mainly and in PyTorch it handles all the weights and learning for you so you say I want my network
to have this many layers and I want my layers to be like this and I want it to take an image of
this size and turn it into a 10 class classification problem where I'm picking cats and dogs and
airplanes or what have you and then it just trots off and does it and it just goes it goes puts the
images in it retrains the network and it puts the images in it retrains the network and it
iterates and you can watch your learning rate really watch your loss function go down as it
gets better and better every iteration until eventually you can then just deploy it in some
sort of production code or whatever and maybe without maybe test it first but you know like
it does a huge amount there's a lot of mathematics behind the scenes not all of it particularly
complicated but it's definitely a lot of it and it's all massively parallelized on a GPU
and you know so you can actually get away with a few dozen lines of code to get a pretty
nifty neural network going let's see that that's good to hear because you know when you start
talking about the ins and outs it's like this sounds so complicated so it's like PyTorch just
a library or something that you would import and then just you just send some command stretch yeah
Torch started off as a machine learning library in um well it was written in C presumably but
and CUDA but it was it was for Lua and again that's another language I have a should we say a very
strong mixed opinions about um however since then TensorFlow came along in Python I think it was
seen as Python's more convenient for the majority of developers and so PyTorch spawned off Torch
basically and is now the dominant library for this so TensorFlow is Google and PyTorch is Facebook AI
or Meta AI I suppose it is now and that's the one you would start with here if you were starting
I yeah so this is it people have different opinions on this I think that the just give us your
opinion because you know we I just sorry to interrupt I just want to put it this way I like
to have parts like when I talk to experts like yourself it's like okay I'm new now how do I go
from like knowing nothing to like at least getting started if so if you anything you can help me like
well I mean I tell you whatever yeah yeah I would start with PyTorch personally right from a research
point of view PyTorch is more flexible which helps me but it also doesn't require a lot of lines of
code um to get running and it also does a nice thing where it doesn't hide away all of the details
there's just enough detail in there that you can kind of type away and it will kind of work
but you do see the network going forward and learning and optimizing the weights and things
like this there's a few lines of code but do that that you can kind of look at and go and then you
kind of pick these things up right it's not a case that you just type pytorch.train and pass it
your input data and then it just does it and you have no idea what happened which I like because
that wouldn't be fun right but also you wouldn't learn anything so I like PyTorch from that for
for that reason it also has a load of examples so if you go on the um if you go on the github
repository for PyTorch or TorchVision you get the the whole you've got all the like core networks
big from the literature in there and you've also got some examples of simple data problems and
things like this that you can run from end to end and just basically run the file and it will
start training a network and then you can delve in and see what it is it's actually doing do you
need I think you mentioned a GPU do you need specific hardware or can you just run the single
laptop you need you really need a um so PyTorch uses CUDA right so you really could do with using a
I don't know if PyTorch supports OpenCL I can't remember ideally you would have access to a CUDA
enabled GPU that would make this process much much faster so as I mentioned the back end of
of PyTorch and most of these deep learning libraries is written in C and CUDA and it's just
massively parallelized matrix modifications most of the time and that is something that you don't
want to be doing on a CPU right you can for very small networks run it on a CPU so if you download
the simplest PyTorch example when you run it on a CPU it will run okay and you'll be able to see
what happens anything with images anything where the dimensionality is high you're going to be waiting
half an hour for it just to finish one pass and it won't get anything done one other thing you might
like to try is Google Colab so Google Colab is um is Google's public Jupyter notebook style
laboratory environment that actually provides limited time but fair use access to GPUs to
to have a go at these things right it's a it's a great place to go and you can also download
loads of Colab notebooks existing implementations to test them out that's a great place to start
you know I'm a big fan of Google Colab I think that as a platform it's really really useful
um and you can actually pay us I mean I'm not I don't work for Google Colab
you can pay a small subscription to get access to higher access or more preference
more um should we say higher priority access to GPUs right that's what you know you can get
so it's it's like fair use normally so if you if you use it a lot you might have to wait for
half a day or something I mean in the best case scenario I'd come and attend one of your classes
but not everyone's going to be able to do that do you have books or online courses or stuff that
you would personally recommend yeah so I mean what I always recommend to people is is Andrew
Ung's Coursera course on machine learning is a great place to start right now it's lower it's
lower level so Andrew Ung is very well known in the machine learning community he's you know he's
done a load of great work um his Coursera course is really good it's quite mathematical right so
that isn't necessarily a problem you just have to go in knowing that's going to happen right
but what it does do is it gives you a lot of information on stuff that we haven't really
talked about so things like watching your learning rate your loss your your loss function go down
right so if you if you draw a graph of your loss which is your error at the end of your network
over time what should happen is it gets better and better right it goes down
but it might not go down it might sort of do this a lot of machine learning is understanding
what that means and what you could try and do to rectify that problem you know for the first
for your first day of machine learning it's not important but it over time some of the concepts
that you talk about in this machine learning course will come in handy and there's a book by
Yoshua Benjo called Deep Learning which also again a lot of maths in it but it covers a lot of the
core concepts personally I'm a kind of I've always been a kind of learn by doing kind of a person
right and so in what I like to do is just get on the pie torch or the TensorFlow tutorials and
just start running some stuff and see what happens and if you know Python or you know any language
that's even plausibly similar to Python you're you know you're gonna have you're gonna have a great
time doing that I think especially for a lot of the audience if they starting out with us let's say
there's younger people who starting their careers and I spoke about this in the beginning about
you know people are worrying that this will take their jobs away but I'm assuming there's
whenever I see the hype cycle there seems to be a lot of demand for AI skills huge huge demand
yeah yeah there's a huge demand so I would say there's this kind of you know you've got your
different levels of sort of data analysts right so you've got people who are pretty good of a
spreadsheet up to people who are working trying to train self-driving cars and things I suppose
if I'm being sort of a bit random in my choices of job description and you know you've got anywhere
in between there's huge demand everywhere so you know if you have any kind of data analysis ability
if you can look at a table of data and start to pick out patterns and start to work out what's
going on and make predictions on that data that's a really useful skill to have in lots and lots of
jobs it's a very very very very popular thing that people have so a lot we have a lot of graduates
who graduate with a few modules in machine learning a few modules in data analysis and things like
this and they're in a really strong position these things are not you know you can learn these
things yourself so you know you can go in I've got a data analysis course it's not very long obviously
because you know YouTube videos but I have some data analysis videos there are lots of data analysis
videos on your YouTube channel yeah yeah on our YouTube channel computer file we have like a 10 part
series on data analysis which is just kind of like a taster but you can have a go at that there's
lots of stuff on data analysis data analysis and modeling and machine learning in some ways go hand
in hand it's often good to have a little bit of a look at both of them because you know cleaning
data for example like you get you get a spreadsheet of data but it doesn't make any sense it's unwise
just to stick that straight into a neural network and see what you get out because there could be
some complete you know it could be missing values there could be errors they could all just have
hugely different scales of data these are all things to think about so some knowledge of how
to prepare that data for let's say a downstream task like machine learning it's a really useful
thing to know how to do as well I love that you're teaching at the university you're teaching
security cyber security type stuff but you're also doing AI so there you see that like that's a
really good mix and I'm assuming based on what you've just said you know it's a really good idea if
you if you're into cyber or want to get into cyber to you know add this to your skill set yeah I
mean I would be hard pressed to find any career that wouldn't be at least helped a little bit by
knowing some data analysis and machine learning because just it just comes up a lot right you know
and and also I mean as you know we already spoke about how people can be misled by the hype cycle
right and and you will be much more resistant to this if you understand how these things work
and that's going to put you in a good position yeah I think that so as it happens I teach security
I partly I find it really interesting so I try and cling on to that module with you know with a
vice grip and not let anyone else have it I also teach cryptography at university as well
we need to get you back for some more interviews man yeah right so yeah by all means but so those
are subjects I find I don't actively research day-to-day but I do find very very interesting
and I do have some collaborations with because we have actual security researchers working at
Nottingham and lots of places we have good collaborations with them there is obviously
machine learning involved in quite a lot of security because it's a it's a it's one of many
strategies for detecting malware or for anomaly detection or you know any smart system that's
doing something but hopefully you don't have to program all the rules yourself so yeah it does it
does help I've got I think I've got a project uh an undergraduate student starting who's going to
look at malware detection with a bit of machine learning as well and so she can bring the knowledge
of the malware I can bring the knowledge of the uh of mostly the AI you know it'll be it'll be great
Mike I always like to ask this question um if you were talking to your younger self let's say you were
18 or you know I don't know you let's say some not everyone is 18 who watches these videos but
let's say they were 25 30 whatever yeah what would you advise someone to do based on you know what
you've seen I think if you're if you're really interested in it in a career in cybersecurity
or a career in uh machine learning it's worth noting that not everyone has a degree that does
those things and that's fine right it's also fine if you do have a degree I see people saying well
you don't need a degree for this or you do need a degree for this I actually think learn the skills
right and then you get a job based on your experience and it's you know and you're going to
have a great time I think that again it's not one of these debates I like to get into because
everyone has their own career path that they want to follow if you're if you're if you did a degree
in something completely different and you've worked in a job you're not really enjoying and you want
to try something new I think that's absolutely fine have a go there's so many resources online
that there weren't 20 30 years ago that there are you know people doing interviews and videos on
different topics that you can just watch and learn about and as I say I'm a very hands-on person if I
want to try and learn a skill I'm just going to try and do it and it will probably go really wrong
the first time um so I think that practice right and this is true of coding as well I think I'm big
big um believer but coding is mostly practice people say like how did you know that was going
to be a bug because I've seen it so many times before you know like because it happens all the
time I think yeah that would be what I would do find something you love doing and do more of that
you know I program at home for fun and it's partly because I find it fun and also sometimes I want
to learn something new I did a video a year or two ago on the enigma machine right I don't need
to program the enigma machine for my job I just thought it was super interesting and I just sat
at home and did it and I learned quite a lot actually about the whole process and the history
of it by just having to implement the thing and so I think yeah I think crack on and learn
would be what I would do I love that I mean and I just have to say this you are Dr uh Mike you you
got PhD yeah is that right yeah in what in what was it in computer vision so I mean
what I really love about this and um this is just my opinion so I don't want to put you on the spot
but um I love that you as someone with a PhD are not excluding excluding people who perhaps never
had that opportunity and I love that you're encouraging everyone you know just to go for it
don't let your limitations or yeah like a resource to stop you sorry I mean as it happens like I
was an I was a pretty average student at school right I mean I didn't I didn't do much there wasn't
much in terms of computer science um in in at school when I was younger it was it was you know
let's use Microsoft Word and and let's try that out and so I didn't I barely did any computing
at all I could only a little I could only program a tiny bit when I arrived at a university loads
of people arrived at university with huge programming experience but and loads of people
arrive with no programming experience and we always say to them you'll all be the same in the end
right like that's the whole point of a degree and it's the whole point of what we teach
I think there's never too late to to get into computers and learn about programming and stuff
I try and teach people to program all the time I mean not all of them are interested which is
annoying um but you know so like if it was up to me all my family would be at a program because
I'd be giving them extra lessons but some of them want to do other things apparently but yeah I'm
not I'm not a gate I don't want to be a gatekeeper because that's not going to get more people doing
cool computer stuff there are some things where a massive specialism is important right you know
I'm not proposing to go into a hospital and start surgery on people because you need a lot of
training to do these things but I also think that if someone wanted to be a surgeon they should
crack on and do the training right you know you know I think you can learn those skills um and
you know we require if you're going to work at university we usually require a PhD and that's
something that universities require but there's a great deal I don't know about the real world
and industry about people who are watching will know way more about than me and that's also fine
right you know everyone's got their own expertise so uh I like to learn from those people and hope
I can teach them a bit about the things I know about I love that I love that another thing I mean I
I said 18 but I I get a lot of pushback sometimes on these videos and I'm not sure if you've heard
this question before am I too old to start learning AI no um no I mean consider also
that the majority of academics who are using AI aren't 18 year old fresh graduates they are
researchers that have been doing it for decades because you know so we've all had to learn it
from scratch as well right like I say deep learning only appeared in 2014 so it's been a mad rush
since then there's loads of scope to learn um and I don't think it takes to get a little bit going
it doesn't take that many hours you know if you want to do something you know around your job or
whatever it is your current life situation is I think it's doable I love that any closing thoughts
no I think um I hope people found it interesting right and I'm happy to come back and talk about
more topics in detail but I think that you know I love um I love my job and telling people about
stuff that I think is interesting so I would encourage those people to go off and and look
into it in a bit more detail and have a go to download a pie talk tutorial and start running it
and you'll train a deep network and then when someone goes all this deep learning is a bit
scary you can go well actually I did that last week and it wasn't that wasn't that difficult
yeah that that's what I'd suggest so for everyone watching please put in the comments below
topics that you would like us to discuss definitely want to try and get Mike back
so um let us know what you want us to talk about uh computer file has a lot of fantastic videos
that Mike has created um so go and have a look at those I'll I'll link some of those below um
please give us your feedback Mike thanks so much thanks so much love to be here
